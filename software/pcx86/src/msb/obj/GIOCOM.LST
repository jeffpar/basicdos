Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:42:40
 
GIOCOM - Communications Machine Independent Device Driver CoPage     1-1
                                                            

                                ; [ This translation created 10-Feb-83 by Versi
				on 4.3 ] 
                                 
 0008                           	.RADIX  8		; To be safe 
                                 
 0000                           CSEG	SEGMENT PUBLIC 'CODESG' 
                                	ASSUME  CS:CSEG 
                                 
                             C  INCLUDE	OEM.INC 
                             C  ; [ This translation created 10-Feb-83 by Versi
				on 4.3 ] 
                             C   
                             C  	PAGE	,132D 
                             C  	SUBTTL  Common file to produce 2-segment 8086 GW-CPM BASIC 
                             C   
                             C  	.SALL 
                             C   
 000A                        C  	.RADIX	10 
 = 0000                      C  	OEMRAM=0D 
                             C  ;Pascal program HFILE searches for the following line - DO NOT MODIFY 
                             C  ;** (VERSION SPECIFIC VALUES) ************************************************ 
 = 0019                      C  	NMLINE=25		;Max screen display text lines 
 = 0001                      C  	NBANKS=1		;Number of graphic planes 
 = 0000                      C  	PALSIZ=0		;Size of OEM color palette 
 = 0000                      C  	DBLCHR=0		;Editor support for KANJI chars 
 = 0000                      C  	KANABS=0		;Kana BASIC (Japanese JIS codes) 
 = 0000                      C  	KANJFN=0		;KANJI String Functions KPOS, KLEN .. 
 = 0000                      C  	JISKTN=0		;&K, &J constants (KANJI) 
 = 0001                      C  	SUPRSH=1		;1=super shift key feature 
 = 000A                      C  	NMKEYF=10		;number of function keys 
 = 000E                      C  	NMKEYT=14		;number of function key traps 
 = 0001                      C  	FKEYON=1		;yes=display function keys 
 = 0001                      C  	SCROLT=1		;Line 25 allocated for status only 
 = 0001                      C  	PLAYSW=1		;for PLAY statement 
 = 0001                      C  	BEEPSW=1		;for SOUND, BEEP statements 
 = 0003                      C  	NMLPT=3			;number of line printers 
 = 0001                      C  	CONSSW=1		;Device CONS: 
 = 0002                      C  	NMCOMT=2		;number of COMmunications ports 
 = 0001                      C  	NMPENT=1		;number of light pens 
 = 0004                      C  	NMSTRT=4		;number of joysticks 
 = 0000                      C  	GWCASS=0		;Cassette switch (CSAVE,CLOAD,MOTOR) 
 = 0001                      C  	IBMLIK=1		;IBM compatibility package 
 = 0001                      C  	IBMTOK=1		;IBM token compatibility 
 = 0001                      C  	DYNCOM=1		;Dynamic communication buffers 
                             C  ;** (END OF VERSION SPECIFIC VALUES) ***************************************** 
                             C  ;Pascal program HFILE searches for the previous line - DO NOT MODIFY 
                             C  ; 
 = 0015                      C  	NUMTRP=NMKEYT+NMCOMT+NMPENT+NMSTRT 
 = 0001                      C  	GW=1			;GW BASIC 
 = 0000                      C  	ESCCTL=0		;Escape Sequence processing in SCROUT 
 = 0000                      C  	GWDBUG=0		;DEBUG statement (TEST VERSIONS ONLY) 
                             C  				; Support is in BINTRP.MAC and GWSTS.MAC 
 = 0000                      C  	SIXDIG=0		;# of digits of accuracy assumed when formatting 
                             C  				;single precision numbers for output. 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:42:40
 
GIOCOM - Communications Machine Independent Device Driver CoPage     1-2
Common file to produce 2-segment 8086 GW-CPM BASIC          

                             C  				; 0 := 7 digits 
                             C  				; 1 := 6 digits 
 = 0000                      C  	CASSW=0			;CASSETTE SWITCH 
 = 0001                      C  	LABKEY=1		;^T (LABEL) key capability 
 = 0001                      C  	HGHBIT=1		;8-bit characters (ASCII & Graphics) 
 = 0001                      C  	QUEUE=1			;Queued painting algorithm (vs. stack) 
 = 0001                      C  	GIO86=1			;BASIC-86 Generalized I/O 
 = 0001                      C  	SCRNIO=1		;Screen editor 
 = 0001                      C  	SCRN86=1		;8086 Screen editor 
 = 0001                      C  	I8086=1			;CROSS ASSEMBLING FOR 8086 
 = 0001                      C  	MULSEG=1		;MULTI-SEGMENT 8086 BASIC 
 = 0000                      C  	SMALL=0			;"SMALL" VERSION OF 8086 BASIC IF SET 
 = 0001                      C  	TRUROM=1 
 = 0000                      C  	SBC86=0			;SBC 86/02 BOARD? 
 = 0001                      C  	SHORTJ=1		;USE INTRA-SEGMENT SHORT JUMPS 
                             C  				;IN 8086 CODE 
 = 0001                      C  	LNGVAR=1		;LONG VARIABLE NAME SUPPORT (EXTENDED ONLY) 
 = 0000                      C  	SHTERR=0		;SHORT (2 CHAR) ERROR MESSAGES 
 = 0000                      C  	SHTINS=0		;INSTR IN NON-FAST LEN2 VERSIONS 
 = 0000                      C  	SHTLHM=0		;LEFT HAND SIDE MID IN NON FAST LEN2 VERSIONS 
 = 0000                      C  	SHTCHN=0		;ALLOW CHAIN IN NON-5.0 
 = 0000                      C  	SHTPRO=0		;ALLOW PROTECTED FILES IN NON-FIVDSK 
 = 0000                      C  	SHTLIN=0		;ALLOW LINE INPUT IN NON-EXTENDED NON-FAST 
 = 0000                      C  	SHTREN=0		;ALLOW RENUM IN NON-FST VERSIONS 
 = 0001                      C  	INKEYF=1		;ADDS INKEY$ FUNCTION 
 = 0000                      C  	NOIOS=0			;NO I/O STATMENTS (INP,OUT, WAIT) 
 = 0000                      C  	NOPEKS=0		;NO PEEK, POKE 
 = 0000                      C  	NOUSR=0			;NO USR 
 = 0000                      C  	NOCTLA=0		;NO CONTROL-A IN EXTENDED 
 = 0000                      C  	NORUBT=0		;NO RUBOUT 
 = 0000                      C  	NOROMP=0		;NO ROM PROGRAM FEATURE 
 = 0000                      C  	NOATDL=0		;NO AUTO DELETE IN NON-FAST EXTENDED 
 = 0000                      C  	NODOT=0			;NO DOT IN LEN2 
 = 0000                      C  	NOEDIT=0		;NO EDIT COMMAND 
 = 0000                      C  	CRONLY=0		;ONLY PUT OUT CR, NOT CRLF TO TERMINAL 
                             C  				;AND FILES 
 = 0000                      C  	NONULL=0		;NO NULL COMMAND, PUT OUT NULLS IN CRDO & OUTCH1 
 = 0000                      C  	NOVARP=0		;NO VARPTR FUNCTION 
 = 0001                      C  	FIVEO=1			;GENERATE VERSION WITH RELEASE 5.0 FEATURES 
 = 0001                      C  	FIVMEM=1 
 = 0001                      C  	ANSI=1 
 = 0001                      C  	FIVDSK=1		;5.0 NEW DSK CODE 
 = 0001                      C  	FIVLPT=1		;WIDTH LPRINT AND 255 FEATURE 
 = 0001                      C  	HEXOCT=1		;&H..., HEX$, &O..., OCT$ 
 = 0000                      C  	BINCSW=0		;&B..., BIN$ 
 = 0001                      C  	BLODSW=1		;BLOAD, BSAVE COMMANDS 
 = 0001                      C  	MEMIMG=1		;MEMORY IMAGE FILES 
 = 0001                      C  	GENBIN=1 
                             C   
 = 0000                      C  	TRUANS=0		;TRUE ANSI VERSION (STATIC SCAN, ON ERROR) 
 = 0000                      C  	COMMNT=0		;DONT WANT BIG COMMENT 
 = 0000                      C  	INTEL=0			;INTEL PROPRIETARY 
 = 0000                      C  	INTFSW=0		;INTEL FLOATING POINT 
 = 0000                      C  	INTFHW=0 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:42:40
 
GIOCOM - Communications Machine Independent Device Driver CoPage     1-3
Common file to produce 2-segment 8086 GW-CPM BASIC          

 = 0000                      C  	RMX=0			;INTEL RMX VERSION 
 = 0000                      C  	EDIT80=0		;FOR EDIT80 I/O ROUTINES 
 = 0000                      C  	RSHACK=0 
 = 0000                      C  	INTLEC=0 
 = 0002                      C  	LENGTH=2		;  1 MEANS 8K, 2 MEANS 12K 
 = 0000                      C  	BASDEB=0		;WHETHER DBG WILL BE LOADED WITH BASIC 
 = 0001                      C  	RSTLES=1		;WHETHER BASIC WILL USE RST LOCATIONS 
                             C  				;TO MAKE ITSELF SMALLER & QUICKER 
 = 0001                      C  	REALIO=1		;WHETHER SIMULATE (=0) OR ON MACHINE (=1) 
 = 0001                      C  	GENIO=1			;USE G/P ROUTINES 
 = 0001                      C  	CHSEAT=1		;CHSNS eats chars 
 = 0000                      C  	GENDSK=0		;USE G/P DSK CODE 
 = 0000                      C  	LONGI=0			;WHETHER WE ASK "TERMINAL WIDTH?" 
                             C  				;AND WANT SIN-TAN-COS-ATN? 
 = 0000                      C  	INSTSW=0		;FOR INSTR INSTRUCTION 
 = 0001                      C  	SWAPSW=1		;FOR SWAP STATEMENT 
 = 0000                      C  	MDS=0			;FOR INTEL MDS SYSTEMS 
 = 0000                      C  	SBC=0			;FOR INTEL SINGLE BOARD COMPUTER 
                             C  				;1=SBC 80/10, 2=SBC 80/20 
 = 0001                      C  	PURE=1			;ON FOR PURE CODE 
 = 0000                      C  	KILLER=0		;FOR ROM VERSION THAT WONT RUN IN RAM 
 = 0000                      C  	INTROM=0 
 = 0001                      C  	LPTSW=1 
 = 0001                      C  	NCRLPT=1 
 = 0000                      C  	NCRCAS=0 
 = 0000                      C  	ISC=0			;FOR ISC VERSION 
 = 0000                      C  	LPT3=0			;THREE LPT DRIVER VERSION(QUME,OKIA,CENT) 
 = 0000                      C  	TSLPT=0 
                             C   
 = 0000                      C  	DOS=0			;ON TO GEN ROUTINES FOR DOS 
 = 0001                      C  	DISK=1			;FILE I/O FEATURES 
 = 0000                      C  	TIMSHR=0		;NO TIME-SHARING DISK 
 = 0000                      C  	TSDISK=0		;NO TIME-SHARING DISK FOR US 
 = 0000                      C  	SPCDSK=0		;MAY HAVE MM'S DISK CODE 
 = 0000                      C  	SPCNDS=0 
 = 0001                      C  	FAST=1			;CONSTANT COMPRESSION, RENUM & FRIENDS 
 = 0000                      C  	KEYSTA=0 
 = 0000                      C  	ISIS=0			;FOR VERSION TO RUN UNDER INTEL'S ISIS II DOS 
 = 0000                      C  	MDSISS=0		;FOR MDS VERSION THAT RUNS UNDER ISIS-II 
 = 0001                      C  	CPM=1			;FOR CPM compatible operating systems 
 = 0001                      C  	CPM2=1			;VERSION 2. CPM 
 = 0000                      C  	CPM86=0			;FOR CP/M-86 operating system 
 = 0001                      C  	SCP=1			;MS-DOS operating system 
 = 0000                      C  	CPMCON=0 
 = 0000                      C  	CPMSER=0		;CHECK CPM SERIAL #'S 
 = 0000                      C  	CPMADD=0		;FOR VERSION TO RUN ON ADDS CPM 
 = 0000                      C  	CPMA75=0		;FOR VERSION TO RUN ON ADDS SYSTEM 75 
                             C  				;CP/M 
 = 0000                      C  	CPMRSH=0		;FOR RADIO SHACK CPM/M 
 = 0000                      C  	CPM110=0		;FOR CP/M @1100 HEX (INTERALIA) 
 = 0000                      C  	CPMSBC=0		;FOR VERSION TO RUN ON SBC CP/M AT 4100H 
 = 0000                      C  	CPMPER=0		;FOR PERTEC VERSION OF CPM 
 = 0000                      C  	CPMLIF=0		;LIFEBOAT CP/M AT 4200H 
 = 0000                      C  	CPMMDS=0		;MOHAWK DATA SYSTEMS CP/M 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:42:40
 
GIOCOM - Communications Machine Independent Device Driver CoPage     1-4
Common file to produce 2-segment 8086 GW-CPM BASIC          

 = 0000                      C  	CPMCON=0 
 = 0000                      C  	Z80=0 
 = 0001                      C  	DISK=1 
 = 0001                      C  	NCRLPT=1 
 = 0001                      C  	RSTLES=1 
 = 0000                      C  	DRVPOS=CPMADD 
 = 0000                      C  	TRNCHR=CPMADD 
 = 0000                      C  	INLADD=CPMADD 
 = 0001                      C  	LISTEN=1		;ON MEANS LISTEN FOR ^C 
 = 0001                      C  	LISTEN=1 
 = 0000                      C  	LEN2=0 
 = 0001                      C  	LEN2=1 
 = 0001                      C  	HEXOCT=1 
 = 0002                      C  	LENGTH=2 
 = 0001                      C  	RSTLES=1 
 = 0001                      C  	FIVLPT=1 
 = 0000                      C  	I8251=0			;THIS SWITCH IS USED FOR ROSEMOUNT VERSION 
 = 0001                      C  	CONTRO=1		;ALLOW ^O 
 = 0001                      C  	LEN3=LEN2 OR CASSW 
                             C   
                             C   
                             C   
 = 0001                      C  	STRING=1 
 = 0001                      C  	NCRLPT=1 
                             C   
                             C  ; *** OEM Switches which need to be defaulted to 0 
                             C  ; 
 = 0000                      C  	CMPUTN=0 
 = 0000                      C  	DUPONT=0 
 = 0000                      C  	EXIDY=0 
 = 0000                      C  	GESBC=0 
 = 0000                      C  	HEATH=0 
 = 0000                      C  	LOKHED=0 
 = 0000                      C  	MOSTEK=0 
 = 0000                      C  	TEK=0 
 = 0000                      C  	TRSER2=0 
 = 0000                      C  	NASCOM=0 
 = 0000                      C  	NATROM=0 
 = 0000                      C  	NCRBAS=0 
 = 0000                      C  	NCRDEB=0 
 = 0000                      C  	NCRDEB=0 
 = 0000                      C  	NCRELS=0 
 = 0000                      C  	ONTEL=0 
 = 0000                      C  	PCS=0 
 = 0000                      C  	SGSATS=0 
 = 0000                      C  	ALTAIR=0 
 = 0000                      C  	DMC=0 
 = 0000                      C  	PANBAS=0 
 = 0000                      C  	XTNSYS=0 
 = 0000                      C  	NECBAS=0 
                             C  ;******************************************************************* 
                             C  ; Z80 related macros 
                             C  ;******************************************************************* 
 = 0001                      C  	Z80=1			;FOR VERSION THAT RUNS ON BOTH 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:42:40
 
GIOCOM - Communications Machine Independent Device Driver CoPage     1-5
Common file to produce 2-segment 8086 GW-CPM BASIC          

                             C  				;8080'S AND ZILOG Z-80'S 
 = 0001                      C  	Z80MAC=1		;USE 8080 MACROS INSTEAD OF Z80 INSTRUCTIONS 
 = 0000                      C  	Z80=0 
 = 0001                      C  	Z80=1 
                             C  LDIR	MACRO 
                             C  	MOV	WORD PTR A,WORD PTR M 
                             C  	STAX	D 
                             C  	INXF	H 
                             C  	INXF	D 
                             C  	DCXF	B 
                             C  	MOV	WORD PTR A,WORD PTR B 
                             C  	ORA	C 
                             C  	JNZ	_-8D 
                             C  ENDM 
                             C  LDDR	MACRO 
                             C  	MOV	WORD PTR A,WORD PTR M 
                             C  	STAX	D 
                             C  	DCXF	H 
                             C  	DCXF	D 
                             C  	DCXF	B 
                             C  	MOV	WORD PTR A,WORD PTR B 
                             C  	ORA	C 
                             C  	JNZ	_-8D 
                             C  ENDM 
                             C  DJNZ	MACRO	    DEST 
                             C  	DCR	B 
                             C  	JNZ	DEST 
                             C  ENDM 
                             C  ;******************************************************************* 
                             C  ; Define reset routines. 
                             C  ;******************************************************************* 
                             C  FSIGN	MACRO 
                             C  	CALL	SIGN 
                             C  ENDM 
                             C  PUSHM	MACRO 
                             C  	MOV	WORD PTR C,WORD PTR M 
                             C  	INX	H 
                             C  	MOV	WORD PTR B,WORD PTR M 
                             C  	INX	H 
                             C  	PUSH	WORD PTR B 
                             C  ENDM 
                             C  SYNCHK	MACRO	X 
                             C  	CALL	SYNCHR 
                             C  	DB	OFFSET X 
                             C  ENDM 
                             C  OUTCHR	MACRO 
                             C  	CALL	OUTDO 
                             C  ENDM 
                             C  CHRGET	MACRO 
                             C  	CALL	CHRGTR 
                             C  ENDM 
                             C  COMPAR	MACRO 
                             C  	CALL	DCOMPR 
                             C  ENDM 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:42:40
 
GIOCOM - Communications Machine Independent Device Driver CoPage     1-6
Common file to produce 2-segment 8086 GW-CPM BASIC          

                             C  GETYPE	MACRO 
                             C  	CALL	GETYPR 
                             C  ENDM 
                             C  COMPAR	MACRO 
                             C  	DB	73O 
                             C  	DB	332O 
                             C   ENDM 
                             C  ACRLF	MACRO 
                             C  	DB	13D 
                             C  	DB	10D 
                             C  ENDM 
                             C  PUSHR	MACRO 
                             C  	PUSH	WORD PTR D 
                             C  	PUSH	WORD PTR B 
                             C  ENDM 
                             C  POPR	MACRO 
                             C  	POP	WORD PTR B 
                             C  	POP	WORD PTR D 
                             C  ENDM 
                             C  MOVRI	MACRO	B,C,D,E 
                             C  	DB	1O		; "LXI  B" 
                             C  	DB	OFFSET C 
                             C  	DB	OFFSET B 
                             C  	DB	21O		; "LXI  D" 
                             C  	DB	OFFSET E 
                             C  	DB	OFFSET D 
                             C  ENDM 
                             C  INST	MACRO	X 
                             C  	DB	OX 
                             C  ENDM 
                             C   
                             C   
 = 000F                      C  	CONTO=15		;CHARACTER TO SUPRESS OUTPUT (USUALLY CONTROL-O) 
 = 0000                      C  	DBLTRN=0		;FOR DOUBLE PRECISION TRANSCENDENTALS 
                             C   
 = 000E                      C  	CLMWID=14D		;MAKE COMMA COLUMNS FOURTEEN CHARACTERS 
 = 0080                      C  	DATPSC=128D		;NUMBER OF DATA BYTES IN DISK SECTOR 
 = 0050                      C  	LINLN=80D		;TERMINAL LINE LENGTH 
 = 0084                      C  	LPTLEN=132D 
 = 00FF                      C  	BUFLEN=255		;LONG LINES 
 = 0028                      C  	NAMLEN=40D		;MAXIMUM LENGTH NAME -- 3 TO 127 
                             C   
 = 006E                      C  	NUMLEV=110D		;NUMBER OF STACK LEVELS RESERVED 
                             C  				;BY AN EXPLICIT CALL TO GETSTK 
 = 0004                      C  	STRSIZ=4 
 = 0003                      C  	STRSIZ=3 
 = 0003                      C  	NUMTMP=3		;NUMBER OF STRING TEMPORARIES 
 = 000A                      C  	NUMTMP=10 
                             C   
 0008                        C  	.RADIX	8 
                             C  ; 
                             C  ; Useful macros 
                             C  ; 
                             C   
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:42:40
 
GIOCOM - Communications Machine Independent Device Driver CoPage     1-7
Common file to produce 2-segment 8086 GW-CPM BASIC          

                             C  ACRLF   MACRO 
                             C          DB      13D 
                             C          DB      10D 
                             C  ENDM 
                             C   
                             C  INS86   MACRO   A,B,C,D 
                             C          DB      A&O 
                             C  IFNB    <B> 
                             C          DB      B&O 
                             C  ENDIF 
                             C  IFNB    <D> 
                             C          DB      C&O 
                             C          DB      D&O 
                             C  ENDIF 
                             C  IFB     <D> 
                             C   IFNB   <C> 
                             C          DW      C 
                             C    ENDIF 
                             C   ENDIF 
                             C  ENDM 
                             C   
                             C  CALLOS  MACRO 
                             C          CALL    CPMENT 
                             C  ENDM 
                             C   
                             C  POPR    MACRO 
                             C          POP     CX 
                             C          POP     DX 
                             C  ENDM 
                             C   
                             C  ADR     MACRO   X 
                             C          DW      X 
                             C  ENDM 
                             C   
                             C  DC      MACRO   ARG 
                             C          IRPC    ZZ,<ARG> 
                             C              IFDIF       <ZZ>,<">
                             C                  DB      "&ZZ&" 
                             C                  _A="&ZZ&" 
                             C              ENDIF 
                             C          ENDM 
                             C  ENDM 
                             C  ; 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:42:40
 
GIOCOM - Communications Machine Independent Device Driver CoPage     1-8
Common file to produce 2-segment 8086 GW-CPM BASIC          

                             C          PAGE 
                             C   
                             C  DBGBRK	MACRO 
                             C  	DB	0CDh,06h,0CCh 
                             C  	ENDM 
                                 
                                 
                                	TITLE   GIOCOM - Communications Machine Independent Device Driver Code 
                                 
                                COMMENT	* 
                                 
                                --------- --- ---- -- --------- ----------- 
                                COPYRIGHT (C) 1982 BY MICROSOFT CORPORATION 
                                --------- --- ---- -- --------- ----------- 
                                 
                                        by Tom Corbett  Microsoft Corp. 
                                        * 
                                 
                             C  	INCLUDE	GIO86U.INC 
                             C  ; [ This translation created 12-Jan-83 by Version 4.3 ] 
                             C   
                             C  	SUBTTL GIO86U - Device Independent I/O Constants and Macros 
                             C   
                             C  COMMENT	* 
                             C   
                             C  --------- --- ---- -- --------- 
                             C  COPYRIGHT (C) 1982 BY MICROSOFT 
                             C  --------- --- ---- -- --------- 
                             C   
                             C          Programmer: Tom Corbett,  Microsoft Inc. 
                             C   
                             C          * 
                             C   
                             C  ROFFST	MACRO	NAME,SIZE	;define record macro 
                             C  	NAME=_OFFST 
                             C  	_OFFST=_OFFST+SIZE 
                             C  ENDM  
                             C   
                             C   
                             C  ;ASCII character definitions 
                             C  ; 
 = 0003                      C  	ASCCTC=3D		;CTL-C 
 = 0008                      C  	ASCBS=8D		;backspace 
 = 0009                      C  	ASCTAB=9D		;Tab 
 = 000A                      C  	ASCLF=10D		;Line Feed 
 = 000D                      C  	ASCCR=13D		;Carriage Return 
 = 0013                      C  	ASCCTS=19D		;CTL-S 
 = 001A                      C  	ASCCTZ=26D		;Control Z (End-of-file for some devices) 
 = 001B                      C  	ASCESC=27D		;Escape 
 = 0020                      C  	ASCSPC=32D		;Space 
                             C   
                             C  ;Special File ID's (identified by 1st byte of file) 
                             C  ; 
 = 00FF                      C  	BINFID=255D		;files created by SAVE "fn" 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:42:40
 
GIOCOM - Communications Machine Independent Device Driver CoPage     1-9
GIO86U - Device Independent I/O Constants and Macros        

 = 00FE                      C  	PROFID=254D		;files created by SAVE "fn",P 
 = 00FD                      C  	BSVFID=253D		;files created by BSAVE "fn" 
                             C   
                             C  ;Generalized I/O Function Codes: 
                             C  ; 
 = 0000                      C  	_OFFST=0		;initialize count 
                             C  	ROFFST	G_EOF,2		;test EOF for file opened to this device 
                             C  	ROFFST	G_LOC,2		;LOC 
                             C  	ROFFST	G_LOF,2		;LOF 
                             C  	ROFFST	G_CLS,2		;perform special CLOSE functions for this device 
                             C  	ROFFST	G_SWD,2		;set device width 
                             C  	ROFFST	G_RND,2		;GET/PUT random record from/to this device 
                             C  	ROFFST	G_OPN,2		;perform special OPEN functions for this device 
                             C  	ROFFST	G_SIN,2		;input 1 byte from file opened on this device 
                             C  	ROFFST	G_SOT,2		;output 1 byte to file opened on this device 
                             C  	ROFFST	G_GPS,2		;POS 
                             C  	ROFFST	G_GWD,2		;get device width 
                             C  	ROFFST	G_SCW,2		;set device column width 
                             C  	ROFFST	G_GCW,2		;get device column width 
                             C  	ROFFST	G_BIN,2		;block input from file opened on this device 
                             C  	ROFFST	G_BOT,2		;block output to file opened on this device 
                             C   
                             C   
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:42:40
 
GIOCOM - Communications Machine Independent Device Driver CoPage     1-10
GIO86U - Device Independent I/O Constants and Macros        

                             C          PAGE 
                                 
                                	.SALL 
                                 
 = 0000                         CPM86=0 
 = 0000                         COMPAQ=0			;Include IBM 1.0/1.1 Bugs for compatibility 
                                 
                                 
                             C  	INCLUDE	MSDOSU.INC 
                             C  ; [ This translation created 12-Jan-83 by Version 4.3 ] 
                             C   
                             C  	SUBTTL    MSDOSU - MS-DOS Constants and Data-Structure Definitions 
                             C   
                             C  COMMENT	* 
                             C   
                             C  --------- --- ---- -- --------- 
                             C  COPYRIGHT (C) 1982 BY MICROSOFT 
                             C  --------- --- ---- -- --------- 
                             C   
                             C  	Programmer: Tom Corbett,  Microsoft Inc. 
                             C   
                             C  	* 
                             C   
                             C  CALLOS	MACRO	FUNC 
                             C  IFNB	<FUNC>   
                             C  	MOV	AH,LOW OFFSET FUNC 
                             C  ENDIF  
                             C  	INT	33D		;MSDOS system call 
                             C  ENDM  
                             C   
                             C  ROFFST	MACRO	NAME,SIZE	;define record macro 
                             C  	NAME=_OFFST 
                             C  	_OFFST=_OFFST+SIZE 
                             C  ENDM  
                             C   
                             C   
                             C  ; MSDOS System Call codes 
                             C  ; 
 = 0005                      C  	C_PRTO=5D		;Printer output 
 = 0006                      C  	C_DCIO=6D		;Direct console I/O 
 = 000D                      C  	C_REST=13D		;INITIALIZE BDOS 
 = 000E                      C  	C_SDRV=14D		;SET CURRENTLY SELECTED DRIVE 
 = 000F                      C  	C_OPEN=15D 
 = 0010                      C  	C_CLOS=16D 
 = 0011                      C  	C_SEAR=17D		;SEARCH FOR FILE 
 = 0013                      C  	C_DELE=19D 
 = 0014                      C  	C_READ=20D 
 = 0016                      C  	C_MAKE=22D 
 = 0017                      C  	C_RENA=23D 
 = 0019                      C  	C_GDRV=25D		;GET CURRENTLY SELECTED DRIVE 
 = 001A                      C  	C_BUFF=26D		;SET DMA ADDRESS 
 = 0021                      C  	C_RNDR=33D		;Random read 
 = 0022                      C  	C_RNDW=34D		;Random write 
 = 0027                      C  	C_RBR=39D		;Random Block Read 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:42:40
 
GIOCOM - Communications Machine Independent Device Driver CoPage     1-11
MSDOSU - MS-DOS Constants and Data-Structure Definitions    

 = 0029                      C  	C_PARS=41D		;Parse Filename 
                             C   
 = 000B                      C  	FNAML=11D		;number of bytes in Filename with extension 
 = 0080                      C  	DATPSC=128D		;bytes per sector 
 = 0026                      C  	FCBSIZ=38D		;File Control Block size 
                             C   
                             C  ;MS-DOS FILE-DATA-BLOCK Record Definition 
                             C  ; 
 = 0000                      C  	_OFFST=0		;initialize count 
                             C  	ROFFST	F_NUL1,1	;not used by basic interpreter 
                             C  	ROFFST	F_NUM,1		;file number 0..255 
                             C  	ROFFST	F_NUL2,2	;not used by basic interpreter 
                             C  	ROFFST	F_NEXT,2	;thread for linked list, [MEMSIZ]=end 
                             C  	ROFFST	F_MODE,1	;file mode: 
 = 0001                      C  	MD_SQI=1D		;sequential input 
 = 0002                      C  	MD_SQO=2D		;sequential output 
 = 0004                      C  	MD_RND=4D		;random 
 = 0008                      C  	MD_APP=8D		;append 
                             C  	ROFFST	F_FCB,FCBSIZ	;File Control Block: used to communicate with OS 
                             C  	ROFFST	F_CLOC,2	;for seq files: num sectors read/written   (LOCOFS) 
                             C  				;for rnd files: last record number + 1 
                             C  	ROFFST	F_ORCT,1	;"Original Byte Count"                     (ORNOFS) 
                             C  				;for seq input: #bytes in sector when read 
                             C  				;for seq output: #bytes in output sector 
                             C  				;for random files: bytes per sector 
                             C  	ROFFST	F_BREM,1	;number of bytes till end-of-buffer        (NMLOFS) 
                             C  	ROFFST	F_CODE,1	;file encoding: 
 = 0000                      C  	FC_ASC=0		;Ascii SAVE, Data files 
 = 0001                      C  	FC_BIN=1		;binary file (BSAVE, binary SAVE) 
                             C  	ROFFST	F_BAKC,1	;holds next sequential input when F.FLBS.FL.BKC is true 
                             C  	ROFFST	F_NUL3,1	;not used by basic interpreter 
                             C  	ROFFST	F_DEV,1		;Device number                             (FL.DSK) 
                             C  	ROFFST	F_WID,1		;File width 
                             C  	ROFFST	F_NUL4,1	;not used by basic interpreter 
                             C  	ROFFST	F_FLGS,1	;flags 
 = 0080                      C  	FL_BKC=200O		;when true, F.BAKC contains next sequential input 
                             C  	ROFFST	F_POS,1		;Current column position                   (FL.OPS) 
                             C  	ROFFST	FDBSIZ,0	;size of device independent part of FDB 
                             C  				;device dependant FDB entries start here 
                             C   
                             C  	ROFFST	DATOFS,DATPSC	;Operating System interface buffer 
                             C  	ROFFST	FD_SIZ,2	;variable record length for random files 
                             C  	ROFFST	FD_PHY,2	;current physical record number 
                             C  	ROFFST	FD_LOG,2	;current logical record number 
                             C  	ROFFST	F_NUL5,1	;Future use 
                             C  	ROFFST	FD_OPS,2	;current output position for sequential I/O 
                             C  	ROFFST	FD_DAT,0	;field buffer of random file 
                             C   
                             C  ; OFFSETS INTO MSDOS FCB 
                             C  ; 
 = 0007                      C  	FCB_DV=F_FCB+0D		;DRIVE (0=default, 1=A:, 2=B:, ...) 
 = 0008                      C  	FCB_FN=F_FCB+1D		;FILE NAME 
 = 0010                      C  	FCB_FT=F_FCB+9D		;EXTENSION 
 = 0013                      C  	FCB_EX=F_FCB+12D	;FILE EXTENT (identifies block of 128 logical records) 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:42:40
 
GIOCOM - Communications Machine Independent Device Driver CoPage     1-12
MSDOSU - MS-DOS Constants and Data-Structure Definitions    

 = 0015                      C  	FCB_RC=F_FCB+14D	;RECORD SIZE 
 = 0017                      C  	FCB_FS=F_FCB+16D	;FILE SIZE IN BYTES 
 = 001B                      C  	FCB_DT=F_FCB+20D	;Date of last write to file 
 = 001D                      C  	FCB_DT=F_FCB+22D	;Time of last write to file 
 = 0027                      C  	FCB_NR=F_FCB+32D	;NEXT RECORD NUMBER 
 = 0028                      C  	FCB_RN=F_FCB+33D	;CP/M 2.x Random Record Number 
                             C   
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:42:40
 
GIOCOM - Communications Machine Independent Device Driver CoPage     1-13
MSDOSU - MS-DOS Constants and Data-Structure Definitions    

                             C          PAGE 
                                 
                                 
                                 
                                	PUBLIC	COMDSP,COMINI,COMTRM 
                                	EXTRN	DERBFM:NEAR,INIFDB:NEAR,UPDPOS:NEAR,$_COM1:NEAR,BCHRSI:NEAR 
                                	EXTRN	MAKINT:NEAR 
                                	EXTRN	DEVBIN:NEAR,DEVBOT:NEAR 
                                 
                                ;Communications Dispatch Table 
                                ; 
 0000                           COMDSP: 
 0000  02B2 R                   	DW	(COMEOF)	;test EOF for file opened to this device 
 0002  02CF R                   	DW	(COMLOC)	;LOC 
 0004  02E1 R                   	DW	(COMLOF)	;LOF 
 0006  02E9 R                   	DW	(COMCLS)	;perform special CLOSE functions for this device 
 0008  030C R                   	DW	(COMSWD)	;set device width 
 000A  0313 R                   	DW	(COMRND)	;GET/PUT random record from/to this device 
 000C  008B R                   	DW	(COMOPN)	;perform special OPEN functions for this device 
 000E  033C R                   	DW	(COMSIN)	;input 1 byte from file opened on this device 
 0010  0360 R                   	DW	(COMSOT)	;output 1 byte to file opened on this device 
 0012  03BC R                   	DW	(COMGPS)	;POS 
 0014  03C3 R                   	DW	(COMGWD)	;get device width 
 0016  03CA R                   	DW	(COMSCW)	;set device comma width 
 0018  03CB R                   	DW	(COMGCW)	;get device comma Width 
 001A  0000 E                   	DW	(DEVBIN)	;block input from file opened on this device 
 001C  0000 E                   	DW	(DEVBOT)	;block output to file opened on this device 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:42:40
 
GIOCOM - Communications Machine Independent Device Driver CoPage     1-14
MSDOSU - MS-DOS Constants and Data-Structure Definitions    

                                	PAGE 
                                	SUBTTL Communications Generalized I/O Routines 
                                 
                                ; RS232 Device Control Block Definition: 
                                ; 
                                ;   mneumonic offset    use 
                                ;   --------- ------    --------------------------------------- 
 = 0000                         	_DEVID=0D		;RS232 Channel ID (0..n) 
 = 0001                         	_BAUDR=1D		;baud rate (least significant byte 1st) 
                                				;(0=disable device, 9600=9600 baud etc.) 
 = 0003                         	_BYTSZ=3D		;bits per byte (4..8) 
 = 0004                         	_PARIT=4D		;parity (0..4)=...(NONE, ODD, EVEN, MARK, SPACE) 
 = 0005                         	_STOPB=5D		;(0..2)= (1, 1.5, 2) stop bits 
 = 0006                         	_RLSTO=6D		;RLSD (rec. line signal detect) timeout 
 = 0008                         	_CTSTO=8D		;CTS (clear to send) timeout 
 = 000A                         	_DSRTO=10D		;DSR (data set ready) timeout 
                                				;All timeout values are in milliseconds. 
                                				;0=infinite, LSB is always 1st. 
                                				;Support of Timeout Flags by BIOS is 
                                				;optional. 
 = 000C                         	_CMFLG=12D		;Boolean attributes mask for this device 
 = 0001                         	_CMBIN=1O		;(0/1)=ASCII/BINARY (ASC option not in filename) 
 = 0002                         	_CMRTS=2O		;non-zero=Suppress Request-To-Send (RS option) 
 = 0010                         	_CMCOD=20O		;non-zero=user specified ASC or BIN in filename 
 = 0020                         	_CMCTS=40O		;non-zero=CTS parm not defaulted 
 = 0040                         	_CMCLF=100O		;non-zero=Send line feed after CR 
 = 0080                         	_CMCRF=200O		;non-zero=last char sent was Carriage Return 
                                 
                                ;If COM filename contains "ASC", .CMBIN=0, .CMCOD=1 
                                ;If COM filename contains "BIN", .CMBIN=1, .CMCOD=1 
                                ;If COM filename contains neither "ASC" nor "BIN", .CMBIN=1, .CMCOD=0 
                                ;If COM filename contains both "ASC" and "BIN", Illegal Filename occurs 
                                 
                                ;COM DCB Entries which are only of interest to BASIC (Not OEM routines) 
                                ; 
                                				;********************************************* 
                                				;*** .CMPOS must immediately follow .CMWID *** 
                                				;********************************************* 
 = 000D                         	_CMWID=13D		;device width (columns per line) 
 = 000E                         	_CMPOS=14D		;current column device is in **must follow .CMWID** 
 = 000F                         	_CMFDB=15D		;points to FDB for file (0=not opened) 
                                 
 = 0018                         	CDCBSZ=24D		;bytes per COM Device Control Block (room for growth) 
                                 
                                	EXTRN	INICOM:NEAR,RECCOM:NEAR,SNDCOM:NEAR,STACOM:NEAR,TRMCOM:NEAR	;OEM routines 
                                	EXTRN	POLKEY:NEAR,DERIFN:NEAR 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	ASSUME DS:DSEG 
                                	EXTRN	CM1DCB:WORD 
 0000                           DSEG	ENDS 
                                 
                                ;COMINI - called during BASIC initialization 
                                ; Entry - DI = -2*device id 
                                ; 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:42:40
 
GIOCOM - Communications Machine Independent Device Driver CoPage     1-15
Communications Generalized I/O Routines                     

                                	PUBLIC	COMINI,COMTRM 
 001E  57                       COMINI:	PUSH	DI 
 001F  E8 03CC R                	CALL	GCMDCB		;DI points to device control block 
 0022  C6 45 0D FF              	MOV	BYTE PTR _CMWID[DI],LOW 255D	;default is infinite width 
 0026  C7 45 0F 0000            	MOV	WORD PTR _CMFDB[DI],0	;mark this device as available for open 
 002B  5F                       	POP	DI 
 002C                           COMTRM:				;Com Termination Routine (End-of-BASIC) 
 002C  C3                       	RET			; No action required 
                                 
                                 
                                ;POLCOM is called by CHKINT at beginning of every BASIC statement (NEWSTT). 
                                ; For each COM device which is opened to a device, it calls COMTRP if that 
                                ; device has input data waiting. 
                                ; Exit - AX, BX, CX, DX can be used (restored by CHKINT). 
                                ;        All other registers are preserved. 
                                ; 
                                	PUBLIC	POLCOM 
                                	EXTRN	COMTRP:NEAR 
                                 
 002D  57                       POLCOM:	PUSH	DI 
 002E  56                       	PUSH	SI 
 002F  BF 0000 E                	MOV	DI,OFFSET CM1DCB	;DI points to device control block 1 
 0032  BA 0002                  	MOV	DX,OFFSET NMCOMT	;[DH]=COM unit#, [DL]=number of COM units 
 0035  E8 0044 R                POLCML:	CALL	POLCM1		;test unit 1 for trap 
 0038  83 C7 18                 	ADD	DI,OFFSET CDCBSZ	;DI points to next device control block 
 003B  FE C6                    	INC	DH		;Bump unit id 
 003D  FE CA                    	DEC	DL		;Decrement unit counter 
 003F  75 F4                    	JNZ	POLCML		;branch if any more to test 
 0041  5E                       	POP	SI 
 0042  5F                       	POP	DI 
 0043  C3                       	RET 
                                 
                                ;POLCM1 checks 1 COM device to see if input is waiting, if so, it calls COMTRP 
                                ; 
 0044  8B 75 0F                 POLCM1:	MOV	SI,WORD PTR _CMFDB[DI]	;SI points to FDB (if device is opened) 
 0047  0B F6                    	OR	SI,SI 
 0049  74 16                    	JZ	PLCM1X		;return if device not opened 
 004B  F6 44 37 80              	TEST	BYTE PTR F_FLGS[SI],LOW OFFSET FL_BKC 
 004F  75 09                    	JNE	POLTRP		;branch if backup-char present 
 0051  8A E6                    	MOV	AH,DH		;[AH]=Unit# 
 0053  52                       	PUSH	DX		;save Unit# 
 0054  E8 0062 R                	CALL	GCOMSZ		;[DX]=number of bytes queued 
 0057  0B D2                    	OR	DX,DX		;test it 
 0059  5A                       	POP	DX		;restore Unit# 
 005A  8A C6                    POLTRP:	MOV	AL,DH		;[AL]=trap id (0..n) 
 005C  74 03                    	JE	PLCM1X		;branch if no com data queued 
 005E  E8 0000 E                	CALL	COMTRP		;so ON-COM service routine will be called 
 0061  C3                       PLCM1X:	RET 
                                 
                                ;Get COM bytes in queue 
                                ;       On entry: AH = unit number 
                                ;       On return: DX=bytes in queue 
                                ;                  CX=free bytes in queue 
                                ;                   Does error processing if gets error from COM channel 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:42:40
 
GIOCOM - Communications Machine Independent Device Driver CoPage     1-16
Communications Generalized I/O Routines                     

 0062  50                       GCOMSZ:	PUSH	AX 
 0063  E8 0000 E                	CALL	STACOM 
 0066  0A E4                    	OR	AH,AH		;Check status here even though 
                                				;CKCMER does for speed. 
 0068  75 02                    	JNZ	CKCMER		;branch if got error from COM 
 006A  58                       	POP	AX 
 006B  C3                       RET14:	RET 
                                 
                                ; Check for COM I/O error and output COM Error Message if error occured. 
                                ; Entry - [AH] = non-zero if error occured 
                                ; 
                                	EXTRN	STROUT:NEAR,OUTDO:NEAR,ERROR:NEAR 
                                	EXTRN	ERRCBO:NEAR,ERRDPE:NEAR,ERRDTO:NEAR,ERRDIO:NEAR 
 006C                           CKCMER: 
 006C  0A E4                    	OR	AH,AH 
 006E  74 FB                    	JE	RET14		;branch if no COM I/O error detected 
 0070  8A C4                    	MOV	AL,AH 
 0072  32 E4                    	XOR	AH,AH		;[AX]=error code 1..n 
 0074  48                       	DEC	AX		;[AX]=error code 0..n 
 0075  BF 0086 R                	MOV	DI,OFFSET CMERRT 
 0078  03 F8                    	ADD	DI,AX		;[DI] points to BASIC Error code 
 007A  2E: 8A 15                	MOV	DL,BYTE PTR CS:0[DI] 
 007D  3C 05                    	CMP	AL,LOW 5 
 007F  72 02                    	JB	ERROR1		;branch if legal error code 
 0081  B2 00 E                  	MOV	DL,LOW OFFSET ERRDIO	;map all other error codes to I/O error 
 0083  E9 0000 E                ERROR1:	JMP	ERROR 
                                 
 0086  00 E                     CMERRT:	DB	OFFSET ERRCBO	;buffer overflow error 
 0087  00 E                     	DB	OFFSET ERRDPE	;parity error 
 0088  00 E                     	DB	OFFSET ERRDTO	;device timeout 
 0089  00 E                     	DB	OFFSET ERRDTO	;device timeout 
 008A  00 E                     	DB	OFFSET ERRDTO	;device timeout 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:42:40
 
GIOCOM - Communications Machine Independent Device Driver CoPage     1-17
Communications Generalized I/O Routines                     

                                	PAGE 
                                	SUBTTL  COM OPEN 
                                ; 
                                ;    Syntax:   OPEN "COMn: [speed] [,parity] [,data] [,stop] 
                                ;              [,RS]  [,CS[n]]  [,DS[n]]  [,CD[n]] [,LF] [,BIN] [,ASC]" AS 
                                ;              [#]filenum 
                                ; 
                                ;                   SPEED     baud rate in bits per second 
                                ;                   PARITY    N, E, O (none, even, odd) 
                                ;                   DATA      5,6,7,8 bits per byte 
                                ;                   STOP      1, 1.5, 2 stop bits. 
                                ;                             Default for baud greater than 110 is 1. 
                                ;                             Default for 110 baud or lower & 5 data bits is 1.5 
                                ;                             Default for 110 baud or lower & 6-8 data bits is 2 
                                ;                   RS        Suppress RTS (Request To Send). 
                                ;                   CS[n]     Controls CTS (Clear To Send). 
                                ;                   DS[n]     Controls DSR (Data Set Ready). 
                                ;                   CD[n]     Controls CD (Carrier Detect). 
                                ;                             This is also referred to as RLSD 
                                ;                             (Received Line Signal Detect). 
                                ;                   LF        Send a Line-Feed character (X'0A') 
                                ;                             following a Carriage Return (X'0D'). 
                                ;                   BIN       Open COM file in BINARY mode 
                                ;                   ASC       Open COM file in ASCII mode 
                                ; 
                                ;              The RTS (Request To Send)  line  is turned on 
                                ;              when you execute  an  OPEN  "COM... statement 
                                ;              unless you include the RS option. 
                                ; 
                                ;              If CD is omitted, it defaults to CS0. 
                                ;              If DS is omitted, it defaults to DS1000. 
                                ;              If CS is omitted, it defaults to CS1000. 
                                ;              If RS is specified and CS is omitted, then 
                                ;              CS defaults to 0. 
                                ; 
                                ;              Normally I/O  statements  to  a communication 
                                ;              file will fail if the CTS (Clear To Send)  or 
                                ;              DSR (Data Set Ready) lines  are  not  cabled. 
                                ;              The CS and DS options allow you to avoid this 
                                ;              problem by ignoring these  lines.  If the [n] 
                                ;              argument is included, it specifies the number 
                                ;              of milliseconds to wait for the signal before 
                                ;              returning a "Device Timeout"  error. 
                                ; 
                                ;              If the argument [n] in the CS, DS, and CD options 
                                ;              is omitted, or equal to 0, then that line's status 
                                ;              is not checked at all. 
                                ; 
                                ;              Note:   The  speed,  parity,  data, and  stop 
                                ;              parameters  are  positional, but RS, CS,  DS, 
                                ;              and CD may appear in any order after STOP. 
                                ; 
                                ;              The LF parameter is intended for  those using 
                                ;              communication files as a means of printing to 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:42:40
 
GIOCOM - Communications Machine Independent Device Driver CoPage     1-18
COM OPEN                                                    

                                ;              a serial line  printer.  When included in the 
                                ;              parameter list, LF will  cause  a  Line  Feed 
                                ;              character to be sent after a  Carriage return 
                                ;              character. 
                                 
                                ;COMOPN - perform any device dependent open functions. 
                                ; Entry - [AL]=  device id 
                                ;                0 if default device, 
                                ;                1..n for Disk A:, B:, ... 
                                ;                -1..-n for non-disk devices 
                                ;         [BX] = file number (0..n) 
                                ;         [CX] = random record size if [FILMOD] = random 
                                ;                (if [CX] = 0, use default record size) 
                                ;         [DI] = device offset (2=COMD, 4=SCRN, etc.) 
                                ;         [FILMOD] = file mode 
                                ;                    MD.SQI = 1 ;sequential input 
                                ;                    MD.SQO = 2 ;sequential output 
                                ;                    MD.RND = 3 ;random 
                                ;                    MD.APP = 4 ;append 
                                ;         [FILNAM] = filename 
                                ;         [FILEXT] = 1..3 byte filename extension 
                                ; Exit  - [SI] points to new FDB 
                                ;         FDB is linked into FDB chain with all standard 
                                ;         fields initialized. 
                                ;         All registers are used. 
                                ; 
                                 
                                	EXTRN	DERFAO:NEAR 
                                 
 008B  8A E3                    COMOPN:	MOV	AH,BL		;[AH]=file number 
 008D  50                       	PUSH	AX		;save file number, device id 
 008E  51                       	PUSH	CX		;save variable record len (if random) 
 008F  E8 03CC R                	CALL	GCMDCB		;AX = 0, 1, ... for COM1, COM2, ... 
                                				;DI points to Device Control Block 
 0092  83 7D 0F 00              	CMP	WORD PTR _CMFDB[DI],0	;see if device is opened to another file 
 0096  74 03                    	JE	STUNIT		;not opened to another file 
 0098  E9 0000 E                ERFAO1:	JMP	DERFAO		;File Already Opened 
 009B  88 05                    STUNIT:	MOV	BYTE PTR _DEVID[DI],AL	;set unit field of Device Control Block 
 009D  E8 011C R                	CALL	PCOMOP		;parse options (fill in DCB fields) 
 00A0  F6 45 0C 02              	TEST	BYTE PTR _CMFLG[DI],LOW OFFSET _CMRTS 
 00A4  74 0B                    	JE	NORTSO		;branch if RS option not specified 
 00A6  F6 45 0C 20              	TEST	BYTE PTR _CMFLG[DI],LOW OFFSET _CMCTS 
 00AA  75 05                    	JNE	NORTSO		;branch if CTS parm specified 
 00AC  C7 45 08 0000            	MOV	WORD PTR _CTSTO[DI],0	;else default CTS to 0 seconds 
 00B1                           NORTSO: 
 00B1  80 7D 05 FF              	CMP	BYTE PTR _STOPB[DI],LOW 255D 
 00B5  75 15                    	JNE	STPNDF		;brif stop not defaulted 
 00B7  FE 45 05                 	INC	BYTE PTR _STOPB[DI]	;.STOPB=0 (1 stop bit) 
 00BA  83 7D 01 6E              	CMP	WORD PTR _BAUDR[DI],110D 
 00BE  77 0C                    	JA	STPNDF		;brif baud rate exceeds 110 (1 stop) 
 00C0  FE 45 05                 	INC	BYTE PTR _STOPB[DI]	;.STOPB=1 (1.5 stop bit) 
 00C3  80 7D 03 05              	CMP	BYTE PTR _BYTSZ[DI],LOW 5 
 00C7  76 03                    	JBE	STPNDF		;brif 4 or 5 bits per byte (1.5 stop) 
 00C9  FE 45 05                 	INC	BYTE PTR _STOPB[DI]	;110 baud & 6,7,8 data bits=2 stop bits 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:42:40
 
GIOCOM - Communications Machine Independent Device Driver CoPage     1-19
COM OPEN                                                    

 00CC  C6 45 0E 00              STPNDF:	MOV	BYTE PTR _CMPOS[DI],LOW 0	;reset column to 0 
 00D0  8B DF                    	MOV	BX,DI		;BX points to DCB 
 00D2  E8 0000 E                	CALL	INICOM		;call machine dependent OPEN routine 
                                				;destroys FLAGS, AX..DX 
 00D5  FE C4                    	INC	AH 
 00D7  74 40                    	JE	ERIFN1		;branch if Illegal Filename 
 00D9  FE CC                    	DEC	AH 
 00DB  E8 006C R                	CALL	CKCMER		;see if INICOM didn't like options 
 00DE  59                       	POP	CX		;[CX]=record length 
 00DF  80 3E 0000 E 04          	CMP	BYTE PTR FILMOD,LOW OFFSET MD_RND 
 00E4  75 0B                    	JNZ	NOTRND		;branch if not OPEN RANDOM 
 00E6  0B C9                    	OR	CX,CX 
 00E8  75 03                    	JNZ	NOTDEF		;branch if user requested Record-Size 
 00EA  B9 0080                  	MOV	CX,OFFSET DATPSC	;default to 128 (same as disk) 
 00ED  81 C1 0089               NOTDEF:	ADD	CX,OFFSET FD_DAT-FDBSIZ	;add standard Disk FDB requirements 
 00F1  58                       NOTRND:	POP	AX		;[AL]=device id 
 00F2  8B 55 0D                 	MOV	DX,WORD PTR _CMWID[DI]	;[DL]=width, [DH]=init position 
                                				;from Device Control Block 
 00F5  8A DC                    	MOV	BL,AH 
 00F7  B7 00                    	MOV	BH,LOW 0	;[BX]=file number 
 00F9  B4 FF                    	MOV	AH,LOW 255D	;allow all file modes 
 00FB  51                       	PUSH	CX		;save Random Record Size 
 00FC  E8 0000 E                	CALL	INIFDB		;Initialize FDB 
 00FF  59                       	POP	CX 
 0100  0B C9                    	OR	CX,CX 
 0102  74 08                    	JZ	NTRND		;branch if mode is not random 
 0104  81 E9 0089               	SUB	CX,OFFSET FD_DAT-FDBSIZ	;CX=record size requested by user 
 0108  89 8C 00B9               	MOV	WORD PTR FD_SIZ[SI],CX	;save in FDB 
 010C  89 75 0F                 NTRND:	MOV	WORD PTR _CMFDB[DI],SI	;save FDB pointer in DCB 
 010F  F6 45 0C 01              	TEST	BYTE PTR _CMFLG[DI],LOW OFFSET _CMBIN 
 0113  74 03                    	JZ	CMOPNX		;branch if user wants ASCII mode 
                                EXTRN	SCDBIN:NEAR 
 0115  E8 0000 E                	CALL	SCDBIN		;set CODE atr for file PTRFIL to BINARY 
 0118                           CMOPNX: 
 0118  C3                       RET21:	RET 
                                 
 0119  E9 0000 E                ERIFN1:	JMP	DERIFN		;Illegal File Name 
                                 
                                ;Parse COM Open Options "baud, data, parity, stop" 
                                ; 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	FILOPT:WORD 
 0000                           DSEG	ENDS 
 011C  C7 45 01 012C            PCOMOP:	MOV	WORD PTR _BAUDR[DI],300D	;default baud rate = 300 
 0121  C6 45 05 FF              	MOV	BYTE PTR _STOPB[DI],LOW 255D	;mark STOP bits as Default 
 0125  C6 45 03 07              	MOV	BYTE PTR _BYTSZ[DI],LOW 7D	;default physical byte size = 7 
 0129  C6 45 04 02              	MOV	BYTE PTR _PARIT[DI],LOW 2	;default parity = Even 
 012D  C6 45 0C 01              	MOV	BYTE PTR _CMFLG[DI],LOW OFFSET _CMBIN	;default BINARY, CRLF = off 
 0131  C7 45 06 0000            	MOV	WORD PTR _RLSTO[DI],0	;default Carrier Detect timeout=0 
 0136  C7 45 08 03E8            	MOV	WORD PTR _CTSTO[DI],1000D	;default Clear-To-Send timeout=1 sec 
 013B  C7 45 0A 03E8            	MOV	WORD PTR _DSRTO[DI],1000D	;default Data Set Ready timeout=1 sec 
 0140  BE 0000 E                	MOV	SI,OFFSET FILOPT	;SI points to options string 
 0143  E8 026D R                	CALL	GETPR0		;Get 1st char in Filename 
 0146  74 D0                    	JZ	RET21		;Brif EOS 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:42:40
 
GIOCOM - Communications Machine Independent Device Driver CoPage     1-20
COM OPEN                                                    

 0148  72 0C                    	JB	COMOP3		;Brif default Baud (Saw ",") 
 014A  4E                       	DEC	SI		;Adjust for GETPRM 
 014B  E8 0284 R                	CALL	VALGET		;Get Rate in [DX] 
 014E  89 55 01                 	MOV	WORD PTR _BAUDR[DI],DX	;save baud rate code 
 0151  E8 0267 R                	CALL	GETPRM 
 0154  74 C2                    	JZ	RET21		;branch if EOS 
 0156                           COMOP3: 
 0156  E8 025F R                	CALL	SYNPRM		;"," must follow or Illegal File Name 
 0159  B5 02                    	MOV	CH,LOW 2	;Default parity=Even(2) 
 015B  72 21                    	JB	DFTPTY		;Brif Default (saw ",") 
 015D  32 ED                    	XOR	CH,CH		;Map parity parameter to internal code 
 015F  3C 4E                    	CMP	AL,LOW "N" 
 0161  74 1C                    	JZ	GOTPTY		;Map NONE to 0 
 0163  FE C5                    	INC	CH 
 0165  3C 4F                    	CMP	AL,LOW "O" 
 0167  74 16                    	JZ	GOTPTY		;Map ODD to 1 
 0169  FE C5                    	INC	CH 
 016B  3C 45                    	CMP	AL,LOW "E" 
 016D  74 10                    	JZ	GOTPTY		;Map EVEN to 2 
 016F  FE C5                    	INC	CH 
 0171  3C 4D                    	CMP	AL,LOW "M" 
 0173  74 0A                    	JZ	GOTPTY		;Map MARK to 3 
 0175  FE C5                    	INC	CH 
 0177  3C 53                    	CMP	AL,LOW "S" 
 0179  74 04                    	JZ	GOTPTY		;Map SPACE to 4 
 017B                           ERIFN2: 
 017B  E9 0000 E                	JMP	DERIFN		;Complain ("Illegal File Name") 
 017E                           DFTPTY: 
 017E  4E                       	DEC	SI		;Adjust for GETPRM 
 017F                           GOTPTY: 
 017F  88 6D 04                 	MOV	BYTE PTR _PARIT[DI],CH	;save parity in DCB 
 0182  E8 0267 R                	CALL	GETPRM		;Scan off end of Parity field 
 0185  74 3D                    	JZ	COMOP5		;Brif EOS, Default Data/Stop bits 
 0187  E8 025F R                	CALL	SYNPRM		; else Data bits must follow 
 018A  72 12                    	JB	COMOP4		;Brif saw "," try for Stop bits 
 018C  2C 30                    	SUB	AL,LOW "0"	;map ("4".."8") to (4..8) 
 018E  3C 04                    	CMP	AL,LOW 4 
 0190  72 E9                    	JB	ERIFN2		; Error if less than "4" 
 0192  3C 09                    	CMP	AL,LOW 9D 
 0194  73 E5                    	JNB	ERIFN2		; or greater than "8" 
 0196  88 45 03                 	MOV	BYTE PTR _BYTSZ[DI],AL	;save Data bits 
 0199  E8 0267 R                	CALL	GETPRM		; Look for no. of stop bits or EOS 
 019C  74 26                    	JZ	COMOP5		;Brif EOS 
 019E                           COMOP4: 
 019E  E8 025F R                	CALL	SYNPRM		;Stop bits must follow 
 01A1  72 21                    	JB	COMOP5		;Brif saw "," Default Stop bits 
 01A3  2C 31                    	SUB	AL,LOW "1"	;Strip ASCII bias ("1", "2")=(0,1) 
 01A5  3C 02                    	CMP	AL,LOW 2	;Must be "1" or "2" 
 01A7  73 D2                    	JNB	ERIFN2		; else error 
 01A9  02 C0                    	ADD	AL,AL		;map ("1","2") to (0,2) 
 01AB  88 45 05                 	MOV	BYTE PTR _STOPB[DI],AL	;set STOP bits field in DCB 
 01AE  75 15                    	JNZ	LPARM		;branch if "2" 
 01B0  E8 0267 R                	CALL	GETPRM		;[AL]=EOS, "," or "." 
 01B3  74 72                    	JZ	RET24		;return if End-Of-String 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:42:40
 
GIOCOM - Communications Machine Independent Device Driver CoPage     1-21
COM OPEN                                                    

 01B5  3C 2E                    	CMP	AL,LOW "." 
 01B7  75 11                    	JNZ	LPARM2		;it had better be a comma 
 01B9  E8 0267 R                	CALL	GETPRM 
 01BC  3C 35                    	CMP	AL,LOW "5" 
 01BE  75 BB                    	JNZ	ERIFN2		;illegal filename error if not 1.5 
 01C0  FE 45 05                 	INC	BYTE PTR _STOPB[DI]	;map ("1", "1.5", "2") to (0,1,2) 
 01C3  46                       	INC	SI 
 01C4                           COMOP5: 
 01C4  4E                       	DEC	SI		;adjust for GETPRM 
                                 
                                ;This routine parses the position independent parameters RTS, DSR, ... 
                                ; 
 01C5                           LPARM: 
 01C5  E8 0267 R                	CALL	GETPRM		;Get parm, EOS, or "," 
 01C8  74 5D                    	JZ	RET24		;Brif no more parms 
 01CA                           LPARM2: 
 01CA  E8 025F R                	CALL	SYNPRM		;Check "," then get parm 
 01CD  3C 52                    	CMP	AL,LOW "R"	;RS? 
 01CF  75 0B                    	JNZ	LPARDS		;no, try DS/CS/CD/LF/BIN 
 01D1  E8 0222 R                	CALL	LPTRYS		; S? 
 01D4  75 49                    	JNZ	PARIFN		;no, error 
 01D6  80 4D 0C 02              	OR	BYTE PTR _CMFLG[DI],LOW OFFSET _CMRTS	;set RTS bit 
 01DA  EB E9                    	JMP	SHORT LPARM	;get next parm 
 01DC                           LPARDS: 
 01DC  3C 44                    	CMP	AL,LOW "D"	;DS? 
 01DE  75 0D                    	JNZ	LPARCD		;No, try CS/CD/LF/BIN 
 01E0  E8 0222 R                	CALL	LPTRYS		; S? 
 01E3  75 3A                    	JNZ	PARIFN		;no, error 
 01E5  E8 0284 R                	CALL	VALGET		;[DX] = Timeout 
 01E8  89 55 0A                 	MOV	WORD PTR _DSRTO[DI],DX	;set DSR timeout 
 01EB  EB D8                    	JMP	SHORT LPARM	;get next parm 
                                 
 01ED                           LPARCD: 
 01ED  3C 43                    	CMP	AL,LOW "C"	;CS/CD? 
 01EF  75 11                    	JNZ	LPARLF		;no, try LF/BIN 
 01F1  E8 0222 R                	CALL	LPTRYS		; S? 
 01F4  74 1D                    	JZ	LPARCS		;Brif CS 
 01F6  3C 44                    	CMP	AL,LOW "D"	; D? 
 01F8  75 25                    	JNZ	PARIFN		;no, error 
 01FA  E8 0284 R                	CALL	VALGET		;[DX] = Timeout 
 01FD  89 55 06                 	MOV	WORD PTR _RLSTO[DI],DX	;set RLSD timeout 
 0200  EB C3                    	JMP	SHORT LPARM	;get next parm 
 0202                           LPARLF: 
 0202  3C 4C                    	CMP	AL,LOW "L"	;LF? 
 0204  75 22                    	JNZ	LPRBIN		;no, try BINary 
 0206  E8 0222 R                	CALL	LPTRYS 
 0209  3C 46                    	CMP	AL,LOW "F"	;"F" must follow 
 020B  75 12                    	JNZ	PARIFN		;no, error 
 020D  80 4D 0C 40              	OR	BYTE PTR _CMFLG[DI],LOW OFFSET _CMCLF	;set send LF after CR flag 
 0211  EB B2                    	JMP	SHORT LPARM	;get next parm 
 0213                           LPARCS: 
 0213  E8 0284 R                	CALL	VALGET		;[DX] = Timeout 
 0216  89 55 08                 	MOV	WORD PTR _CTSTO[DI],DX	;set CTS timeout 
 0219  80 4D 0C 20              	OR	BYTE PTR _CMFLG[DI],LOW OFFSET _CMCTS	;indicates CTS not defaulted 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:42:40
 
GIOCOM - Communications Machine Independent Device Driver CoPage     1-22
COM OPEN                                                    

 021D  EB A6                    	JMP	SHORT LPARM	;get next parm 
 021F                           PARIFN: 
 021F  E9 0000 E                	JMP	DERIFN		;Illegal File Name error 
                                 
 0222                           LPTRYS: 
 0222  E8 0267 R                	CALL	GETPRM 
 0225  3C 53                    	CMP	AL,LOW "S"	;set cond codes for S (Frequent letter) 
 0227  C3                       RET24:	RET 
                                 
 0228  3C 42                    LPRBIN:	CMP	AL,LOW "B"	;BIN? 
 022A  75 10                    	JNZ	LPRASC		;Branch if not 
 022C  E8 0222 R                	CALL	LPTRYS 
 022F  3C 49                    	CMP	AL,LOW "I"	; I? 
 0231  75 EC                    	JNZ	PARIFN		;no, error 
 0233  E8 0222 R                	CALL	LPTRYS 
 0236  3C 4E                    	CMP	AL,LOW "N"	; N? 
 0238  75 E5                    	JNZ	PARIFN		;no, error 
                                ;;; Binary mode is the default mode, next line for Documentation Purposes 
                                ;;;     ORBI    .CMFLG(.DI),.CMBIN      ;set binary mode 
 023A  EB 16                    	JMP	SHORT TSTCOD	;get next parameter 
                                 
 023C  3C 41                    LPRASC:	CMP	AL,LOW "A"	;ASC? 
 023E  75 DF                    	JNZ	PARIFN		;Illegal filename if not 
 0240  E8 0222 R                	CALL	LPTRYS 
 0243  3C 53                    	CMP	AL,LOW "S"	; S? 
 0245  75 D8                    	JNZ	PARIFN		;no, error 
 0247  E8 0222 R                	CALL	LPTRYS 
 024A  3C 43                    	CMP	AL,LOW "C"	; C? 
 024C  75 D1                    	JNZ	PARIFN		;no, error 
 024E  80 65 0C FE              	AND	BYTE PTR _CMFLG[DI],LOW OFFSET 255D-_CMBIN	;reset binary mode 
 0252  F6 45 0C 10              TSTCOD:	TEST	BYTE PTR _CMFLG[DI],LOW OFFSET _CMCOD 
 0256  75 C7                    	JNE	PARIFN		;bad filename if ASC and BIN specified 
 0258  80 4D 0C 10              	OR	BYTE PTR _CMFLG[DI],LOW OFFSET _CMCOD 
 025C  E9 01C5 R                	JMP	LPARM		;get next parameter 
                                 
 025F                           SYNPRM: 
 025F  80 3C 2C                 	CMP	BYTE PTR 0[SI],LOW "," 
 0262  74 03                    	JZ	GETPRM		;Brif found "," 
 0264  EB B9                    	JMP	SHORT PARIFN	; else "Bad File Name" if no comma 
 0266                           CHKPRM: 
 0266  4E                       	DEC	SI 
                                 
 0267                           GETPRM: 
 0267  80 3C 00                 	CMP	BYTE PTR 0[SI],LOW 0 
 026A  74 17                    	JZ	GETPRX		;Brif EOS 
                                 
                                ;Get Next Option Char skipping blanks and forcing upper case 
                                ; Exit - Carry = comma, Z = end-of-statement, else [AL]=byte 
                                ; 
 026C                           GETPRI: 
 026C  46                       	INC	SI 
 026D                           GETPR0: 
 026D  8A 04                    	MOV	AL,BYTE PTR 0[SI]	;Get next char 
 026F  3C 20                    	CMP	AL,LOW " " 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:42:40
 
GIOCOM - Communications Machine Independent Device Driver CoPage     1-23
COM OPEN                                                    

 0271  74 F4                    	JZ	GETPRM		;Ignore Blanks 
 0273  3C 2C                    	CMP	AL,LOW "," 
 0275  75 04                    	JNZ	GETPR1		;Brif not "," 
 0277  0A C0                    	OR	AL,AL		;set NZ (not end-of-statement) 
 0279  F9                       	STC			;set carry 
 027A  C3                       	RET			;Comma returns: NZ and TC 
 027B                           GETPR1: 
 027B  3C 61                    	CMP	AL,LOW "a"	;Case convert? 
 027D  72 02                    	JB	GETPR2		;Brif not 
 027F  34 20                    	XOR	AL,LOW 40O	;Convert to Uppercase 
 0281                           GETPR2: 
 0281  0A C0                    	OR	AL,AL		;Chars return NZ and NC 
 0283                           GETPRX: 
 0283  C3                       	RET			;EOS returns TZ and NC 
                                 
                                ;Parse decimal number returning result in [DX] 
                                ; 
 0284                           VALGET: 
 0284  53                       	PUSH	BX 
 0285  33 D2                    	XOR	DX,DX		;INITIAL VALUE OF ZERO 
 0287  B4 06                    	MOV	AH,LOW 6	;MAXIMUM 5 DIGITS. 
 0289                           VALLOP: 
 0289  E8 026C R                	CALL	GETPRI		;Get next char in [AL] 
 028C  3C 3A                    	CMP	AL,LOW OFFSET "9"+1	;NOW SEE IF ITS A DIGIT 
 028E  73 1F                    	JNB	VALXIT		;IF NOT, RETURN 
 0290  3C 30                    	CMP	AL,LOW "0" 
 0292  72 1B                    	JB	VALXIT 
 0294  8B DA                    	MOV	BX,DX		;ARG=ARG*10+DIGIT 
 0296  03 DB                    	ADD	BX,BX		;*5 
 0298  03 DB                    	ADD	BX,BX 
 029A  03 DA                    	ADD	BX,DX 
 029C  03 DB                    	ADD	BX,BX		;*2 
 029E  2C 30                    	SUB	AL,LOW "0"	;ADD IN THE DIGIT 
 02A0  8A D0                    	MOV	DL,AL 
 02A2  32 F6                    	XOR	DH,DH		;[DX]=new digit 
 02A4  03 DA                    	ADD	BX,DX 
 02A6  87 D3                    	XCHG	DX,BX		;VALUE SHOULD BE IN [DX] 
 02A8  FE CC                    	DEC	AH		;Max digits -1 
 02AA  75 DD                    	JNZ	VALLOP		;WILL FALL THRU IF MORE THAN 5 DIGITS 
 02AC  E9 0000 E                	JMP	DERIFN		;TOO MANY DIGITS. Illegal File Name 
 02AF                           VALXIT: 
 02AF  4E                       	DEC	SI		;Adjust for GETPRM 
 02B0  5B                       	POP	BX 
 02B1  C3                       	RET 
                                 
                                ;COMEOF - test for End-Of-File on device. 
                                ; Entry - SI points to File-Data-Block. 
                                ;         [DI] = device offset (2=COMD, 4=SCRN, etc.) 
                                ; Exit  - [BX] = -1 if EOF, 0 if not EOF 
                                ; 
                                	EXTRN	INCHSI:NEAR 
 02B2                           COMEOF: 
 02B2  80 7C 31 01              	CMP	BYTE PTR F_CODE[SI],LOW OFFSET FC_BIN 
 02B6  74 0B                    	JE	BINEOF		;Branch if not ASCII file mode 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:42:40
 
GIOCOM - Communications Machine Independent Device Driver CoPage     1-24
COM OPEN                                                    

                                 
                                ;The following code is removed so we won't say EOF is false and then 
                                ; give user Input-Past-End error when CTL-Z finally comes through. 
                                ; This also means EOF function will hang waiting for input, but 
                                ; presumably, user wants device to look like sequential file, not 
                                ; a dynamic COM-I/O device if he is using EOF function. 
                                ; 
 02B8  33 DB                    	XOR	BX,BX		;assume no EOF 
 02BA  E8 0000 E                	CALL	INCHSI		;[AL]=next byte from COM device 
 02BD  72 0E                    	JB	YCMEOF		;branch if next char = EOF 
 02BF  E8 0000 E                	CALL	BCHRSI		;put this back in queue 
 02C2  C3                       CMEOFX:	RET			;BX=0,  end-of-file is false 
                                 
                                ;   In BINARY mode, GW-BASIC EOF is compatible with IBM-PC Basic 
                                ;   That is, EOF is true when no data is in input queue. 
                                ; 
 02C3                           BINEOF: 
 02C3  E8 02CF R                	CALL	COMLOC		;[BX]=number of bytes in input queue 
 02C6  0B DB                    	OR	BX,BX 
 02C8  74 03                    	JE	YCMEOF		;branch if input queue is empty 
 02CA  BB 0001                  	MOV	BX,1		;return with [BX]=0 (false) 
 02CD  4B                       YCMEOF:	DEC	BX		;BX=-1 if end-of-file is true 
 02CE  C3                       	RET 
                                 
                                ;COMLOC - Number of Bytes in input buffer for device. 
                                ; Entry - SI points to File-Data-Block. 
                                ;         DI = device offset 
                                ; Exit  - [BX] = result. 
                                ; 
 02CF  E8 03DB R                COMLOC:	CALL	GCMUID		;AL=Unit ID 
 02D2  8A E0                    	MOV	AH,AL 
 02D4  E8 0062 R                	CALL	GCOMSZ		;[DX]=number of bytes in input buffer 
 02D7  8B DA                    	MOV	BX,DX		;return result in BX 
 02D9  F6 44 37 80              	TEST	BYTE PTR F_FLGS[SI],LOW OFFSET FL_BKC 
 02DD  74 01                    	JZ	CMLOCX		;branch if char not backed up 
 02DF  43                       	INC	BX 
 02E0  C3                       CMLOCX:	RET 
                                 
                                ;COMLOF - number of bytes free in input buffer. 
                                ; Entry - SI points to File-Data-Block. 
                                ;         [DI] = device offset (2=COMD, 4=SCRN, etc.) 
                                ; Exit  - [Floating-Point-Accumulator] = result. 
                                ; 
 02E1  E8 02CF R                COMLOF:	CALL	COMLOC 
 02E4  8B D9                    	MOV	BX,CX		;Prep to move free bytes to FAC 
 02E6  E9 0000 E                	JMP	MAKINT		;return result in FAC 
                                 
                                ;COMCLS - perform any device dependent close functions. 
                                ; Entry - SI points to File-Data-Block. 
                                ;         [DI] = device offset (2=COMD, 4=SCRN, etc.) 
                                ; Exit  - All registers preserved. 
                                ;         This routine is called before BASIC releases the 
                                ;         file-data-block associated with this file. 
                                ; 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:42:40
 
GIOCOM - Communications Machine Independent Device Driver CoPage     1-25
COM OPEN                                                    

 02E9  E8 03CC R                COMCLS:	CALL	GCMDCB		;DI points to device control block 
 02EC  C7 45 0F 0000            	MOV	WORD PTR _CMFDB[DI],0	;mark device as not-in-use 
 02F1  80 7C 31 01              	CMP	BYTE PTR F_CODE[SI],LOW OFFSET FC_BIN 
 02F5  74 0D                    	JE	COMCLX		;Branch if BINARY file mode 
 02F7  80 7C 06 01              	CMP	BYTE PTR F_MODE[SI],LOW OFFSET MD_SQI 
 02FB  74 07                    	JE	COMCLX		;don't send EOF if input mode 
 02FD  B0 1A                    	MOV	AL,LOW OFFSET ASCCTZ	;else send CTL-Z indicating EOF 
 02FF  8A 25                    	MOV	AH,BYTE PTR _DEVID[DI]	;[AH]=device ID 
 0301  E8 0000 E                	CALL	SNDCOM		;output CTL-Z to COM channel 
                                				;ignoring error conditions 
 0304  8A 25                    COMCLX:	MOV	AH,BYTE PTR _DEVID[DI]	;[AH]=device ID 
 0306  E8 0000 E                	CALL	TRMCOM		;terminate COM channel 
 0309  E9 006C R                	JMP	CKCMER		;Check for COM I/O Error 
                                 
                                ;COMSWD - set device width 
                                ; Entry - SI points to File-Data-Block. 
                                ;         [DX] = new device width 
                                ;         [DI] = device offset (2=COMD, 4=SCRN, etc.) 
                                ; Exit  - All registers preserved 
                                ; 
 030C  E8 03CC R                COMSWD:	CALL	GCMDCB		;DI points to device control block 
 030F  88 55 0D                 	MOV	BYTE PTR _CMWID[DI],DL	;set device width 
 0312  C3                       RET12:	RET 
                                 
                                ;COMRND - perform random I/O. 
                                ; Entry - [AL] = function to be performed: 
                                ;                0: get next record 
                                ;                1: put next record 
                                ;                2: get record [DX] (1-relative) 
                                ;                3: put record [DX] (1-relative) 
                                ;         [SI] points to File-Data-Block 
                                ;         [DI] = device offset (2=COMD, 4=SCRN, etc.) 
                                ; Exit  - All registers are used. 
                                ; 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	FILMOD:WORD 
 0000                           DSEG	ENDS 
 0313  3C 02                    COMRND:	CMP	AL,LOW 2 
 0315  73 04                    	JAE	CMRND1		;branch if user specified byte count 
 0317  8B 94 00B9               	MOV	DX,WORD PTR FD_SIZ[SI]	;default to record-size 
 031B  8D 9C 00C2               CMRND1:	LEA	BX,DWORD PTR FD_DAT[SI]	;BX points to random record buffer 
 031F  8B CA                    	MOV	CX,DX		;CX=byte count 
 0321  A8 01                    	TEST	AL,LOW 1 
 0323  75 0B                    	JNZ	PUTRND		;branch if PUT requested 
 0325  57                       GETLOP:	PUSH	DI		;[AL]=next byte from com port 
 0326  E8 033C R                	CALL	COMSIN		;[AL]=next byte from com port 
 0329  5F                       	POP	DI 
 032A  88 07                    	MOV	BYTE PTR 0[BX],AL	;save byte in buffer 
 032C  43                       	INC	BX		;bump buffer pointer 
 032D  E2 F6                    	LOOP	GETLOP 
 032F  C3                       	RET 
 0330  E8 03CC R                PUTRND:	CALL	GCMDCB		;DI points to COMx DCB 
 0333  8A 07                    PUTLOP:	MOV	AL,BYTE PTR 0[BX]	;[AL]=next byte from buffer 
 0335  E8 03B1 R                	CALL	CMROUT		;output to com port 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:42:40
 
GIOCOM - Communications Machine Independent Device Driver CoPage     1-26
COM OPEN                                                    

 0338  43                       	INC	BX		;bump buffer pointer 
 0339  E2 F8                    	LOOP	PUTLOP 
 033B  C3                       	RET 
                                 
                                ;COMSIN - Sequential Input. 
                                ; Entry - SI points to File-Data-Block. 
                                ;         [DI] = device offset (2=COMD, 4=SCRN, etc.) 
                                ; Exit  - [AL] = next byte from file, 
                                ;         carry set if EOF. 
                                ;         All other registers preserved 
                                ; 
 033C                           COMSIN: 
 033C  E8 03DB R                CSWAIT:	CALL	GCMUID		;[AL]=Com Unit ID(DI) 
 033F  8A E0                    	MOV	AH,AL		;[AH]=Com Unit ID(DI) 
 0341  E8 0000 E                	CALL	RECCOM		;[AL]=input byte (if data is ready) 
 0344  9C                       	PUSHF 
 0345  E8 006C R                	CALL	CKCMER		;Check for COM I/O Error 
 0348  9D                       	POPF 
 0349  75 05                    	JNZ	CSGOT1		;wait if none ready to be read 
 034B  E8 0000 E                	CALL	POLKEY		;allow CTL-Z to break in 
 034E  EB EC                    	JMP	SHORT CSWAIT 
 0350                           CSGOT1: 
 0350  3C 1A                    	CMP	AL,LOW OFFSET ASCCTZ	;check for CTL-Z 
 0352  75 09                    	JNE	CMNEOF		;branch if not 
 0354  80 7C 31 01              	CMP	BYTE PTR F_CODE[SI],LOW OFFSET FC_BIN 
 0358  74 03                    	JE	CMNEOF		;CTL-Z is not EOF for Binary files 
 035A  F9                       	STC			;CTL-z is EOF for ASCII files 
 035B  EB 02                    	JMP	SHORT CMSINX	;restore registers and exit 
 035D  0A C0                    CMNEOF:	OR	AL,AL		;clear carry (no eof) 
 035F  C3                       CMSINX:	RET 
                                 
                                ;COMSOT - Sequential Output. 
                                ; Expand tab to spaces, force carriage return before outputting char 
                                ; if char is printable (greater than 20h) and column exceeds width. 
                                ; Since CRONLY is false in GW versions, COMSOT always gets CR-LF for 
                                ; end-of-line.  To be as close to IBM Basic as possible, the following 
                                ; algorithm is used: 
                                ;   Eat LF if last-char-was-CR 
                                ;   clear last-char-was-CR flag 
                                ;   if char is CR 
                                ;       set last-char-was-CR flag 
                                ;       if LF-option was set in filename, 
                                ;           output a LF 
                                ;   The only known case where this is different from IBM is if the file 
                                ;   is opened without the LF option and the user executes 
                                ;   PRINT CHR$(13);CHR$(10);.  On IBM, 13-10 would be output. 
                                ;   On GW, 13 would be output.  The ultimate solution would be for GW 
                                ;   to be compiled with CRONLY=1 and change disk code to insert LF after 
                                ;   CR. 
                                ; Entry - SI points to File-Data-Block. 
                                ;         [DI] = device offset (2=COMD, 4=SCRN, etc.) 
                                ;         [AL] = byte to be output. 
                                ; Exit  - SI, DI can be changed. 
                                ;         All other registers preserved 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:42:40
 
GIOCOM - Communications Machine Independent Device Driver CoPage     1-27
COM OPEN                                                    

                                ;         This routine keeps track of column position, 
                                ;         expands tabs, and forces a carriage return when line width 
                                ;         is exceeded. 
                                ; 
 0360  50                       COMSOT:	PUSH	AX 
 0361  E8 03CC R                	CALL	GCMDCB		;DI points to COMx DCB 
 0364  58                       	POP	AX		;restore [AL]=byte to output 
 0365  F6 45 0C 10              	TEST	BYTE PTR _CMFLG[DI],LOW OFFSET _CMCOD 
 0369  74 06                    	JE	NOTBIN		;brif user didn't explicitly specify BIN 
 036B  80 7C 31 01              	CMP	BYTE PTR F_CODE[SI],LOW OFFSET FC_BIN 
 036F  74 40                    	JE	CMROUT		;if BIN, branch to Raw-Output routine 
 0371  53                       NOTBIN:	PUSH	BX 
 0372  52                       	PUSH	DX 
 0373  BB 0385 R                	MOV	BX,OFFSET CMOUT1	;BX points to Raw Output Routine 
 0376  8A 54 35                 	MOV	DL,BYTE PTR F_WID[SI]	;[DL]=device width (from FDB) 
 0379  8A 75 0E                 	MOV	DH,BYTE PTR _CMPOS[DI]	;[DH]=current column (from DCB) 
                                	EXTRN	CRIFEL:NEAR 
 037C  E8 0000 E                	CALL	CRIFEL		;force CR if End-Of-Line, output char 
                                 
 037F  88 75 0E                 	MOV	BYTE PTR _CMPOS[DI],DH	;save new column position 
 0382  5A                       	POP	DX 
 0383  5B                       	POP	BX 
 0384  C3                       RET11:	RET 
                                 
                                ;Low-Level RS232 Output (updates column position) 
                                ; If LF option was not set in COMOPN (OPEN "COM1:,,,,LF), eat all LineFeeds 
                                ;    which follow CarriageReturns with following algorithm: 
                                ; if (Char <> LF) or (LastWasCR = 0) then output (Char) 
                                ; if (Char = CR) then LastWasCR = 1 else LastWasCR = 0 
                                ; if (LastWasCR) and COMOPN.LF then output(LF) 
                                ; 
                                ; The best way this could have been done was by setting CRONLY=1 in the 
                                ; switch files and letting the device drivers append Line-Feeds if necessary. 
                                ; It was considered too late to make a change this drastic 
                                ; 
                                ; 
 0385  E8 0000 E                CMOUT1:	CALL	UPDPOS		;[DH]=new column position(AL, DH) 
 0388  50                       	PUSH	AX		;save character to be output 
 0389  3C 0A                    	CMP	AL,LOW OFFSET ASCLF 
 038B  75 06                    	JNE	CMOUT2		;branch if not attempting to output LF 
 038D  F6 45 0C 80              	TEST	BYTE PTR _CMFLG[DI],LOW OFFSET _CMCRF 
 0391  75 03                    	JNE	CMOUT3		;brif last byte out was CR 
 0393                           CMOUT2: 
 0393  E8 03B1 R                	CALL	CMROUT		;output the character 
 0396                           CMOUT3: 
 0396  58                       	POP	AX		;restore [AL]=char which was output 
 0397  80 65 0C 7F              	AND	BYTE PTR _CMFLG[DI],LOW OFFSET 255D-_CMCRF	;reset last byte out was CR flag 
 039B  3C 0D                    	CMP	AL,LOW OFFSET ASCCR 
 039D  75 11                    	JNE	CMOUTX		;return if wasn't carriage return 
 039F  80 4D 0C 80              	OR	BYTE PTR _CMFLG[DI],LOW OFFSET _CMCRF	;set last byte out was CR flag 
 03A3  F6 45 0C 40              	TEST	BYTE PTR _CMFLG[DI],LOW OFFSET _CMCLF 
 03A7  74 07                    	JE	CMOUTX		;brif CR is not to be mapped to CR-LF 
 03A9  50                       	PUSH	AX 
 03AA  B0 0A                    	MOV	AL,LOW OFFSET ASCLF 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:42:40
 
GIOCOM - Communications Machine Independent Device Driver CoPage     1-28
COM OPEN                                                    

 03AC  E8 03B1 R                	CALL	CMROUT 
 03AF  58                       	POP	AX 
 03B0                           CMOUTX: 
 03B0  C3                       	RET 
                                 
                                ;Output byte [AL] to device with COM DCB pointed to by [DI]. 
                                ;If error occurs, jump to ERROR 
                                ; 
 03B1  8A 25                    CMROUT:	MOV	AH,BYTE PTR _DEVID[DI]	;[AH]=device ID 
 03B3  50                       	PUSH	AX 
 03B4  E8 0000 E                	CALL	SNDCOM		;output [AL] to COM and return 
 03B7  E8 006C R                	CALL	CKCMER		;Check for I/O errors and return 
 03BA  58                       	POP	AX 
 03BB  C3                       	RET 
                                 
                                ;COMGPS - return current file position. 
                                ; Entry - SI points to File-Data-Block. 
                                ;         [DI] = device offset (2=COMD, 4=SCRN, etc.) 
                                ; Exit  - [AH] = current file column. (0-relative) 
                                ;         All other registers preserved 
                                ; 
 03BC  E8 03CC R                COMGPS:	CALL	GCMDCB		;DI points to Device Control Block 
 03BF  8A 65 0E                 	MOV	AH,BYTE PTR _CMPOS[DI] 
 03C2  C3                       	RET 
                                 
                                ;COMGWD - get device width 
                                ; Entry - SI points to File-Data-Block. 
                                ;         [DI] = device offset (2=COMD, 4=SCRN, etc.) 
                                ; Exit  - [AH] = device width as set by xxxSWD 
                                ;         All other registers preserved 
                                ; 
 03C3  E8 03CC R                COMGWD:	CALL	GCMDCB		;DI points to Device Control Block 
 03C6  8A 65 0D                 	MOV	AH,BYTE PTR _CMWID[DI]	;get width 
 03C9  C3                       	RET 
                                 
                                ;COMSCW - set device comma width 
                                ; Entry - [BX] = new device comma width 
                                ;         SI points to File-Data-Block. 
                                ;         [DI] = device offset (2=COMD, 4=SCRN, etc.) 
                                ; Exit  - SI, DI can be changed. 
                                ;         All other registers preserved 
                                ; 
 03CA  C3                       COMSCW:	RET 
                                 
                                ;COMGCW - get device comma width 
                                ; Entry - SI points to File-Data-Block. 
                                ;         [DI] = device offset (2=COMD, 4=SCRN, etc.) 
                                ; Exit  - [BX] = device comma width as set by xxxSCW 
                                ;         All other registers preserved 
                                ; 
 03CB  C3                       COMGCW:	RET 
                                 
                                ;GCMDCB - get pointer to COM Device Control Block 
                                ; Entry - [DI] = -2*device id (2,4,..n) 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:42:40
 
GIOCOM - Communications Machine Independent Device Driver CoPage     1-29
COM OPEN                                                    

                                ; Exit  - DI points to the device control block for device DI. 
                                ;         [AX] = 0..n for COM1, COM2, ... 
                                ; 
 03CC  E8 03DB R                GCMDCB:	CALL	GCMUID		;[AX]=unit id (0..n) 
 03CF  50                       	PUSH	AX		;save unit id 
 03D0  B4 18                    	MOV	AH,LOW OFFSET CDCBSZ	;AX = bytes per COM DCB 
 03D2  F6 E4                    	MUL	AH		;AX = unit ID * CDCBSZ 
 03D4  05 0000 E                	ADD	AX,OFFSET CM1DCB 
 03D7  8B F8                    	MOV	DI,AX		;DI points to COMx device ctl block 
 03D9  58                       	POP	AX		;[AX]=unit id 
 03DA  C3                       	RET 
                                 
                                ;GCMUID - get COM Unit Id 
                                ; Entry - [DI] = -2*device id (2,4,..n) 
                                ; Exit  - [AX] = 0..n for COM1, COM2, ... 
                                ; 
 03DB  8B C7                    GCMUID:	MOV	AX,DI 
                                ;       ADDI    AX,$CODE+2*<$.COM1-^O400>   ;[DI]=0, 2, ... for COM1, COM2, ... 
 03DD  D1 E8                    	SHR	AX,1 
 03DF  05 FF00 E                	ADD	AX,OFFSET ($_COM1-400O)	;[AX]=0, 1, ... for COM1, COM2, ... 
 03E2  C3                       	RET 
                                 
 03E3                           CSEG	ENDS 
                                	END 

Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:42:40
 
GIOCOM - Communications Machine Independent Device Driver CoSymbols-1
                                                             

Macros:

		N a m e			Lines

ACRLF  . . . . . . . . . . . . .  	   2
ADR  . . . . . . . . . . . . . .  	   1
CALLOS . . . . . . . . . . . . .  	   4
CHRGET . . . . . . . . . . . . .  	   1
COMPAR . . . . . . . . . . . . .  	   2
DBGBRK . . . . . . . . . . . . .  	   1
DC . . . . . . . . . . . . . . .  	   6
DJNZ . . . . . . . . . . . . . .  	   2
FSIGN  . . . . . . . . . . . . .  	   1
GETYPE . . . . . . . . . . . . .  	   1
INS86  . . . . . . . . . . . . .  	  13
INST . . . . . . . . . . . . . .  	   1
LDDR . . . . . . . . . . . . . .  	   8
LDIR . . . . . . . . . . . . . .  	   8
MOVRI  . . . . . . . . . . . . .  	   6
OUTCHR . . . . . . . . . . . . .  	   1
POPR . . . . . . . . . . . . . .  	   2
PUSHM  . . . . . . . . . . . . .  	   5
PUSHR  . . . . . . . . . . . . .  	   2
ROFFST . . . . . . . . . . . . .  	   2
SYNCHK . . . . . . . . . . . . .  	   2

Segments and Groups:

                N a m e         	Size	Align	Combine Class

CSEG . . . . . . . . . . . . . .  	03E3	PARA	PUBLIC	'CODESG'
DSEG . . . . . . . . . . . . . .  	0000	PARA	PUBLIC	'DATASG'

Symbols:            

                N a m e         	Type	Value	Attr         

ALTAIR . . . . . . . . . . . . .  	Number	0000	
ANSI . . . . . . . . . . . . . .  	Number	0001	
ASCBS  . . . . . . . . . . . . .  	Number	0008	
ASCCR  . . . . . . . . . . . . .  	Number	000D	
ASCCTC . . . . . . . . . . . . .  	Number	0003	
ASCCTS . . . . . . . . . . . . .  	Number	0013	
ASCCTZ . . . . . . . . . . . . .  	Number	001A	
ASCESC . . . . . . . . . . . . .  	Number	001B	
ASCLF  . . . . . . . . . . . . .  	Number	000A	
ASCSPC . . . . . . . . . . . . .  	Number	0020	
ASCTAB . . . . . . . . . . . . .  	Number	0009	

BASDEB . . . . . . . . . . . . .  	Number	0000	
BCHRSI . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
BEEPSW . . . . . . . . . . . . .  	Number	0001	
BINCSW . . . . . . . . . . . . .  	Number	0000	
BINEOF . . . . . . . . . . . . .  	L NEAR	02C3	CSEG
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:42:40
 
GIOCOM - Communications Machine Independent Device Driver CoSymbols-2
                                                             

BINFID . . . . . . . . . . . . .  	Number	00FF	
BLODSW . . . . . . . . . . . . .  	Number	0001	
BSVFID . . . . . . . . . . . . .  	Number	00FD	
BUFLEN . . . . . . . . . . . . .  	Number	00FF	

CASSW  . . . . . . . . . . . . .  	Number	0000	
CDCBSZ . . . . . . . . . . . . .  	Number	0018	
CHKPRM . . . . . . . . . . . . .  	L NEAR	0266	CSEG
CHSEAT . . . . . . . . . . . . .  	Number	0001	
CKCMER . . . . . . . . . . . . .  	L NEAR	006C	CSEG
CLMWID . . . . . . . . . . . . .  	Number	000E	
CM1DCB . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
CMEOFX . . . . . . . . . . . . .  	L NEAR	02C2	CSEG
CMERRT . . . . . . . . . . . . .  	L NEAR	0086	CSEG
CMLOCX . . . . . . . . . . . . .  	L NEAR	02E0	CSEG
CMNEOF . . . . . . . . . . . . .  	L NEAR	035D	CSEG
CMOPNX . . . . . . . . . . . . .  	L NEAR	0118	CSEG
CMOUT1 . . . . . . . . . . . . .  	L NEAR	0385	CSEG
CMOUT2 . . . . . . . . . . . . .  	L NEAR	0393	CSEG
CMOUT3 . . . . . . . . . . . . .  	L NEAR	0396	CSEG
CMOUTX . . . . . . . . . . . . .  	L NEAR	03B0	CSEG
CMPUTN . . . . . . . . . . . . .  	Number	0000	
CMRND1 . . . . . . . . . . . . .  	L NEAR	031B	CSEG
CMROUT . . . . . . . . . . . . .  	L NEAR	03B1	CSEG
CMSINX . . . . . . . . . . . . .  	L NEAR	035F	CSEG
COMCLS . . . . . . . . . . . . .  	L NEAR	02E9	CSEG
COMCLX . . . . . . . . . . . . .  	L NEAR	0304	CSEG
COMDSP . . . . . . . . . . . . .  	L NEAR	0000	CSEG	Global
COMEOF . . . . . . . . . . . . .  	L NEAR	02B2	CSEG
COMGCW . . . . . . . . . . . . .  	L NEAR	03CB	CSEG
COMGPS . . . . . . . . . . . . .  	L NEAR	03BC	CSEG
COMGWD . . . . . . . . . . . . .  	L NEAR	03C3	CSEG
COMINI . . . . . . . . . . . . .  	L NEAR	001E	CSEG	Global
COMLOC . . . . . . . . . . . . .  	L NEAR	02CF	CSEG
COMLOF . . . . . . . . . . . . .  	L NEAR	02E1	CSEG
COMMNT . . . . . . . . . . . . .  	Number	0000	
COMOP3 . . . . . . . . . . . . .  	L NEAR	0156	CSEG
COMOP4 . . . . . . . . . . . . .  	L NEAR	019E	CSEG
COMOP5 . . . . . . . . . . . . .  	L NEAR	01C4	CSEG
COMOPN . . . . . . . . . . . . .  	L NEAR	008B	CSEG
COMPAQ . . . . . . . . . . . . .  	Number	0000	
COMRND . . . . . . . . . . . . .  	L NEAR	0313	CSEG
COMSCW . . . . . . . . . . . . .  	L NEAR	03CA	CSEG
COMSIN . . . . . . . . . . . . .  	L NEAR	033C	CSEG
COMSOT . . . . . . . . . . . . .  	L NEAR	0360	CSEG
COMSWD . . . . . . . . . . . . .  	L NEAR	030C	CSEG
COMTRM . . . . . . . . . . . . .  	L NEAR	002C	CSEG	Global
COMTRP . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
CONSSW . . . . . . . . . . . . .  	Number	0001	
CONTO  . . . . . . . . . . . . .  	Number	000F	
CONTRO . . . . . . . . . . . . .  	Number	0001	
CPM  . . . . . . . . . . . . . .  	Number	0001	
CPM110 . . . . . . . . . . . . .  	Number	0000	
CPM2 . . . . . . . . . . . . . .  	Number	0001	
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:42:40
 
GIOCOM - Communications Machine Independent Device Driver CoSymbols-3
                                                             

CPM86  . . . . . . . . . . . . .  	Number	0000	
CPMA75 . . . . . . . . . . . . .  	Number	0000	
CPMADD . . . . . . . . . . . . .  	Number	0000	
CPMCON . . . . . . . . . . . . .  	Number	0000	
CPMLIF . . . . . . . . . . . . .  	Number	0000	
CPMMDS . . . . . . . . . . . . .  	Number	0000	
CPMPER . . . . . . . . . . . . .  	Number	0000	
CPMRSH . . . . . . . . . . . . .  	Number	0000	
CPMSBC . . . . . . . . . . . . .  	Number	0000	
CPMSER . . . . . . . . . . . . .  	Number	0000	
CRIFEL . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
CRONLY . . . . . . . . . . . . .  	Number	0000	
CSGOT1 . . . . . . . . . . . . .  	L NEAR	0350	CSEG
CSWAIT . . . . . . . . . . . . .  	L NEAR	033C	CSEG
C_BUFF . . . . . . . . . . . . .  	Number	001A	
C_CLOS . . . . . . . . . . . . .  	Number	0010	
C_DCIO . . . . . . . . . . . . .  	Number	0006	
C_DELE . . . . . . . . . . . . .  	Number	0013	
C_GDRV . . . . . . . . . . . . .  	Number	0019	
C_MAKE . . . . . . . . . . . . .  	Number	0016	
C_OPEN . . . . . . . . . . . . .  	Number	000F	
C_PARS . . . . . . . . . . . . .  	Number	0029	
C_PRTO . . . . . . . . . . . . .  	Number	0005	
C_RBR  . . . . . . . . . . . . .  	Number	0027	
C_READ . . . . . . . . . . . . .  	Number	0014	
C_RENA . . . . . . . . . . . . .  	Number	0017	
C_REST . . . . . . . . . . . . .  	Number	000D	
C_RNDR . . . . . . . . . . . . .  	Number	0021	
C_RNDW . . . . . . . . . . . . .  	Number	0022	
C_SDRV . . . . . . . . . . . . .  	Number	000E	
C_SEAR . . . . . . . . . . . . .  	Number	0011	

DATOFS . . . . . . . . . . . . .  	Number	0039	
DATPSC . . . . . . . . . . . . .  	Number	0080	
DBLCHR . . . . . . . . . . . . .  	Number	0000	
DBLTRN . . . . . . . . . . . . .  	Number	0000	
DEBUG  . . . . . . . . . . . . .  	Text  		
DERBFM . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
DERFAO . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
DERIFN . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
DEVBIN . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
DEVBOT . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
DFTPTY . . . . . . . . . . . . .  	L NEAR	017E	CSEG
DISK . . . . . . . . . . . . . .  	Number	0001	
DMC  . . . . . . . . . . . . . .  	Number	0000	
DOS  . . . . . . . . . . . . . .  	Number	0000	
DRVPOS . . . . . . . . . . . . .  	Number	0000	
DUPONT . . . . . . . . . . . . .  	Number	0000	
DYNCOM . . . . . . . . . . . . .  	Number	0001	

EDIT80 . . . . . . . . . . . . .  	Number	0000	
ERFAO1 . . . . . . . . . . . . .  	L NEAR	0098	CSEG
ERIFN1 . . . . . . . . . . . . .  	L NEAR	0119	CSEG
ERIFN2 . . . . . . . . . . . . .  	L NEAR	017B	CSEG
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:42:40
 
GIOCOM - Communications Machine Independent Device Driver CoSymbols-4
                                                             

ERRCBO . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERRDIO . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERRDPE . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERRDTO . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERROR  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERROR1 . . . . . . . . . . . . .  	L NEAR	0083	CSEG
ESCCTL . . . . . . . . . . . . .  	Number	0000	
EXIDY  . . . . . . . . . . . . .  	Number	0000	

FAST . . . . . . . . . . . . . .  	Number	0001	
FCBSIZ . . . . . . . . . . . . .  	Number	0026	
FCB_DT . . . . . . . . . . . . .  	Number	001D	
FCB_DV . . . . . . . . . . . . .  	Number	0007	
FCB_EX . . . . . . . . . . . . .  	Number	0013	
FCB_FN . . . . . . . . . . . . .  	Number	0008	
FCB_FS . . . . . . . . . . . . .  	Number	0017	
FCB_FT . . . . . . . . . . . . .  	Number	0010	
FCB_NR . . . . . . . . . . . . .  	Number	0027	
FCB_RC . . . . . . . . . . . . .  	Number	0015	
FCB_RN . . . . . . . . . . . . .  	Number	0028	
FC_ASC . . . . . . . . . . . . .  	Number	0000	
FC_BIN . . . . . . . . . . . . .  	Number	0001	
FDBSIZ . . . . . . . . . . . . .  	Number	0039	
FD_DAT . . . . . . . . . . . . .  	Number	00C2	
FD_LOG . . . . . . . . . . . . .  	Number	00BD	
FD_OPS . . . . . . . . . . . . .  	Number	00C0	
FD_PHY . . . . . . . . . . . . .  	Number	00BB	
FD_SIZ . . . . . . . . . . . . .  	Number	00B9	
FILMOD . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
FILOPT . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
FIVDSK . . . . . . . . . . . . .  	Number	0001	
FIVEO  . . . . . . . . . . . . .  	Number	0001	
FIVLPT . . . . . . . . . . . . .  	Number	0001	
FIVMEM . . . . . . . . . . . . .  	Number	0001	
FKEYON . . . . . . . . . . . . .  	Number	0001	
FL_BKC . . . . . . . . . . . . .  	Number	0080	
FNAML  . . . . . . . . . . . . .  	Number	000B	
F_BAKC . . . . . . . . . . . . .  	Number	0032	
F_BREM . . . . . . . . . . . . .  	Number	0030	
F_CLOC . . . . . . . . . . . . .  	Number	002D	
F_CODE . . . . . . . . . . . . .  	Number	0031	
F_DEV  . . . . . . . . . . . . .  	Number	0034	
F_FCB  . . . . . . . . . . . . .  	Number	0007	
F_FLGS . . . . . . . . . . . . .  	Number	0037	
F_MODE . . . . . . . . . . . . .  	Number	0006	
F_NEXT . . . . . . . . . . . . .  	Number	0004	
F_NUL1 . . . . . . . . . . . . .  	Number	0000	
F_NUL2 . . . . . . . . . . . . .  	Number	0002	
F_NUL3 . . . . . . . . . . . . .  	Number	0033	
F_NUL4 . . . . . . . . . . . . .  	Number	0036	
F_NUL5 . . . . . . . . . . . . .  	Number	00BF	
F_NUM  . . . . . . . . . . . . .  	Number	0001	
F_ORCT . . . . . . . . . . . . .  	Number	002F	
F_POS  . . . . . . . . . . . . .  	Number	0038	
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:42:40
 
GIOCOM - Communications Machine Independent Device Driver CoSymbols-5
                                                             

F_WID  . . . . . . . . . . . . .  	Number	0035	

GCMDCB . . . . . . . . . . . . .  	L NEAR	03CC	CSEG
GCMUID . . . . . . . . . . . . .  	L NEAR	03DB	CSEG
GCOMSZ . . . . . . . . . . . . .  	L NEAR	0062	CSEG
GENBIN . . . . . . . . . . . . .  	Number	0001	
GENDSK . . . . . . . . . . . . .  	Number	0000	
GENIO  . . . . . . . . . . . . .  	Number	0001	
GESBC  . . . . . . . . . . . . .  	Number	0000	
GETLOP . . . . . . . . . . . . .  	L NEAR	0325	CSEG
GETPR0 . . . . . . . . . . . . .  	L NEAR	026D	CSEG
GETPR1 . . . . . . . . . . . . .  	L NEAR	027B	CSEG
GETPR2 . . . . . . . . . . . . .  	L NEAR	0281	CSEG
GETPRI . . . . . . . . . . . . .  	L NEAR	026C	CSEG
GETPRM . . . . . . . . . . . . .  	L NEAR	0267	CSEG
GETPRX . . . . . . . . . . . . .  	L NEAR	0283	CSEG
GIO86  . . . . . . . . . . . . .  	Number	0001	
GOTPTY . . . . . . . . . . . . .  	L NEAR	017F	CSEG
GW . . . . . . . . . . . . . . .  	Number	0001	
GWCASS . . . . . . . . . . . . .  	Number	0000	
GWDBUG . . . . . . . . . . . . .  	Number	0000	
G_BIN  . . . . . . . . . . . . .  	Number	001A	
G_BOT  . . . . . . . . . . . . .  	Number	001C	
G_CLS  . . . . . . . . . . . . .  	Number	0006	
G_EOF  . . . . . . . . . . . . .  	Number	0000	
G_GCW  . . . . . . . . . . . . .  	Number	0018	
G_GPS  . . . . . . . . . . . . .  	Number	0012	
G_GWD  . . . . . . . . . . . . .  	Number	0014	
G_LOC  . . . . . . . . . . . . .  	Number	0002	
G_LOF  . . . . . . . . . . . . .  	Number	0004	
G_OPN  . . . . . . . . . . . . .  	Number	000C	
G_RND  . . . . . . . . . . . . .  	Number	000A	
G_SCW  . . . . . . . . . . . . .  	Number	0016	
G_SIN  . . . . . . . . . . . . .  	Number	000E	
G_SOT  . . . . . . . . . . . . .  	Number	0010	
G_SWD  . . . . . . . . . . . . .  	Number	0008	

HEATH  . . . . . . . . . . . . .  	Number	0000	
HEXOCT . . . . . . . . . . . . .  	Number	0001	
HGHBIT . . . . . . . . . . . . .  	Number	0001	

I8086  . . . . . . . . . . . . .  	Number	0001	
I8251  . . . . . . . . . . . . .  	Number	0000	
IBMLIK . . . . . . . . . . . . .  	Number	0001	
IBMTOK . . . . . . . . . . . . .  	Number	0001	
INCHSI . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
INICOM . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
INIFDB . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
INKEYF . . . . . . . . . . . . .  	Number	0001	
INLADD . . . . . . . . . . . . .  	Number	0000	
INSTSW . . . . . . . . . . . . .  	Number	0000	
INTEL  . . . . . . . . . . . . .  	Number	0000	
INTFHW . . . . . . . . . . . . .  	Number	0000	
INTFSW . . . . . . . . . . . . .  	Number	0000	
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:42:40
 
GIOCOM - Communications Machine Independent Device Driver CoSymbols-6
                                                             

INTLEC . . . . . . . . . . . . .  	Number	0000	
INTROM . . . . . . . . . . . . .  	Number	0000	
ISC  . . . . . . . . . . . . . .  	Number	0000	
ISIS . . . . . . . . . . . . . .  	Number	0000	

JISKTN . . . . . . . . . . . . .  	Number	0000	

KANABS . . . . . . . . . . . . .  	Number	0000	
KANJFN . . . . . . . . . . . . .  	Number	0000	
KEYSTA . . . . . . . . . . . . .  	Number	0000	
KILLER . . . . . . . . . . . . .  	Number	0000	

LABKEY . . . . . . . . . . . . .  	Number	0001	
LEN2 . . . . . . . . . . . . . .  	Number	0001	
LEN3 . . . . . . . . . . . . . .  	Number	0001	
LENGTH . . . . . . . . . . . . .  	Number	0002	
LINLN  . . . . . . . . . . . . .  	Number	0050	
LISTEN . . . . . . . . . . . . .  	Number	0001	
LNGVAR . . . . . . . . . . . . .  	Number	0001	
LOKHED . . . . . . . . . . . . .  	Number	0000	
LONGI  . . . . . . . . . . . . .  	Number	0000	
LPARCD . . . . . . . . . . . . .  	L NEAR	01ED	CSEG
LPARCS . . . . . . . . . . . . .  	L NEAR	0213	CSEG
LPARDS . . . . . . . . . . . . .  	L NEAR	01DC	CSEG
LPARLF . . . . . . . . . . . . .  	L NEAR	0202	CSEG
LPARM  . . . . . . . . . . . . .  	L NEAR	01C5	CSEG
LPARM2 . . . . . . . . . . . . .  	L NEAR	01CA	CSEG
LPRASC . . . . . . . . . . . . .  	L NEAR	023C	CSEG
LPRBIN . . . . . . . . . . . . .  	L NEAR	0228	CSEG
LPT3 . . . . . . . . . . . . . .  	Number	0000	
LPTLEN . . . . . . . . . . . . .  	Number	0084	
LPTRYS . . . . . . . . . . . . .  	L NEAR	0222	CSEG
LPTSW  . . . . . . . . . . . . .  	Number	0001	

MAKINT . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
MDS  . . . . . . . . . . . . . .  	Number	0000	
MDSISS . . . . . . . . . . . . .  	Number	0000	
MD_APP . . . . . . . . . . . . .  	Number	0008	
MD_RND . . . . . . . . . . . . .  	Number	0004	
MD_SQI . . . . . . . . . . . . .  	Number	0001	
MD_SQO . . . . . . . . . . . . .  	Number	0002	
MEMIMG . . . . . . . . . . . . .  	Number	0001	
MOSTEK . . . . . . . . . . . . .  	Number	0000	
MULSEG . . . . . . . . . . . . .  	Number	0001	

NAMLEN . . . . . . . . . . . . .  	Number	0028	
NASCOM . . . . . . . . . . . . .  	Number	0000	
NATROM . . . . . . . . . . . . .  	Number	0000	
NBANKS . . . . . . . . . . . . .  	Number	0001	
NCRBAS . . . . . . . . . . . . .  	Number	0000	
NCRCAS . . . . . . . . . . . . .  	Number	0000	
NCRDEB . . . . . . . . . . . . .  	Number	0000	
NCRELS . . . . . . . . . . . . .  	Number	0000	
NCRLPT . . . . . . . . . . . . .  	Number	0001	
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:42:40
 
GIOCOM - Communications Machine Independent Device Driver CoSymbols-7
                                                             

NECBAS . . . . . . . . . . . . .  	Number	0000	
NMCOMT . . . . . . . . . . . . .  	Number	0002	
NMKEYF . . . . . . . . . . . . .  	Number	000A	
NMKEYT . . . . . . . . . . . . .  	Number	000E	
NMLINE . . . . . . . . . . . . .  	Number	0019	
NMLPT  . . . . . . . . . . . . .  	Number	0003	
NMPENT . . . . . . . . . . . . .  	Number	0001	
NMSTRT . . . . . . . . . . . . .  	Number	0004	
NOATDL . . . . . . . . . . . . .  	Number	0000	
NOCTLA . . . . . . . . . . . . .  	Number	0000	
NODOT  . . . . . . . . . . . . .  	Number	0000	
NOEDIT . . . . . . . . . . . . .  	Number	0000	
NOIOS  . . . . . . . . . . . . .  	Number	0000	
NONULL . . . . . . . . . . . . .  	Number	0000	
NOPEKS . . . . . . . . . . . . .  	Number	0000	
NOROMP . . . . . . . . . . . . .  	Number	0000	
NORTSO . . . . . . . . . . . . .  	L NEAR	00B1	CSEG
NORUBT . . . . . . . . . . . . .  	Number	0000	
NOTBIN . . . . . . . . . . . . .  	L NEAR	0371	CSEG
NOTDEF . . . . . . . . . . . . .  	L NEAR	00ED	CSEG
NOTRND . . . . . . . . . . . . .  	L NEAR	00F1	CSEG
NOUSR  . . . . . . . . . . . . .  	Number	0000	
NOVARP . . . . . . . . . . . . .  	Number	0000	
NTRND  . . . . . . . . . . . . .  	L NEAR	010C	CSEG
NUMLEV . . . . . . . . . . . . .  	Number	006E	
NUMTMP . . . . . . . . . . . . .  	Number	000A	
NUMTRP . . . . . . . . . . . . .  	Number	0015	

OEMRAM . . . . . . . . . . . . .  	Number	0000	
ONTEL  . . . . . . . . . . . . .  	Number	0000	
OUTDO  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External

PALSIZ . . . . . . . . . . . . .  	Number	0000	
PANBAS . . . . . . . . . . . . .  	Number	0000	
PARIFN . . . . . . . . . . . . .  	L NEAR	021F	CSEG
PCOMOP . . . . . . . . . . . . .  	L NEAR	011C	CSEG
PCS  . . . . . . . . . . . . . .  	Number	0000	
PLAYSW . . . . . . . . . . . . .  	Number	0001	
PLCM1X . . . . . . . . . . . . .  	L NEAR	0061	CSEG
POLCM1 . . . . . . . . . . . . .  	L NEAR	0044	CSEG
POLCML . . . . . . . . . . . . .  	L NEAR	0035	CSEG
POLCOM . . . . . . . . . . . . .  	L NEAR	002D	CSEG	Global
POLKEY . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
POLTRP . . . . . . . . . . . . .  	L NEAR	005A	CSEG
PROFID . . . . . . . . . . . . .  	Number	00FE	
PURE . . . . . . . . . . . . . .  	Number	0001	
PUTLOP . . . . . . . . . . . . .  	L NEAR	0333	CSEG
PUTRND . . . . . . . . . . . . .  	L NEAR	0330	CSEG

QUEUE  . . . . . . . . . . . . .  	Number	0001	

REALIO . . . . . . . . . . . . .  	Number	0001	
RECCOM . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
RET11  . . . . . . . . . . . . .  	L NEAR	0384	CSEG
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:42:40
 
GIOCOM - Communications Machine Independent Device Driver CoSymbols-8
                                                             

RET12  . . . . . . . . . . . . .  	L NEAR	0312	CSEG
RET14  . . . . . . . . . . . . .  	L NEAR	006B	CSEG
RET21  . . . . . . . . . . . . .  	L NEAR	0118	CSEG
RET24  . . . . . . . . . . . . .  	L NEAR	0227	CSEG
RMX  . . . . . . . . . . . . . .  	Number	0000	
RSHACK . . . . . . . . . . . . .  	Number	0000	
RSTLES . . . . . . . . . . . . .  	Number	0001	

SBC  . . . . . . . . . . . . . .  	Number	0000	
SBC86  . . . . . . . . . . . . .  	Number	0000	
SCDBIN . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
SCP  . . . . . . . . . . . . . .  	Number	0001	
SCRN86 . . . . . . . . . . . . .  	Number	0001	
SCRNIO . . . . . . . . . . . . .  	Number	0001	
SCROLT . . . . . . . . . . . . .  	Number	0001	
SGSATS . . . . . . . . . . . . .  	Number	0000	
SHORTJ . . . . . . . . . . . . .  	Number	0001	
SHTCHN . . . . . . . . . . . . .  	Number	0000	
SHTERR . . . . . . . . . . . . .  	Number	0000	
SHTINS . . . . . . . . . . . . .  	Number	0000	
SHTLHM . . . . . . . . . . . . .  	Number	0000	
SHTLIN . . . . . . . . . . . . .  	Number	0000	
SHTPRO . . . . . . . . . . . . .  	Number	0000	
SHTREN . . . . . . . . . . . . .  	Number	0000	
SIXDIG . . . . . . . . . . . . .  	Number	0000	
SMALL  . . . . . . . . . . . . .  	Number	0000	
SNDCOM . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
SPCDSK . . . . . . . . . . . . .  	Number	0000	
SPCNDS . . . . . . . . . . . . .  	Number	0000	
STACOM . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
STPNDF . . . . . . . . . . . . .  	L NEAR	00CC	CSEG
STRING . . . . . . . . . . . . .  	Number	0001	
STROUT . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
STRSIZ . . . . . . . . . . . . .  	Number	0003	
STUNIT . . . . . . . . . . . . .  	L NEAR	009B	CSEG
SUPRSH . . . . . . . . . . . . .  	Number	0001	
SWAPSW . . . . . . . . . . . . .  	Number	0001	
SYNPRM . . . . . . . . . . . . .  	L NEAR	025F	CSEG

TEK  . . . . . . . . . . . . . .  	Number	0000	
TIMSHR . . . . . . . . . . . . .  	Number	0000	
TRMCOM . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
TRNCHR . . . . . . . . . . . . .  	Number	0000	
TRSER2 . . . . . . . . . . . . .  	Number	0000	
TRUANS . . . . . . . . . . . . .  	Number	0000	
TRUROM . . . . . . . . . . . . .  	Number	0001	
TSDISK . . . . . . . . . . . . .  	Number	0000	
TSLPT  . . . . . . . . . . . . .  	Number	0000	
TSTCOD . . . . . . . . . . . . .  	L NEAR	0252	CSEG

UPDPOS . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External

VALGET . . . . . . . . . . . . .  	L NEAR	0284	CSEG
VALLOP . . . . . . . . . . . . .  	L NEAR	0289	CSEG
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:42:40
 
GIOCOM - Communications Machine Independent Device Driver CoSymbols-9
                                                             

VALXIT . . . . . . . . . . . . .  	L NEAR	02AF	CSEG

XTNSYS . . . . . . . . . . . . .  	Number	0000	

YCMEOF . . . . . . . . . . . . .  	L NEAR	02CD	CSEG

Z80  . . . . . . . . . . . . . .  	Number	0001	
Z80MAC . . . . . . . . . . . . .  	Number	0001	

$_COM1 . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
_BAUDR . . . . . . . . . . . . .  	Number	0001	
_BYTSZ . . . . . . . . . . . . .  	Number	0003	
_CMBIN . . . . . . . . . . . . .  	Number	0001	
_CMCLF . . . . . . . . . . . . .  	Number	0040	
_CMCOD . . . . . . . . . . . . .  	Number	0010	
_CMCRF . . . . . . . . . . . . .  	Number	0080	
_CMCTS . . . . . . . . . . . . .  	Number	0020	
_CMFDB . . . . . . . . . . . . .  	Number	000F	
_CMFLG . . . . . . . . . . . . .  	Number	000C	
_CMPOS . . . . . . . . . . . . .  	Number	000E	
_CMRTS . . . . . . . . . . . . .  	Number	0002	
_CMWID . . . . . . . . . . . . .  	Number	000D	
_CTSTO . . . . . . . . . . . . .  	Number	0008	
_DEVID . . . . . . . . . . . . .  	Number	0000	
_DSRTO . . . . . . . . . . . . .  	Number	000A	
_OFFST . . . . . . . . . . . . .  	Number	00C2	
_PARIT . . . . . . . . . . . . .  	Number	0004	
_RLSTO . . . . . . . . . . . . .  	Number	0006	
_STOPB . . . . . . . . . . . . .  	Number	0005	


   1393 Source  Lines
   1476 Total   Lines
    445 Symbols

  36194 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
