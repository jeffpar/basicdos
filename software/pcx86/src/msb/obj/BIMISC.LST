Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:30:24
 
BIMISC  BASIC Interpreter miscellaneous routines/WHG/PGA etcPage     1-1
                                                            

                                ; [ This translation created 10-Feb-83 by Versi
				on 4.3 ] 
                                 
 0008                           	.RADIX  8		; To be safe 
                                 
 0000                           CSEG	SEGMENT PUBLIC 'CODESG' 
                                	ASSUME  CS:CSEG 
                                 
                             C  INCLUDE	OEM.INC 
                             C  ; [ This translation created 10-Feb-83 by Versi
				on 4.3 ] 
                             C   
                             C  	PAGE	,132D 
                             C  	SUBTTL  Common file to produce 2-segment 8086 GW-CPM BASIC 
                             C   
                             C  	.SALL 
                             C   
 000A                        C  	.RADIX	10 
 = 0000                      C  	OEMRAM=0D 
                             C  ;Pascal program HFILE searches for the following line - DO NOT MODIFY 
                             C  ;** (VERSION SPECIFIC VALUES) ************************************************ 
 = 0019                      C  	NMLINE=25		;Max screen display text lines 
 = 0001                      C  	NBANKS=1		;Number of graphic planes 
 = 0000                      C  	PALSIZ=0		;Size of OEM color palette 
 = 0000                      C  	DBLCHR=0		;Editor support for KANJI chars 
 = 0000                      C  	KANABS=0		;Kana BASIC (Japanese JIS codes) 
 = 0000                      C  	KANJFN=0		;KANJI String Functions KPOS, KLEN .. 
 = 0000                      C  	JISKTN=0		;&K, &J constants (KANJI) 
 = 0001                      C  	SUPRSH=1		;1=super shift key feature 
 = 000A                      C  	NMKEYF=10		;number of function keys 
 = 000E                      C  	NMKEYT=14		;number of function key traps 
 = 0001                      C  	FKEYON=1		;yes=display function keys 
 = 0001                      C  	SCROLT=1		;Line 25 allocated for status only 
 = 0001                      C  	PLAYSW=1		;for PLAY statement 
 = 0001                      C  	BEEPSW=1		;for SOUND, BEEP statements 
 = 0003                      C  	NMLPT=3			;number of line printers 
 = 0001                      C  	CONSSW=1		;Device CONS: 
 = 0002                      C  	NMCOMT=2		;number of COMmunications ports 
 = 0001                      C  	NMPENT=1		;number of light pens 
 = 0004                      C  	NMSTRT=4		;number of joysticks 
 = 0000                      C  	GWCASS=0		;Cassette switch (CSAVE,CLOAD,MOTOR) 
 = 0001                      C  	IBMLIK=1		;IBM compatibility package 
 = 0001                      C  	IBMTOK=1		;IBM token compatibility 
 = 0001                      C  	DYNCOM=1		;Dynamic communication buffers 
                             C  ;** (END OF VERSION SPECIFIC VALUES) ***************************************** 
                             C  ;Pascal program HFILE searches for the previous line - DO NOT MODIFY 
                             C  ; 
 = 0015                      C  	NUMTRP=NMKEYT+NMCOMT+NMPENT+NMSTRT 
 = 0001                      C  	GW=1			;GW BASIC 
 = 0000                      C  	ESCCTL=0		;Escape Sequence processing in SCROUT 
 = 0000                      C  	GWDBUG=0		;DEBUG statement (TEST VERSIONS ONLY) 
                             C  				; Support is in BINTRP.MAC and GWSTS.MAC 
 = 0000                      C  	SIXDIG=0		;# of digits of accuracy assumed when formatting 
                             C  				;single precision numbers for output. 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:30:24
 
BIMISC  BASIC Interpreter miscellaneous routines/WHG/PGA etcPage     1-2
Common file to produce 2-segment 8086 GW-CPM BASIC          

                             C  				; 0 := 7 digits 
                             C  				; 1 := 6 digits 
 = 0000                      C  	CASSW=0			;CASSETTE SWITCH 
 = 0001                      C  	LABKEY=1		;^T (LABEL) key capability 
 = 0001                      C  	HGHBIT=1		;8-bit characters (ASCII & Graphics) 
 = 0001                      C  	QUEUE=1			;Queued painting algorithm (vs. stack) 
 = 0001                      C  	GIO86=1			;BASIC-86 Generalized I/O 
 = 0001                      C  	SCRNIO=1		;Screen editor 
 = 0001                      C  	SCRN86=1		;8086 Screen editor 
 = 0001                      C  	I8086=1			;CROSS ASSEMBLING FOR 8086 
 = 0001                      C  	MULSEG=1		;MULTI-SEGMENT 8086 BASIC 
 = 0000                      C  	SMALL=0			;"SMALL" VERSION OF 8086 BASIC IF SET 
 = 0001                      C  	TRUROM=1 
 = 0000                      C  	SBC86=0			;SBC 86/02 BOARD? 
 = 0001                      C  	SHORTJ=1		;USE INTRA-SEGMENT SHORT JUMPS 
                             C  				;IN 8086 CODE 
 = 0001                      C  	LNGVAR=1		;LONG VARIABLE NAME SUPPORT (EXTENDED ONLY) 
 = 0000                      C  	SHTERR=0		;SHORT (2 CHAR) ERROR MESSAGES 
 = 0000                      C  	SHTINS=0		;INSTR IN NON-FAST LEN2 VERSIONS 
 = 0000                      C  	SHTLHM=0		;LEFT HAND SIDE MID IN NON FAST LEN2 VERSIONS 
 = 0000                      C  	SHTCHN=0		;ALLOW CHAIN IN NON-5.0 
 = 0000                      C  	SHTPRO=0		;ALLOW PROTECTED FILES IN NON-FIVDSK 
 = 0000                      C  	SHTLIN=0		;ALLOW LINE INPUT IN NON-EXTENDED NON-FAST 
 = 0000                      C  	SHTREN=0		;ALLOW RENUM IN NON-FST VERSIONS 
 = 0001                      C  	INKEYF=1		;ADDS INKEY$ FUNCTION 
 = 0000                      C  	NOIOS=0			;NO I/O STATMENTS (INP,OUT, WAIT) 
 = 0000                      C  	NOPEKS=0		;NO PEEK, POKE 
 = 0000                      C  	NOUSR=0			;NO USR 
 = 0000                      C  	NOCTLA=0		;NO CONTROL-A IN EXTENDED 
 = 0000                      C  	NORUBT=0		;NO RUBOUT 
 = 0000                      C  	NOROMP=0		;NO ROM PROGRAM FEATURE 
 = 0000                      C  	NOATDL=0		;NO AUTO DELETE IN NON-FAST EXTENDED 
 = 0000                      C  	NODOT=0			;NO DOT IN LEN2 
 = 0000                      C  	NOEDIT=0		;NO EDIT COMMAND 
 = 0000                      C  	CRONLY=0		;ONLY PUT OUT CR, NOT CRLF TO TERMINAL 
                             C  				;AND FILES 
 = 0000                      C  	NONULL=0		;NO NULL COMMAND, PUT OUT NULLS IN CRDO & OUTCH1 
 = 0000                      C  	NOVARP=0		;NO VARPTR FUNCTION 
 = 0001                      C  	FIVEO=1			;GENERATE VERSION WITH RELEASE 5.0 FEATURES 
 = 0001                      C  	FIVMEM=1 
 = 0001                      C  	ANSI=1 
 = 0001                      C  	FIVDSK=1		;5.0 NEW DSK CODE 
 = 0001                      C  	FIVLPT=1		;WIDTH LPRINT AND 255 FEATURE 
 = 0001                      C  	HEXOCT=1		;&H..., HEX$, &O..., OCT$ 
 = 0000                      C  	BINCSW=0		;&B..., BIN$ 
 = 0001                      C  	BLODSW=1		;BLOAD, BSAVE COMMANDS 
 = 0001                      C  	MEMIMG=1		;MEMORY IMAGE FILES 
 = 0001                      C  	GENBIN=1 
                             C   
 = 0000                      C  	TRUANS=0		;TRUE ANSI VERSION (STATIC SCAN, ON ERROR) 
 = 0000                      C  	COMMNT=0		;DONT WANT BIG COMMENT 
 = 0000                      C  	INTEL=0			;INTEL PROPRIETARY 
 = 0000                      C  	INTFSW=0		;INTEL FLOATING POINT 
 = 0000                      C  	INTFHW=0 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:30:24
 
BIMISC  BASIC Interpreter miscellaneous routines/WHG/PGA etcPage     1-3
Common file to produce 2-segment 8086 GW-CPM BASIC          

 = 0000                      C  	RMX=0			;INTEL RMX VERSION 
 = 0000                      C  	EDIT80=0		;FOR EDIT80 I/O ROUTINES 
 = 0000                      C  	RSHACK=0 
 = 0000                      C  	INTLEC=0 
 = 0002                      C  	LENGTH=2		;  1 MEANS 8K, 2 MEANS 12K 
 = 0000                      C  	BASDEB=0		;WHETHER DBG WILL BE LOADED WITH BASIC 
 = 0001                      C  	RSTLES=1		;WHETHER BASIC WILL USE RST LOCATIONS 
                             C  				;TO MAKE ITSELF SMALLER & QUICKER 
 = 0001                      C  	REALIO=1		;WHETHER SIMULATE (=0) OR ON MACHINE (=1) 
 = 0001                      C  	GENIO=1			;USE G/P ROUTINES 
 = 0001                      C  	CHSEAT=1		;CHSNS eats chars 
 = 0000                      C  	GENDSK=0		;USE G/P DSK CODE 
 = 0000                      C  	LONGI=0			;WHETHER WE ASK "TERMINAL WIDTH?" 
                             C  				;AND WANT SIN-TAN-COS-ATN? 
 = 0000                      C  	INSTSW=0		;FOR INSTR INSTRUCTION 
 = 0001                      C  	SWAPSW=1		;FOR SWAP STATEMENT 
 = 0000                      C  	MDS=0			;FOR INTEL MDS SYSTEMS 
 = 0000                      C  	SBC=0			;FOR INTEL SINGLE BOARD COMPUTER 
                             C  				;1=SBC 80/10, 2=SBC 80/20 
 = 0001                      C  	PURE=1			;ON FOR PURE CODE 
 = 0000                      C  	KILLER=0		;FOR ROM VERSION THAT WONT RUN IN RAM 
 = 0000                      C  	INTROM=0 
 = 0001                      C  	LPTSW=1 
 = 0001                      C  	NCRLPT=1 
 = 0000                      C  	NCRCAS=0 
 = 0000                      C  	ISC=0			;FOR ISC VERSION 
 = 0000                      C  	LPT3=0			;THREE LPT DRIVER VERSION(QUME,OKIA,CENT) 
 = 0000                      C  	TSLPT=0 
                             C   
 = 0000                      C  	DOS=0			;ON TO GEN ROUTINES FOR DOS 
 = 0001                      C  	DISK=1			;FILE I/O FEATURES 
 = 0000                      C  	TIMSHR=0		;NO TIME-SHARING DISK 
 = 0000                      C  	TSDISK=0		;NO TIME-SHARING DISK FOR US 
 = 0000                      C  	SPCDSK=0		;MAY HAVE MM'S DISK CODE 
 = 0000                      C  	SPCNDS=0 
 = 0001                      C  	FAST=1			;CONSTANT COMPRESSION, RENUM & FRIENDS 
 = 0000                      C  	KEYSTA=0 
 = 0000                      C  	ISIS=0			;FOR VERSION TO RUN UNDER INTEL'S ISIS II DOS 
 = 0000                      C  	MDSISS=0		;FOR MDS VERSION THAT RUNS UNDER ISIS-II 
 = 0001                      C  	CPM=1			;FOR CPM compatible operating systems 
 = 0001                      C  	CPM2=1			;VERSION 2. CPM 
 = 0000                      C  	CPM86=0			;FOR CP/M-86 operating system 
 = 0001                      C  	SCP=1			;MS-DOS operating system 
 = 0000                      C  	CPMCON=0 
 = 0000                      C  	CPMSER=0		;CHECK CPM SERIAL #'S 
 = 0000                      C  	CPMADD=0		;FOR VERSION TO RUN ON ADDS CPM 
 = 0000                      C  	CPMA75=0		;FOR VERSION TO RUN ON ADDS SYSTEM 75 
                             C  				;CP/M 
 = 0000                      C  	CPMRSH=0		;FOR RADIO SHACK CPM/M 
 = 0000                      C  	CPM110=0		;FOR CP/M @1100 HEX (INTERALIA) 
 = 0000                      C  	CPMSBC=0		;FOR VERSION TO RUN ON SBC CP/M AT 4100H 
 = 0000                      C  	CPMPER=0		;FOR PERTEC VERSION OF CPM 
 = 0000                      C  	CPMLIF=0		;LIFEBOAT CP/M AT 4200H 
 = 0000                      C  	CPMMDS=0		;MOHAWK DATA SYSTEMS CP/M 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:30:24
 
BIMISC  BASIC Interpreter miscellaneous routines/WHG/PGA etcPage     1-4
Common file to produce 2-segment 8086 GW-CPM BASIC          

 = 0000                      C  	CPMCON=0 
 = 0000                      C  	Z80=0 
 = 0001                      C  	DISK=1 
 = 0001                      C  	NCRLPT=1 
 = 0001                      C  	RSTLES=1 
 = 0000                      C  	DRVPOS=CPMADD 
 = 0000                      C  	TRNCHR=CPMADD 
 = 0000                      C  	INLADD=CPMADD 
 = 0001                      C  	LISTEN=1		;ON MEANS LISTEN FOR ^C 
 = 0001                      C  	LISTEN=1 
 = 0000                      C  	LEN2=0 
 = 0001                      C  	LEN2=1 
 = 0001                      C  	HEXOCT=1 
 = 0002                      C  	LENGTH=2 
 = 0001                      C  	RSTLES=1 
 = 0001                      C  	FIVLPT=1 
 = 0000                      C  	I8251=0			;THIS SWITCH IS USED FOR ROSEMOUNT VERSION 
 = 0001                      C  	CONTRO=1		;ALLOW ^O 
 = 0001                      C  	LEN3=LEN2 OR CASSW 
                             C   
                             C   
                             C   
 = 0001                      C  	STRING=1 
 = 0001                      C  	NCRLPT=1 
                             C   
                             C  ; *** OEM Switches which need to be defaulted to 0 
                             C  ; 
 = 0000                      C  	CMPUTN=0 
 = 0000                      C  	DUPONT=0 
 = 0000                      C  	EXIDY=0 
 = 0000                      C  	GESBC=0 
 = 0000                      C  	HEATH=0 
 = 0000                      C  	LOKHED=0 
 = 0000                      C  	MOSTEK=0 
 = 0000                      C  	TEK=0 
 = 0000                      C  	TRSER2=0 
 = 0000                      C  	NASCOM=0 
 = 0000                      C  	NATROM=0 
 = 0000                      C  	NCRBAS=0 
 = 0000                      C  	NCRDEB=0 
 = 0000                      C  	NCRDEB=0 
 = 0000                      C  	NCRELS=0 
 = 0000                      C  	ONTEL=0 
 = 0000                      C  	PCS=0 
 = 0000                      C  	SGSATS=0 
 = 0000                      C  	ALTAIR=0 
 = 0000                      C  	DMC=0 
 = 0000                      C  	PANBAS=0 
 = 0000                      C  	XTNSYS=0 
 = 0000                      C  	NECBAS=0 
                             C  ;******************************************************************* 
                             C  ; Z80 related macros 
                             C  ;******************************************************************* 
 = 0001                      C  	Z80=1			;FOR VERSION THAT RUNS ON BOTH 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:30:24
 
BIMISC  BASIC Interpreter miscellaneous routines/WHG/PGA etcPage     1-5
Common file to produce 2-segment 8086 GW-CPM BASIC          

                             C  				;8080'S AND ZILOG Z-80'S 
 = 0001                      C  	Z80MAC=1		;USE 8080 MACROS INSTEAD OF Z80 INSTRUCTIONS 
 = 0000                      C  	Z80=0 
 = 0001                      C  	Z80=1 
                             C  LDIR	MACRO 
                             C  	MOV	WORD PTR A,WORD PTR M 
                             C  	STAX	D 
                             C  	INXF	H 
                             C  	INXF	D 
                             C  	DCXF	B 
                             C  	MOV	WORD PTR A,WORD PTR B 
                             C  	ORA	C 
                             C  	JNZ	_-8D 
                             C  ENDM 
                             C  LDDR	MACRO 
                             C  	MOV	WORD PTR A,WORD PTR M 
                             C  	STAX	D 
                             C  	DCXF	H 
                             C  	DCXF	D 
                             C  	DCXF	B 
                             C  	MOV	WORD PTR A,WORD PTR B 
                             C  	ORA	C 
                             C  	JNZ	_-8D 
                             C  ENDM 
                             C  DJNZ	MACRO	    DEST 
                             C  	DCR	B 
                             C  	JNZ	DEST 
                             C  ENDM 
                             C  ;******************************************************************* 
                             C  ; Define reset routines. 
                             C  ;******************************************************************* 
                             C  FSIGN	MACRO 
                             C  	CALL	SIGN 
                             C  ENDM 
                             C  PUSHM	MACRO 
                             C  	MOV	WORD PTR C,WORD PTR M 
                             C  	INX	H 
                             C  	MOV	WORD PTR B,WORD PTR M 
                             C  	INX	H 
                             C  	PUSH	WORD PTR B 
                             C  ENDM 
                             C  SYNCHK	MACRO	X 
                             C  	CALL	SYNCHR 
                             C  	DB	OFFSET X 
                             C  ENDM 
                             C  OUTCHR	MACRO 
                             C  	CALL	OUTDO 
                             C  ENDM 
                             C  CHRGET	MACRO 
                             C  	CALL	CHRGTR 
                             C  ENDM 
                             C  COMPAR	MACRO 
                             C  	CALL	DCOMPR 
                             C  ENDM 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:30:24
 
BIMISC  BASIC Interpreter miscellaneous routines/WHG/PGA etcPage     1-6
Common file to produce 2-segment 8086 GW-CPM BASIC          

                             C  GETYPE	MACRO 
                             C  	CALL	GETYPR 
                             C  ENDM 
                             C  COMPAR	MACRO 
                             C  	DB	73O 
                             C  	DB	332O 
                             C   ENDM 
                             C  ACRLF	MACRO 
                             C  	DB	13D 
                             C  	DB	10D 
                             C  ENDM 
                             C  PUSHR	MACRO 
                             C  	PUSH	WORD PTR D 
                             C  	PUSH	WORD PTR B 
                             C  ENDM 
                             C  POPR	MACRO 
                             C  	POP	WORD PTR B 
                             C  	POP	WORD PTR D 
                             C  ENDM 
                             C  MOVRI	MACRO	B,C,D,E 
                             C  	DB	1O		; "LXI  B" 
                             C  	DB	OFFSET C 
                             C  	DB	OFFSET B 
                             C  	DB	21O		; "LXI  D" 
                             C  	DB	OFFSET E 
                             C  	DB	OFFSET D 
                             C  ENDM 
                             C  INST	MACRO	X 
                             C  	DB	OX 
                             C  ENDM 
                             C   
                             C   
 = 000F                      C  	CONTO=15		;CHARACTER TO SUPRESS OUTPUT (USUALLY CONTROL-O) 
 = 0000                      C  	DBLTRN=0		;FOR DOUBLE PRECISION TRANSCENDENTALS 
                             C   
 = 000E                      C  	CLMWID=14D		;MAKE COMMA COLUMNS FOURTEEN CHARACTERS 
 = 0080                      C  	DATPSC=128D		;NUMBER OF DATA BYTES IN DISK SECTOR 
 = 0050                      C  	LINLN=80D		;TERMINAL LINE LENGTH 
 = 0084                      C  	LPTLEN=132D 
 = 00FF                      C  	BUFLEN=255		;LONG LINES 
 = 0028                      C  	NAMLEN=40D		;MAXIMUM LENGTH NAME -- 3 TO 127 
                             C   
 = 006E                      C  	NUMLEV=110D		;NUMBER OF STACK LEVELS RESERVED 
                             C  				;BY AN EXPLICIT CALL TO GETSTK 
 = 0004                      C  	STRSIZ=4 
 = 0003                      C  	STRSIZ=3 
 = 0003                      C  	NUMTMP=3		;NUMBER OF STRING TEMPORARIES 
 = 000A                      C  	NUMTMP=10 
                             C   
 0008                        C  	.RADIX	8 
                             C  ; 
                             C  ; Useful macros 
                             C  ; 
                             C   
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:30:24
 
BIMISC  BASIC Interpreter miscellaneous routines/WHG/PGA etcPage     1-7
Common file to produce 2-segment 8086 GW-CPM BASIC          

                             C  ACRLF   MACRO 
                             C          DB      13D 
                             C          DB      10D 
                             C  ENDM 
                             C   
                             C  INS86   MACRO   A,B,C,D 
                             C          DB      A&O 
                             C  IFNB    <B> 
                             C          DB      B&O 
                             C  ENDIF 
                             C  IFNB    <D> 
                             C          DB      C&O 
                             C          DB      D&O 
                             C  ENDIF 
                             C  IFB     <D> 
                             C   IFNB   <C> 
                             C          DW      C 
                             C    ENDIF 
                             C   ENDIF 
                             C  ENDM 
                             C   
                             C  CALLOS  MACRO 
                             C          CALL    CPMENT 
                             C  ENDM 
                             C   
                             C  POPR    MACRO 
                             C          POP     CX 
                             C          POP     DX 
                             C  ENDM 
                             C   
                             C  ADR     MACRO   X 
                             C          DW      X 
                             C  ENDM 
                             C   
                             C  DC      MACRO   ARG 
                             C          IRPC    ZZ,<ARG> 
                             C              IFDIF       <ZZ>,<">
                             C                  DB      "&ZZ&" 
                             C                  _A="&ZZ&" 
                             C              ENDIF 
                             C          ENDM 
                             C  ENDM 
                             C  ; 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:30:24
 
BIMISC  BASIC Interpreter miscellaneous routines/WHG/PGA etcPage     1-8
Common file to produce 2-segment 8086 GW-CPM BASIC          

                             C          PAGE 
                             C   
                             C  DBGBRK	MACRO 
                             C  	DB	0CDh,06h,0CCh 
                             C  	ENDM 
                                 
                                 
                                	TITLE   BIMISC  BASIC Interpreter miscellaneous routines/WHG/PGA etc. 
                                 
                                 
 000A                           	.RADIX	10 
 = 0000                         PC8A=0 
 = 0000                         	LABEL=PC8A 
 = 0000                         TRSHHC=0 
 = 0000                         NECPPC=0 
 = 0000                         NNECBS=0 
 = 0000                         ALPS=0 
 = 0000                         ALPCPM=0 
 = 0000                         OKI=0 
 = 0000                         HAL=0 
 = 0000                         TSHIBA=0 
 = 0000                         CAN8=0 
 = 0000                         	LTRACE=ALPCPM		;trace output selectable 
                                 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG'		; Data Segment 
                                	ASSUME DS:DSEG 
                                	EXTRN	ARYTAB:WORD,CURLIN:WORD,DATPTR:WORD,FRETOP:WORD,MEMSIZ:WORD 
                                	EXTRN	OLDLIN:WORD,OLDTXT:WORD,STREND:WORD 
                                	EXTRN	SUBFLG:WORD,SAVTXT:WORD,TEMPPT:WORD,TEMPST:WORD,TXTTAB:WORD 
                                	EXTRN	VALTYP:WORD,VARTAB:WORD,TEMP:WORD 
                                	EXTRN	TOPMEM:WORD 
                                	EXTRN	PRMLEN:WORD,PRMLN2:WORD,PRMSTK:WORD,FUNACT:WORD,NOFUNS:WORD 
 0000                           DSEG	ENDS			; End of data segment externals 
                                 
                                				; Code Segment ( terminated by END at bottom of file ) 
                                 
                                	EXTRN	BRKTXT:NEAR,CRDO:NEAR,CRDONZ:NEAR,ERROR:NEAR,FADDS:NEAR 
                                	EXTRN	FCERR:NEAR,FCOMP:NEAR,FNDFOR:NEAR,FNDLIN:NEAR,FRMEVL:NEAR 
                                	EXTRN	INLIN:NEAR,LINGET:NEAR 
                                	EXTRN	MOVFM:NEAR,MOVMF:NEAR,MOVRM:NEAR,NEWSTT:NEAR,OVERR:NEAR 
                                	EXTRN	PTRGET:NEAR 
                                	EXTRN	SNERR:NEAR,OUTDO:NEAR,CHRCON:NEAR 
                                	EXTRN	TMERR:NEAR,USERR:NEAR 
                                	EXTRN	ERRCN:NEAR,ERRFIN:NEAR,ERROM:NEAR,GETBYT:NEAR,STPRDY:NEAR 
                                	EXTRN	NFERR:NEAR,INTID2:NEAR,NXTCON:NEAR 
                                 
                                 
                                	EXTRN	CHRGTR:NEAR 
                                	EXTRN	GETYPR:NEAR 
                                	EXTRN	VMOVE:NEAR,FRQINT:NEAR,IADD:NEAR,ICOMP:NEAR 
                                	EXTRN	FRMQNT:NEAR,FRESTR:NEAR 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	DEFTBL:WORD 
 0000                           DSEG	ENDS 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:30:24
 
BIMISC  BASIC Interpreter miscellaneous routines/WHG/PGA etcPage     1-9
Common file to produce 2-segment 8086 GW-CPM BASIC          

 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	OPTFLG:WORD,OPTVAL:WORD 
 0000                           DSEG	ENDS 
                                	PUBLIC	STOPRG 
                                	PUBLIC	TON,TOFF 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	TRCFLG:WORD 
 0000                           DSEG	ENDS 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	ONEFLG:WORD,ONELIN:WORD,SAVSTK:WORD 
 0000                           DSEG	ENDS 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	NXTFLG:WORD 
 0000                           DSEG	ENDS 
                                 
                                	PUBLIC	CLEARC,STOP,ISLET,ISLET2,STKINI,GETSTK 
                                	PUBLIC	SCRATH,SCRTCH 
                                	PUBLIC	STPEND,CONT,ENDST,GTMPRT,RUNC,STPEND,ENDCON,RESTORE 
                                	PUBLIC	STOP,RESFIN,STKERR,REASON,OMERR,OMERRR 
                                 
                                	EXTRN	LINKER:NEAR 
                                 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:30:24
 
BIMISC  BASIC Interpreter miscellaneous routines/WHG/PGA etcPage     1-10
Common file to produce 2-segment 8086 GW-CPM BASIC          

                                	PAGE 
                                ; 
                                ; THIS ROUTINE IS USED TO MAKE SURE A CERTAIN NUMBER 
                                ; OF LOCATIONS REMAIN AVAILABLE FOR THE 
                                ; STACK. THE CALL IS : 
                                ;       MVI     C,NUMBER OF 2 BYTE ENTRIES NECESSARY 
                                ;       CALL    GETSTK 
                                ; 
                                ; THIS ROUTINE MUST BE CALLED BY ANY ROUTINE WHICH PUTS 
                                ; AN ARBITRARY AMOUNT OF STUFF ON THE STACK 
                                ; (I.E. ANY RECURSIVE ROUTINE LIKE FRMEVL) 
                                ; IT IS ALSO CALLED BY ROUTINES SUCH AS "GOSUB" AND "FOR" 
                                ; WHICH MAKE PERMANENT ENTRIES ON THE STACK 
                                ; ROUTINES WHICH MERELY USE AND FREE UP THE GUARANTEED 
                                ; NUMLEV STACK LOCATIONS NEED NOT CALL THIS 
                                ; 
 0000  53                       GETSTK:	PUSH	BX		;SAVE [H,L] 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	STKLOW:WORD 
 0000                           DSEG	ENDS 
 0001  8B 1E 0000 E             	MOV	BX,STKLOW	;in GIO86, stack can grow down to STKLOW 
 0005  B5 00                    	MOV	CH,LOW 0 
 0007  03 D9                    	ADD	BX,CX 
 0009  03 D9                    	ADD	BX,CX		;SEE IF WE CAN HAVE THIS MANY 
                                ; 
                                ; [H,L]= SOME ADDRESS 
                                ; [H,L] IS EXAMINED TO MAKE SURE AT LEAST NUMLEV 
                                ; LOCATIONS REMAIN BETWEEN IT AND THE TOP OF THE STACK 
                                ; 
 = 0024                         	CONS1=256-(2*NUMLEV) 
 000B  B0 24                    	MOV	AL,LOW OFFSET CONS1	;SET [H,L]=-[H,L]-2*NUMLEV 
 000D  2A C3                    	SUB	AL,BL 
 000F  8A D8                    	MOV	BL,AL 
 0011  B0 FF                    	MOV	AL,LOW 255 
 0013  1A C7                    	SBB	AL,BH 
 0015  8A F8                    	MOV	BH,AL 
 0017  72 06                    	JB	SHORT OMERR	;IN CASE [H,L] WAS TOO BIG(MBM 3/18**) 
                                				;NOW SEE IF SP IS LARGER 
 0019  03 DC                    	ADD	BX,SP		;IF SO, CARRY WILL BE SET 
 001B  5B                       	POP	BX		;GET BACK ORIGINAL [H,L] 
 001C  73 01                    	JNB	SHORT $+3 
 001E  C3                       	RET			;WAS OK? 
                                 
                                ;OMERR fixes program links (starting at TXTTAB), resets SAVSTK to TOPMEM-2 
                                ; and issues an Out-of-Memory error message 
                                ; 
 001F                           OMERR: 
 001F  E8 0000 E                	CALL	LINKER		;Fix links incase OMERR was called after 
                                				;deleting a program line because user 
                                				;was attempting to replace it. 
                                				;ONLY IMPORTANT IN VERSIONS WHERE 
                                				;STACK CONTEXT SURVIVES OTHER ERRORS 
 0022  8B 1E 0000 E             	MOV	BX,TOPMEM 
                                				;ELIMINATE ALL STACK CONTEXT TO FREE 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:30:24
 
BIMISC  BASIC Interpreter miscellaneous routines/WHG/PGA etcPage     1-11
Common file to produce 2-segment 8086 GW-CPM BASIC          

 0026  4B                       	DEC	BX		; UP SOME MEMORY SPACE 
 0027  4B                       	DEC	BX		;MAKE SURE THE FNDFOR STOPPER IS SAVED 
 0028  89 1E 0000 E             	MOV	SAVSTK,BX	;PLACE STACK IS RESTORED FROM 
 002C                           OMERRR: 
 002C  BA 0000 E                	MOV	DX,OFFSET ERROM	;"OUT OF MEMORY" 
 002F  E9 0000 E                	JMP	ERROR 
                                	EXTRN	GARBA2:NEAR 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	CHNFLG:WORD 
 0000                           DSEG	ENDS 
 0032                           REASON: 
                                	INS86	71,36,FRETOP	;CMP FRETOP,BX 
 0036  72 01                    	JNAE	SHORT $+3 
 0038  C3                       	RET			;YES 
 0039  A0 0000 E                	MOV	AL,BYTE PTR CHNFLG 
 003C  0A C0                    	OR	AL,AL		;can't garbage collect if CHAINING 
 003E  75 DF                    	JNZ	SHORT OMERR 
 0040  51                       	PUSH	CX		;SAVE ALL REGS 
 0041  52                       	PUSH	DX 
 0042  53                       	PUSH	BX 
 0043  E8 0000 E                	CALL	GARBA2		;DO A GARBAGE COLLECTION 
 0046  5B                       	POP	BX		;RESTORE ALL REGS 
 0047  5A                       	POP	DX 
 0048  59                       	POP	CX 
                                	INS86	71,36,FRETOP	;CMP FRETOP,BX 
 004D  72 01                    	JNAE	SHORT $+3 
 004F  C3                       	RET			;YES 
 0050  EB CD                    	JMP	SHORT OMERR	;NO, GIVE "OUT OF MEMORY BUT DONT TOUCH STACK 
                                ; 
                                ;PAGE 
                                 
                                	SUBTTL NODSKS, SCRATCH (NEW), RUNC, CLEARC, STKINI, QINLIN 
                                 
                                	PUBLIC	NODSKS 
 0052                           NODSKS: 
                                 
 0052  32 C0                    	XOR	AL,AL 
                                ; 
                                ; THE "NEW" COMMAND CLEARS THE PROGRAM TEXT AS WELL 
                                ; AS VARIABLE SPACE 
                                ; 
 0054  74 01                    SCRATH:	JZ	SHORT $+3 
 0056  C3                       	RET			;MAKE SURE THERE IS A TERMINATOR 
 0057                           SCRTCH: 
 0057  8B 1E 0000 E             	MOV	BX,TXTTAB	;GET POINTER TO START OF TEXT 
 005B  E8 02F7 R                	CALL	TOFF		;TURN OFF TRACE. SET [A]=0. 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	PROFLG:WORD 
 0000                           DSEG	ENDS 
 005E  A2 0000 E                	MOV	BYTE PTR PROFLG,AL	;NO LONGER A PROTECTED FILE 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	AUTFLG:WORD 
 0000                           DSEG	ENDS 
 0061  A2 0000 E                	MOV	BYTE PTR AUTFLG,AL	;CLEAR AUTO MODE 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:30:24
 
BIMISC  BASIC Interpreter miscellaneous routines/WHG/PGA etcPage     1-12
NODSKS, SCRATCH (NEW), RUNC, CLEARC, STKINI, QINLIN         

 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	PTRFLG:WORD 
 0000                           DSEG	ENDS 
 0064  A2 0000 E                	MOV	BYTE PTR PTRFLG,AL	;SAY NO POINTERS EXIST 
 0067  88 07                    	MOV	BYTE PTR [BX],AL	;SAVE AT END OFF TEXT 
 0069  43                       	INC	BX		;BUMP POINTER 
 006A  88 07                    	MOV	BYTE PTR [BX],AL	;SAVE ZERO 
 006C  43                       	INC	BX		;BUMP POINTER 
 006D  89 1E 0000 E             	MOV	VARTAB,BX	;NEW START OF VARIABLES 
 0071                           RUNC: 
 0071  8B 1E 0000 E             	MOV	BX,TXTTAB	;POINT AT THE START OF TEXT 
 0075  4B                       	DEC	BX 
                                ; 
                                ; CLEARC IS A SUBROUTINE WHICH INITIALIZES THE VARIABLE AND 
                                ; ARRAY SPACE BY RESETING ARYTAB [THE END OF SIMPLE VARIABLE SPACE] 
                                ; AND STREND [THE END OF ARRAY STORAGE]. IT FALLS INTO STKINI 
                                ; WHICH RESETS THE STACK. [H,L] IS PRESERVED. 
                                ; 
 0076                           CLEARC: 
 0076  89 1E 0000 E             	MOV	TEMP,BX		;SAVE [H,L] IN TEMP 
 007A  E8 01C8 R                	CALL	INITRP		;INIT TRAP TABLE 
                                	EXTRN	GRPRST:NEAR 
 007D  E8 0000 E                	CALL	GRPRST		;Reset graphics 
 0080  E8 01C8 R                	CALL	INITRP		;Initialize trapping 
                                	EXTRN	SNDINI:NEAR 
 0083  E8 0000 E                	CALL	SNDINI		;Initialize SOUND & PLAY 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	MRGFLG:WORD 
 0000                           DSEG	ENDS 
 0086  A0 0000 E                	MOV	AL,BYTE PTR MRGFLG	;DOING A CHAIN MERGE? 
 0089  0A C0                    	OR	AL,AL		;TEST 
 008B  75 15                    	JNZ	SHORT LEVDTB	;LEAVE DEFAULT TABLE ALONE 
 008D  32 C0                    	XOR	AL,AL 
 008F  A2 0000 E                	MOV	BYTE PTR OPTFLG,AL	;INDICATE NO "OPTION" HAS BEEN SEEN 
 0092  A2 0000 E                	MOV	BYTE PTR OPTVAL,AL	;DEFAULT TO "OPTION BASE 0" 
 0095  B5 1A                    	MOV	CH,LOW 26	;INITIALIZE THE DEFAULT VALTYPE TABLE 
 0097  BB 0000 E                	MOV	BX,OFFSET DEFTBL	;POINT AT THE FIRST ENTRY 
 009A                           LOPDFT: 
 009A  C6 07 04                 	MOV	BYTE PTR [BX],LOW 4	;LOOP 26 TIMES STORING A DEFAULT VALTYP 
 009D  43                       	INC	BX		;FOR SINGLE PRECISION 
                                				;COUNT OFF THE LETTERS 
 009E  FE CD                    	DEC	CH 
 00A0  75 F8                    	JNZ	SHORT LOPDFT	;LOOP BACK, AND SETUP THE REST OF THE TABLE 
 00A2                           LEVDTB: 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	RNDCOP:WORD,RNDX:WORD 
 0000                           DSEG	ENDS 
                                	EXTRN	MOVE:NEAR 
 00A2  BA 0000 E                	MOV	DX,OFFSET RNDCOP	;RESET THE RANDOM NUMBER GENERATOR 
 00A5  BB 0000 E                	MOV	BX,OFFSET RNDX	;SEED IN RNDX 
 00A8  E8 0000 E                	CALL	MOVE 
 00AB  32 C0                    	XOR	AL,AL 
 00AD  A2 0000 E                	MOV	BYTE PTR ONEFLG,AL	;RESET ON ERROR FLAG FOR RUNS 
 00B0  8A D8                    	MOV	BL,AL		;RESET ERROR LINE NUMBER 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:30:24
 
BIMISC  BASIC Interpreter miscellaneous routines/WHG/PGA etcPage     1-13
NODSKS, SCRATCH (NEW), RUNC, CLEARC, STKINI, QINLIN         

 00B2  8A F8                    	MOV	BH,AL		;BY SETTING ONELIN=0. 
 00B4  89 1E 0000 E             	MOV	ONELIN,BX 
 00B8  89 1E 0000 E             	MOV	OLDTXT,BX	;MAKE CONTINUING IMPOSSIBLE 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	ERRLIN:WORD 
 0000                           DSEG	ENDS 
 00BC  89 1E 0000 E             	MOV	ERRLIN,BX	;Clear error line number 
 00C0  8B 1E 0000 E             	MOV	BX,MEMSIZ 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	CHNFLG:WORD 
 0000                           DSEG	ENDS 
 00C4  A0 0000 E                	MOV	AL,BYTE PTR CHNFLG	;ARE WE CHAINING? 
 00C7  0A C0                    	OR	AL,AL		;TEST 
 00C9  75 04                    	JNZ	SHORT GODFRE	;FRETOP IS GOOD, LEAVE IT ALONE 
 00CB  89 1E 0000 E             	MOV	FRETOP,BX	;FREE UP STRING SPACE 
 00CF  32 C0                    GODFRE:	XOR	AL,AL		;MAKE SURE [A] IS ZERO, CC'S SET 
 00D1  E8 023F R                	CALL	RESTORE		;RESTORE DATA 
 00D4  8B 1E 0000 E             	MOV	BX,VARTAB	;GET START OF VARIABLE SPACE 
 00D8  89 1E 0000 E             	MOV	ARYTAB,BX	;SAVE IN START OF ARRAY SPACE 
 00DC  89 1E 0000 E             	MOV	STREND,BX	;AND END OF VARIABLE STORAGE 
                                	EXTRN	CLSALL:NEAR 
 00E0  A0 0000 E                	MOV	AL,BYTE PTR MRGFLG	;DOING CHAIN MERGE? 
 00E3  0A C0                    	OR	AL,AL 
 00E5  75 03                    	JNZ	SHORT ??L000 
 00E7  E8 0000 E                	CALL	CLSALL		;IF SO, DONT CLOSE FILES... 
 00EA                           ??L000: 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	NLONLY:WORD 
 0000                           DSEG	ENDS 
 00EA  A0 0000 E                	MOV	AL,BYTE PTR NLONLY	;GET LOAD FLAGS 
 00ED  24 01                    	AND	AL,LOW 1	;CURRENTLY LOADING? 
 00EF  75 03                    	JNZ	SHORT CLRDS1	;YES, LEAVE OTHERS OPEN 
 00F1  A2 0000 E                	MOV	BYTE PTR NLONLY,AL	;ENABLE CLOSE ALL 
 00F4                           CLRDS1: 
                                ; 
                                ; STKINI RESETS THE STACK POINTER ELIMINATING 
                                ; GOSUB & FOR CONTEXT.  STRING TEMPORARIES ARE FREED 
                                ; UP, SUBFLG IS RESET, CONTINUING IS DISALLOWED, 
                                ; AND A DUMMY ENTRY IS PUT ON THE STACK. THIS IS SO 
                                ; FNDFOR WILL ALWAYS FIND A NON-"FOR" ENTRY AT THE BOTTOM 
                                ; OF THE STACK. [A]=0 AND [D,E] IS PRESERVED. 
                                ; 
 00F4  59                       STKINI:	POP	CX		;GET RETURN ADDRESS HERE 
 00F5  8B 1E 0000 E             	MOV	BX,TOPMEM 
 00F9  4B                       	DEC	BX		;TAKE INTO ACCOUNT FNDFOR STOPPER 
 00FA  4B                       	DEC	BX 
 00FB  89 1E 0000 E             	MOV	SAVSTK,BX	;MAKE SURE SAVSTK OK JUST IN CASE. 
 00FF  43                       	INC	BX		;INCREMENT BACK FOR SPHL 
 0100  43                       	INC	BX 
 0101                           STKERR: 
 0101  8B E3                    	MOV	SP,BX		;INITIALIZE STACK 
 0103  BB 0000 E                	MOV	BX,OFFSET TEMPST 
 0106  89 1E 0000 E             	MOV	TEMPPT,BX	;INITIALIZE STRING TEMPORARIES 
                                	EXTRN	CLROVC:NEAR 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:30:24
 
BIMISC  BASIC Interpreter miscellaneous routines/WHG/PGA etcPage     1-14
NODSKS, SCRATCH (NEW), RUNC, CLEARC, STKINI, QINLIN         

 010A  E8 0000 E                	CALL	CLROVC		;BACK TO NORMAL OVERFLOW PRINT MODE 
                                	EXTRN	FINPRT:NEAR 
 010D  E8 0000 E                	CALL	FINPRT		;CLEAR PTRFIL, OTHER I/O FLAGS 
 0110  32 C0                    	XOR	AL,AL		;ZERO OUT A 
 0112  8A F8                    	MOV	BH,AL		;ZERO OUT H 
 0114  8A D8                    	MOV	BL,AL		;ZERO OUT L 
 0116  89 1E 0000 E             	MOV	PRMLEN,BX	;FLAG NO ACTIVE PARAMETERS 
 011A  A2 0000 E                	MOV	BYTE PTR NOFUNS,AL	;INDICATE NO USER FUNCTIONS ACTIVE 
 011D  89 1E 0000 E             	MOV	PRMLN2,BX	;NO PARAMETERS BEING BUILT 
 0121  89 1E 0000 E             	MOV	FUNACT,BX	;SET NUMBER OF FUNCTIONS ACTIVE TO 0 
 0125  89 1E 0000 E             	MOV	PRMSTK,BX	;AND NO PARAMETER BLOCKS ON THE STACK 
 0129  A2 0000 E                	MOV	BYTE PTR SUBFLG,AL	;ALLOW SUBSCRIPTS 
 012C  53                       	PUSH	BX		;PUT ZERO (NON $FOR,$GOSUB) 
                                				;ON THE STACK 
 012D  51                       	PUSH	CX		;PUT RETURN ADDRESS BACK ON 
 012E  8B 1E 0000 E             GTMPRT:	MOV	BX,TEMP		;GET SAVED [H,L] 
 0132  C3                       	RET 
                                 
                                ;PAGE 
                                 
                                	SUBTTL DCOMPR, SYNCHR - REPLACEMENTS FOR COMPAR & SYNCHK IN RSTLES VERSION 
                                	PUBLIC	DCOMPR 
 0133                           DCOMPR: 
 0133  3B DA                    	CMP	BX,DX 
 0135  C3                       	RET 
                                 
                                	PUBLIC	SYNCHR 
 0136                           SYNCHR: 
                                	INS86	136		;POP SI 
                                	INS86	213,373		;MOV DI,BX 
                                	INS86	374		;CLD 
                                	INS86	56		;BYTE COMPARED TO IS IN CODE SEGMENT 
                                	INS86	246		;CMPC-IS CHAR THE RIGHT ONE? 
                                	INS86	126		;PUSH SI 
                                	INS86	213,337		;MOV BX,DI 
 013F  75 0A                    	JNZ	SHORT SYNERR	;GIVE ERROR IF CHARS DONT MATCH 
 0141  8A 07                    	MOV	AL,BYTE PTR [BX]	;GET IT 
 0143  3C 3A                    	CMP	AL,LOW ":"	;IS IT END OF STATMENT OR BIGGER 
 0145  72 01                    	JB	SHORT SYNCON	;GO TO CHRCON 
 0147  C3                       	RET			;DONE 
 0148  E9 0000 E                SYNCON:	JMP	CHRCON		;REST OF CHRGET 
 014B  E9 0000 E                SYNERR:	JMP	SNERR		;IFE CYB 
                                 
                                	SUBTTL TRAP ROUTINES - ON, OFF, STOP, INIT, REQUEST, FREE, RESET 
                                ; 
                                ;Trap flag bit definitions(Routines shift bits - don't change) 
                                ; 
                                PUBLIC	T_ON 
 = 0001                         	T_ON=1			;Trap on 
                                PUBLIC	T_STOP 
 = 0002                         	T_STOP=2		;Trap stop 
                                PUBLIC	T_REQ 
 = 0004                         	T_REQ=4			;Trap request 
                                 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:30:24
 
BIMISC  BASIC Interpreter miscellaneous routines/WHG/PGA etcPage     1-15
TRAP ROUTINES - ON, OFF, STOP, INIT, REQUEST, FREE, RESET   

                                ;TURN TRAP ON 
                                ; 
                                PUBLIC	ONTRP 
 014E  FA                       ONTRP:	CLI 
 014F  8A 07                    	MOV	AL,BYTE PTR [BX] 
 0151  24 04                    	AND	AL,LOW OFFSET T_REQ	;LEAVE REQUEST BIT 
 0153  0C 01                    	OR	AL,LOW OFFSET T_ON	;ADD ON BIT 
 0155  3A 07                    	CMP	AL,BYTE PTR [BX] 
 0157  88 07                    	MOV	BYTE PTR [BX],AL 
 0159  74 04                    	JZ	SHORT ONTRP0	;NO CHANGE IN STATUS 
 015B  24 04                    	AND	AL,LOW OFFSET T_REQ 
 015D  75 46                    	JNZ	SHORT SETTP2	;DELAYED TRAP REQUEST 
 015F  FB                       ONTRP0:	STI 
 0160  C3                       	RET 
                                 
                                ;TURN TRAP OFF 
                                ; 
                                PUBLIC	OFFTRP 
 0161  FA                       OFFTRP:	CLI 
 0162  8A 07                    	MOV	AL,BYTE PTR [BX] 
 0164  C6 07 00                 	MOV	BYTE PTR [BX],LOW 0 
 0167  EB 11                    	JMP	SHORT FRECHK	;FREE OUTSTANDING REQUEST 
                                 
                                ;STOP TRAP 
                                ; 
                                PUBLIC	STPTRP 
 0169  FA                       STPTRP:	CLI 
 016A  8A 07                    	MOV	AL,BYTE PTR [BX] 
 016C  9F                       	LAHF			; PUSH PSW 
 016D  86 C4                    	XCHG	AL,AH 
 016F  50                       	PUSH	AX 
 0170  86 C4                    	XCHG	AL,AH 
 0172  0C 02                    	OR	AL,LOW OFFSET T_STOP 
 0174  88 07                    	MOV	BYTE PTR [BX],AL 
 0176  58                       	POP	AX		; POP PSW 
 0177  86 C4                    	XCHG	AL,AH 
 0179  9E                       	SAHF 
 017A  34 05                    FRECHK:	XOR	AL,LOW OFFSET T_ON+T_REQ	;STOP OR OFF ACTIVE REQUEST? 
 017C  74 3E                    	JZ	SHORT FRETP2	;YES, FREE ACTIVE REQUEST COUNT 
 017E  FB                       	STI 
 017F  C3                       	RET 
                                 
                                ;RESET STOP ON TRAP 
                                ; 
                                PUBLIC	RSTTRP 
 0180  FA                       RSTTRP:	CLI 
 0181  8A 07                    	MOV	AL,BYTE PTR [BX] 
 0183  24 05                    	AND	AL,LOW OFFSET T_ON+T_REQ 
 0185  3A 07                    	CMP	AL,BYTE PTR [BX] 
 0187  88 07                    	MOV	BYTE PTR [BX],AL 
 0189  75 13                    	JNZ	SHORT SETCHK	;IF NEW STATUS, CHECK FOR SETTRP 
 018B  FB                       	STI 
 018C  C3                       	RET 
                                ; 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:30:24
 
BIMISC  BASIC Interpreter miscellaneous routines/WHG/PGA etcPage     1-16
TRAP ROUTINES - ON, OFF, STOP, INIT, REQUEST, FREE, RESET   

                                ;REQUEST TRAP 
                                ; 
                                PUBLIC	REQTRP 
 018D  FA                       REQTRP:	CLI 
 018E  8A 07                    	MOV	AL,BYTE PTR [BX] 
 0190  24 01                    	AND	AL,LOW OFFSET T_ON 
 0192  74 0E                    	JZ	SHORT REQTPX	;TRAP NOT ON 
 0194  8A 07                    	MOV	AL,BYTE PTR [BX] 
 0196  0C 04                    	OR	AL,LOW OFFSET T_REQ 
 0198  3A 07                    	CMP	AL,BYTE PTR [BX] 
 019A  74 06                    	JZ	SHORT REQTPX	;NO CHANGE 
 019C  88 07                    	MOV	BYTE PTR [BX],AL 
 019E  34 05                    SETCHK:	XOR	AL,LOW OFFSET T_ON+T_REQ 
 01A0  74 03                    	JZ	SHORT SETTP2	;GO SET TRAP GLOBAL FLAG 
 01A2  FB                       REQTPX:	STI 
 01A3  C3                       	RET 
                                 
                                ;SET TRAP GLOBAL FLAG 
                                ; 
                                PUBLIC	SETTRP 
 01A4  FA                       SETTRP:	CLI 
 01A5  A0 0000 E                SETTP2:	MOV	AL,BYTE PTR ONGSBF 
 01A8  FE C0                    	INC	AL 
 01AA  A2 0000 E                	MOV	BYTE PTR ONGSBF,AL 
 01AD  FB                       	STI 
 01AE  C3                       	RET 
                                 
                                ;FREE TRAP 
                                ; 
                                PUBLIC	FRETRP 
 01AF  FA                       FRETRP:	CLI 
 01B0  8A 07                    	MOV	AL,BYTE PTR [BX] 
 01B2  24 03                    	AND	AL,LOW OFFSET T_ON+T_STOP 
 01B4  3A 07                    	CMP	AL,BYTE PTR [BX] 
 01B6  88 07                    	MOV	BYTE PTR [BX],AL 
 01B8  75 02                    	JNZ	SHORT FRETP2	;DECR GLOBAL FLAG ALSO 
 01BA  FB                       FRETP1:	STI 
 01BB  C3                       	RET 
 01BC  A0 0000 E                FRETP2:	MOV	AL,BYTE PTR ONGSBF 
 01BF  2C 01                    	SUB	AL,LOW 1 
 01C1  72 F7                    	JB	SHORT FRETP1 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	ONGSBF:WORD 
 0000                           DSEG	ENDS 
 01C3  A2 0000 E                	MOV	BYTE PTR ONGSBF,AL 
 01C6  FB                       	STI 
 01C7  C3                       	RET 
                                 
                                ;INITIALIZE TRAP TABLE 
                                ; 
                                PUBLIC	INITRP 
 01C8                           INITRP: 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	TRPTBL:WORD 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:30:24
 
BIMISC  BASIC Interpreter miscellaneous routines/WHG/PGA etcPage     1-17
TRAP ROUTINES - ON, OFF, STOP, INIT, REQUEST, FREE, RESET   

 0000                           DSEG	ENDS 
 01C8  BB 0000 E                	MOV	BX,OFFSET TRPTBL	;HL=TRAP TABLE ADDRESS 
 01CB  B5 15                    	MOV	CH,LOW OFFSET NUMTRP	;B=NUMBER OF TRAPS 
 01CD  32 C0                    	XOR	AL,AL 
 01CF  88 07                    INITP0:	MOV	BYTE PTR [BX],AL	;TRAP OFF 
 01D1  43                       	INC	BX 
 01D2  88 07                    	MOV	BYTE PTR [BX],AL 
 01D4  43                       	INC	BX 
 01D5  88 07                    	MOV	BYTE PTR [BX],AL	;CLEAR GOSUB ADDR TOO! 
 01D7  43                       	INC	BX 
 01D8  FE CD                    	DEC	CH 
 01DA  75 F3                    	JNZ	SHORT INITP0 
 01DC  A2 0000 E                	MOV	BYTE PTR ONGSBF,AL 
 01DF  C3                       	RET 
                                 
                                ;GO TO TRAP IF ANY ENABLED AND REQUESTED 
                                ; 
                                PUBLIC	GOTRP 
 01E0                           GOTRP: 
 01E0  A0 0000 E                	MOV	AL,BYTE PTR ONEFLG 
 01E3  0A C0                    	OR	AL,AL 
 01E5  74 01                    	JZ	SHORT $+3 
 01E7  C3                       	RET			;CAN'T TRAP FROM ERROR TRAP 
 01E8  53                       	PUSH	BX		;SAVE TESXT POINTER 
 01E9  8B 1E 0000 E             	MOV	BX,CURLIN 
 01ED  8A C7                    	MOV	AL,BH 
 01EF  22 C3                    	AND	AL,BL 
 01F1  FE C0                    	INC	AL 
 01F3  74 18                    	JZ	SHORT GOTRPX	;CAN'T TRAP FROM DIRECT STATEMENT 
                                 
                                ;CHECK FOR ENABLED REQUESTS 
 01F5  BB 0000 E                	MOV	BX,OFFSET TRPTBL 
 01F8  B5 15                    	MOV	CH,LOW OFFSET NUMTRP	;HL=TRAP TABLE ADDRESS, B= # OF TRAPS 
 01FA  8A 07                    GOTRPL:	MOV	AL,BYTE PTR [BX] 
 01FC  3C 05                    	CMP	AL,LOW OFFSET T_ON+T_REQ 
 01FE  74 0F                    	JZ	SHORT GOTRP2	;ENABLED AND REQUESTED 
 0200  9F                       GOTRP1:	LAHF 
 0201  43                       	INC	BX		;NEXT ENTRY 
 0202  9E                       	SAHF 
 0203  9F                       	LAHF 
 0204  43                       	INC	BX		; 
 0205  9E                       	SAHF 
 0206  9F                       	LAHF 
 0207  43                       	INC	BX		; 
 0208  9E                       	SAHF 
 0209  FE CD                    	DEC	CH 
 020B  75 ED                    	JNZ	SHORT GOTRPL 
 020D  5B                       GOTRPX:	POP	BX		;RESTORE TEXT POINTER 
 020E  C3                       	RET 
                                ; 
                                ;TRAP REQUEST FOUND 
                                ; 
 020F                           GOTRP2: 
 020F  51                       	PUSH	CX		;SAVE STATE IN CASE ADDR IS ZERO 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:30:24
 
BIMISC  BASIC Interpreter miscellaneous routines/WHG/PGA etcPage     1-18
TRAP ROUTINES - ON, OFF, STOP, INIT, REQUEST, FREE, RESET   

 0210  9F                       	LAHF 
 0211  43                       	INC	BX 
 0212  9E                       	SAHF 
 0213  8A 17                    	MOV	DL,BYTE PTR [BX] 
 0215  9F                       	LAHF 
 0216  43                       	INC	BX 
 0217  9E                       	SAHF 
 0218  8A 37                    	MOV	DH,BYTE PTR [BX]	;DE=TRAP GOSUB ADDR 
 021A  9F                       	LAHF 
 021B  4B                       	DEC	BX 
 021C  9E                       	SAHF 
 021D  9F                       	LAHF 
 021E  4B                       	DEC	BX		;HL:=TRAP FLAG 
 021F  9E                       	SAHF 
 0220  8A C6                    	MOV	AL,DH 
 0222  0A C2                    	OR	AL,DL 
 0224  59                       	POP	CX		;RESTORE COUNTER 
 0225  74 D9                    	JZ	SHORT GOTRP1	;GOSUB ADDR NOT SPECIFIED,TRY NEXT RTRAP 
 0227  52                       	PUSH	DX		;PUT GOSUB ADDR ON STACK 
 0228  53                       	PUSH	BX		;PUT FLAG ADDR ON STACK 
 0229  E8 01AF R                	CALL	FRETRP		;FREE TRAP REQUEST 
 022C  E8 0169 R                	CALL	STPTRP		;PUT STOP ON TRAP 
 022F  B1 03                    	MOV	CL,LOW 3 
 0231  E8 0000 R                	CALL	GETSTK		;MAKE SURE ROOM IN STACK 
 0234  59                       	POP	CX		;BC=TRAP FLAG ADDRESS 
 0235  5A                       	POP	DX		;DE=GOUSUB ROUTINE ADDR 
 0236  5B                       	POP	BX		;REMOVE RETURN AND HL=TEXT POINTER 
 0237  5E                       	POP	SI		;XTHL 
 0238  87 F3                    	XCHG	SI,BX 
 023A  56                       	PUSH	SI 
 023B  5B                       	POP	BX 
                                EXTRN	GOSUB2:NEAR 
 023C  E9 0000 E                	JMP	GOSUB2		;GOSUB TO ADDR IN DE, FLAG ADDR IN BC 
                                				; AND TEXT PTR IN HL 
                                 
                                	SUBTTL RESTORE, STOP, END 
 023F  87 DA                    RESTORE:	XCHG	BX,DX	;SAVE [H,L] IN [D,E] 
 0241  8B 1E 0000 E             	MOV	BX,TXTTAB 
 0245  74 11                    	JZ	SHORT BGNRST	;RESTORE DATA POINTER TO BEGINNING OF PROGRAM 
 0247  87 DA                    	XCHG	BX,DX		;TEXT POINTER BACK TO [H,L] 
 0249  E8 0000 E                	CALL	LINGET		;GET THE FOLLOWING LINE NUMBER 
 024C  53                       	PUSH	BX		;SAVE TEXT POINTER 
 024D  E8 0000 E                	CALL	FNDLIN		;FIND THE LINE NUMBER 
 0250  8B D9                    	MOV	BX,CX		;GET POINTER TO LINE IN [H,L] 
 0252  5A                       	POP	DX		;TEXT POINTER BACK TO [D,E] 
 0253  72 03                    	JNAE	SHORT ??L001 
 0255  E9 0000 E                	JMP	USERR		;SHOULD HAVE FOUND LINE 
 0258                           ??L001: 
 0258                           BGNRST: 
 0258  4B                       	DEC	BX		;INITIALIZE DATPTR TO [TXTTAB]-1 
 0259  89 1E 0000 E             RESFIN:	MOV	DATPTR,BX	;READ FINISHES COME TO RESFIN 
 025D  87 DA                    	XCHG	BX,DX		;GET THE TEXT POINTER BACK 
 025F  C3                       	RET 
                                 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:30:24
 
BIMISC  BASIC Interpreter miscellaneous routines/WHG/PGA etcPage     1-19
RESTORE, STOP, END                                          

                                 
 0260  74 01                    STOP:	JZ	SHORT $+3 
 0262  C3                       	RET			;RETURN IF NOT CONTROL-C AND MAKE 
                                				;SURE "STOP" STATEMENTS HAVE A TERMINATOR 
 0263                           STOPRG: 
 = 0000                         	HLPEDT=PC8A 
 0263  FE C0                    	INC	AL 
 0265  EB 0F                    	JMP	SHORT CONSTP 
 0267  74 01                    ENDST:	JZ	SHORT $+3 
 0269  C3                       	RET			;MAKE SURE "END" STATEMENTS HAVE A TERMINATOR 
 026A  32 C0                    	XOR	AL,AL		;clear ONEFLG to indicate that we aren't 
 026C  A2 0000 E                	MOV	BYTE PTR ONEFLG,AL	;within an error-trapping routine 
 026F                           ENDS1: 
 026F  9C                       	PUSHF			;PRESERVE CONDITION CODES OVER CALL TO CLSALL 
 0270  75 03                    	JNZ	SHORT ??L002 
 0272  E8 0000 E                	CALL	CLSALL 
 0275                           ??L002: 
 0275  9D                       	POPF			;RESTORE CONDITION CODES 
 0276                           CONSTP: 
 0276  89 1E 0000 E             	MOV	SAVTXT,BX	;SAVE FOR "CONTINUE" 
 027A  BB 0000 E                	MOV	BX,OFFSET TEMPST	;RESET STRING TEMP POINTER 
 027D  89 1E 0000 E             	MOV	TEMPPT,BX	;SAVE IN CASE ^C PRINT USING 
 0281  BB                       	DB	273O	; SKIP	;"LXI H," OVER NEXT TWO 
 0282  0C FF                    STPEND:	OR	AL,LOW 377O	;SET NON-ZERO TO FORCE PRINTING OF BREAK MESSAGE 
 0284  59                       	POP	CX		;POP OFF NEWSTT ADDRESS 
 0285  8B 1E 0000 E             ENDCON:	MOV	BX,CURLIN	;SAVE CURLIN 
 0289  53                       	PUSH	BX		;SAVE LINE TO PRINT 
 028A  9C                       	PUSHF			;SAVE THE MESSAGE FLAG 
                                				;ZERO MEANS DON'T PRINT "BREAK" 
 028B  8A C3                    	MOV	AL,BL 
 028D  22 C7                    	AND	AL,BH		;SEE IF IT WAS DIRECT 
 028F  FE C0                    	INC	AL 
 0291  74 0C                    	JZ	SHORT DIRIS	;IF NOT SET UP FOR CONTINUE 
 0293  89 1E 0000 E             	MOV	OLDLIN,BX	;SAVE OLD LINE # 
 0297  8B 1E 0000 E             	MOV	BX,SAVTXT	;GET POINTER TO START OF STATEMENT 
 029B  89 1E 0000 E             	MOV	OLDTXT,BX	;SAVE IT 
 029F                           DIRIS: 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	CNTOFL:WORD 
 0000                           DSEG	ENDS 
 029F  32 C0                    	XOR	AL,AL 
 02A1  A2 0000 E                	MOV	BYTE PTR CNTOFL,AL	;FORCE OUTPUT 
                                	EXTRN	FINLPT:NEAR 
 02A4  E8 0000 E                	CALL	FINLPT 
 02A7  E8 0000 E                	CALL	CRDONZ		;PRINT CR IF TTYPOS .NE. 0 
 02AA  9D                       	POPF			;GET BACK ^C FLAG 
 02AB  BB 0000 E                	MOV	BX,OFFSET BRKTXT	;"BREAK" 
 02AE  74 03                    	JZ	SHORT ??L003 
 02B0  E9 0000 E                	JMP	ERRFIN		;CALL STROUT AND FALL INTO READY 
 02B3                           ??L003: 
 02B3  E9 0000 E                	JMP	STPRDY		;POP OFF LINE NUMBER & FALL INTO READY 
                                ;PAGE 
                                 
                                	SUBTTL CTRLPT, DDT, CONT, NULL, TRON, TROFF 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:30:24
 
BIMISC  BASIC Interpreter miscellaneous routines/WHG/PGA etcPage     1-20
CTRLPT, DDT, CONT, NULL, TRON, TROFF                        

                                 
                                PUBLIC	CTROPT 
 02B6  B0 0F                    CTROPT:	MOV	AL,LOW OFFSET CONTO	;PRINT AN ^O. 
                                PUBLIC	CTRLPT 
 02B8  50                       CTRLPT:	PUSH	AX		;SAVE CURRENT CHAR 
 02B9  2C 03                    	SUB	AL,LOW 3	;CONTROL-C? 
 02BB  75 03                    	JNZ	SHORT NTCTCT	;NO 
 02BD  A2 0000 E                	MOV	BYTE PTR CNTOFL,AL	;RESET ^O FLAG 
 02C0                           NTCTCT: 
 02C0  B0 5E                    	MOV	AL,LOW "^"	;PRINT UP-ARROW. 
 02C2  E8 0000 E                	CALL	OUTDO		;SEND IT 
 02C5  58                       	POP	AX		;GET BACK CONTROL CHAR. 
 02C6  04 40                    	ADD	AL,LOW 100O	;MAKE PRINTABLE 
 02C8  E8 0000 E                	CALL	OUTDO		;SEND IT 
 02CB  B0 FF                    	MOV	AL,LOW 377O	;MARK LINE AS NOT FOR INPUT 
 02CD  E8 0000 E                	CALL	OUTDO 
 02D0  E9 0000 E                	JMP	CRDO		;AND THEN SEND CRLF. 
                                 
                                 
                                 
 02D3  8B 1E 0000 E             CONT:	MOV	BX,OLDTXT	;A STORED TEXT POINTER OF 
                                				;ZERO IS SETUP BY STKINI 
                                				;AND INDICATES THERE IS NOTHING 
                                				;TO CONTINUE 
 02D7  0B DB                    	OR	BX,BX		;"STOP","END",TYPING CRLF 
                                				;TO "INPUT" AND ^C SETUP OLDTXT 
 02D9  BA 0000 E                RESERR:	MOV	DX,OFFSET ERRCN	;"CAN'T CONTINUE" 
 02DC  75 03                    	JNZ	SHORT ??L004 
 02DE  E9 0000 E                	JMP	ERROR 
 02E1                           ??L004: 
 02E1  8B 16 0000 E             	MOV	DX,OLDLIN 
 02E5  89 16 0000 E             	MOV	CURLIN,DX	;SET UP OLD LINE # AS CURRENT LINE # 
 02E9  C3                       	RET 
                                 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	NULCNT:WORD 
 0000                           DSEG	ENDS 
                                	PUBLIC	NULL 
 02EA  E8 0000 E                NULL:	CALL	GETBYT 
 02ED  74 01                    	JZ	SHORT $+3 
 02EF  C3                       	RET			;MAKE SURE THERE IS A TERMINATOR 
 02F0  FE C0                    	INC	AL		;CODE AT CRDO EXPECTS AT LEAST 1 
 02F2  A2 0000 E                	MOV	BYTE PTR NULCNT,AL	;CHANGE NUMBER OF NULLS 
 02F5  C3                       	RET 
                                 
 02F6  B8                       TON:	DB	270O	; SKIP	;"MVI A," NON-ZERO QUANTITY 
 02F7  32 C0                    TOFF:	XOR	AL,AL		;MAKE [A]=0 FOR NO TRACE 
 02F9  A2 0000 E                	MOV	BYTE PTR TRCFLG,AL	;UPDATE THE TRACE FLAG 
 02FC  C3                       	RET 
                                ;PAGE 
                                 
                                	SUBTTL SWAP, ERASE 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	SWPTMP:WORD 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:30:24
 
BIMISC  BASIC Interpreter miscellaneous routines/WHG/PGA etcPage     1-21
SWAP, ERASE                                                 

 0000                           DSEG	ENDS 
                                	PUBLIC	SWAP 
 02FD  E8 0000 E                SWAP:	CALL	PTRGET		;[D,E]=POINTER AT VALUE #1 
 0300  52                       	PUSH	DX		;SAVE THE POINTER AT VALUE #1 
 0301  53                       	PUSH	BX		;SAVE THE TEXT POINTER 
 0302  BB 0000 E                	MOV	BX,OFFSET SWPTMP	;TEMPORARY STORE LOCATION 
 0305  E8 0000 E                	CALL	VMOVE		;SWPTMP=VALUE #1 
 0308  8B 1E 0000 E             	MOV	BX,ARYTAB	;GET ARYTAB SO CHANGE CAN BE NOTED 
 030C  5E                       	POP	SI		;XTHL 
 030D  87 F3                    	XCHG	SI,BX 
 030F  56                       	PUSH	SI		;GET THE TEXT POINTER BACK 
                                				;AND SAVE CURRENT [ARYTAB] 
 0310  E8 0000 E                	CALL	GETYPR 
 0313  50                       	PUSH	AX		;SAVE THE TYPE OF VALUE #1 
 0314  E8 0136 R                	CALL	SYNCHR 
 0317  2C                       	DB	OFFSET 44	;MAKE SURE THE VARIABLES ARE 
                                				;DELIMITED BY A COMMA 
 0318  E8 0000 E                	CALL	PTRGET		;[D,E]=POINTER AT VALUE #2 
 031B  58                       	POP	AX 
 031C  8A E8                    	MOV	CH,AL		;[B]=TYPE OF VALUE #1 
 031E  E8 0000 E                	CALL	GETYPR		;[A]=TYPE OF VALUE #2 
 0321  3A C5                    	CMP	AL,CH		;MAKE SURE THEY ARE THE SAME 
 0323  74 03                    	JZ	SHORT ??L005 
 0325  E9 0000 E                	JMP	TMERR		;IF NOT, "TYPE MISMATCH" ERROR 
 0328                           ??L005: 
 0328  5E                       	POP	SI		;XTHL 
 0329  87 F3                    	XCHG	SI,BX 
 032B  56                       	PUSH	SI		;[H,L]=OLD [ARYTAB] SAVE THE TEXT POINTER 
 032C  87 DA                    	XCHG	BX,DX		;[D,E]=OLD [ARYTAB] 
 032E  53                       	PUSH	BX		;SAVE THE POINTER AT VALUE #2 
 032F  8B 1E 0000 E             	MOV	BX,ARYTAB	;GET NEW [ARYTAB] 
 0333  3B DA                    	CMP	BX,DX 
 0335  75 13                    	JNZ	SHORT GFCERR	;IF ITS CHANGED, ERROR 
 0337  5A                       	POP	DX		;[D,E]=POINTER AT VALUE #2 
 0338  5B                       	POP	BX		;[H,L]=TEXT POINTER 
 0339  5E                       	POP	SI		;XTHL 
 033A  87 F3                    	XCHG	SI,BX 
 033C  56                       	PUSH	SI		;SAVE THE TEXT POINTER ON THE STACK 
                                				;[H,L]=POINTER AT VALUE #1 
 033D  52                       	PUSH	DX		;SAVE THE POINTER AT VALUE #2 
 033E  E8 0000 E                	CALL	VMOVE		;TRANSFER VALUE #2 INTO VALUE #1'S OLD 
                                				;POSITION 
 0341  5B                       	POP	BX		;[H,L]=POINTER AT VALUE #2 
 0342  BA 0000 E                	MOV	DX,OFFSET SWPTMP	;LOCATION OF VALUE #1 
 0345  E8 0000 E                	CALL	VMOVE		;TRANSFER SWPTMP=VALUE #1 INTO VALUE #2'S 
                                				;OLD POSITION 
 0348  5B                       	POP	BX		;GET THE TEXT POINTER BACK 
 0349  C3                       	RET 
                                 
 034A  E9 0000 E                GFCERR:	JMP	FCERR		;GIVE A FUNCTION CALL ERROR 
                                 
                                	PUBLIC	ERASE 
 034D                           ERASE: 
 034D  B0 01                    	MOV	AL,LOW 1 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:30:24
 
BIMISC  BASIC Interpreter miscellaneous routines/WHG/PGA etcPage     1-22
SWAP, ERASE                                                 

 034F  A2 0000 E                	MOV	BYTE PTR SUBFLG,AL	;THAT THIS IS "ERASE" CALLING PTRGET 
 0352  E8 0000 E                	CALL	PTRGET		;GO FIND OUT WHERE TO ERASE 
 0355  75 F3                    	JNZ	SHORT GFCERR	;PTRGET DID NOT FIND VARIABLE! 
 0357  53                       	PUSH	BX		;SAVE THE TEXT POINTER 
 0358  A2 0000 E                	MOV	BYTE PTR SUBFLG,AL	;ZERO OUT SUBFLG TO RESET "ERASE" FLAG 
 035B  8A FD                    	MOV	BH,CH		;[B,C]=START OF ARRAY TO ERASE 
 035D  8A D9                    	MOV	BL,CL 
 035F  49                       	DEC	CX		;BACK UP TO THE FRONT 
 0360  49                       	DEC	CX		;NO VALUE TYPE WITHOUT LENGTH=2 
 0361  49                       	DEC	CX		;BACK UP ONE MORE 
 0362  8B F1                    LPBKNM:	MOV	SI,CX 
 0364  8A 04                    	MOV	AL,[SI]		;GET A CHARACTER. ONLY THE COUNT HAS HIGH BIT=0 
 0366  49                       	DEC	CX		;SO LOOP UNTIL WE SKIP OVER THE COUNT 
 0367  0A C0                    	OR	AL,AL		;SKIP ALL THE EXTRA CHARACTERS 
 0369  79 02                    	JNS	SHORT ??L006 
 036B  EB F5                    	JMP	LPBKNM 
 036D                           ??L006: 
 036D  49                       	DEC	CX 
 036E  49                       	DEC	CX 
 036F  03 DA                    	ADD	BX,DX		;[H,L]=THE END OF THIS ARRAY ENTRY 
 0371  87 DA                    	XCHG	BX,DX		;[D,E]=END OF THIS ARRAY 
 0373  8B 1E 0000 E             	MOV	BX,STREND	;[H,L]=LAST LOCATION TO MOVE UP 
 0377  3B DA                    ERSLOP:	CMP	BX,DX		;SEE IF THE LAST LOCATION IS GOING TO BE MOVED 
 0379  8B F2                    	MOV	SI,DX 
 037B  8A 04                    	MOV	AL,[SI]		;DO THE MOVE 
 037D  8B F9                    	MOV	DI,CX 
 037F  AA                       	STOSB 
 0380  9F                       	LAHF 
 0381  42                       	INC	DX		;UPDATE THE POINTERS 
 0382  9E                       	SAHF 
 0383  9F                       	LAHF 
 0384  41                       	INC	CX 
 0385  9E                       	SAHF 
 0386  75 EF                    	JNZ	SHORT ERSLOP	;MOVE THE REST 
 0388  49                       	DEC	CX 
 0389  8B D9                    	MOV	BX,CX		;SETUP THE NEW STORAGE END POINTER 
 038B  89 1E 0000 E             	MOV	STREND,BX 
 038F  5B                       	POP	BX		;GET BACK THE TEXT POINTER 
 0390  8A 07                    	MOV	AL,BYTE PTR [BX]	;SEE IF MORE ERASURES NEEDED 
 0392  3C 2C                    	CMP	AL,LOW 54O	;ADDITIONAL VARIABLES DELIMITED BY COMMA 
 0394  74 01                    	JZ	SHORT $+3 
 0396  C3                       	RET			;ALL DONE IF NOT 
 0397  E8 0000 E                	CALL	CHRGTR 
 039A  EB B1                    	JMP	SHORT ERASE 
                                 
                                 
 039C                           CASDON: 
                                	PUBLIC	POPAHT 
 039C  58                       POPAHT:	POP	AX		; POP PSW 
 039D  86 C4                    	XCHG	AL,AH 
 039F  9E                       	SAHF 
 03A0  5B                       	POP	BX		;GET THE TEXT POINTER 
 03A1  C3                       	RET 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:30:24
 
BIMISC  BASIC Interpreter miscellaneous routines/WHG/PGA etcPage     1-23
SWAP, ERASE                                                 

                                	PAGE 
                                ; 
                                ;TEST FOR A LETTER / CARRY ON=NOT A LETTER 
                                ;                    CARRY OFF=A LETTER 
                                ; 
 03A2  8A 07                    ISLET:	MOV	AL,BYTE PTR [BX] 
 03A4  3C 41                    ISLET2:	CMP	AL,LOW "A" 
 03A6  73 01                    	JNB	SHORT $+3 
 03A8  C3                       	RET			;IF LESS THAN "A", RETURN EARLY 
 03A9  3C 5B                    	CMP	AL,LOW OFFSET "Z"+1 
 03AB  F5                       	CMC 
 03AC  C3                       	RET 
                                 
                                ;PAGE 
                                 
                                	SUBTTL CLEAR 
                                	PUBLIC	CLEAR 
                                 
 03AD  E9 0076 R                GCLERC:	JMP	CLEARC		;IFE LABEL  GO TO CLEARC 
                                 
                                ;Syntax: CLEAR [[a][,b [,c]]] 
                                ; 
                                ; a is a relic of pre-fiveo memory management and is ignored 
                                ; b is the highest memory location available to BASIC-80 
                                ; b is the the number of bytes in the data segment for BASIC-86 
                                ; c is the number of bytes to be used as stack space by BASIC 
                                ; 
 03B0                           CLEAR: 
 03B0  9F                       	LAHF			; PUSH PSW 
 03B1  86 C4                    	XCHG	AL,AH 
 03B3  50                       	PUSH	AX 
 03B4  86 C4                    	XCHG	AL,AH 
 03B6  32 C0                    	XOR	AL,AL		;Since FILTAB is reset below, 
 03B8  A2 0000 E                	MOV	BYTE PTR NLONLY,AL	; close all files - even file 0, 
 03BB  E8 0000 E                	CALL	CLSALL		; because of DYNAMIC FDB's 
 03BE  58                       	POP	AX		; POP PSW 
 03BF  86 C4                    	XCHG	AL,AH 
 03C1  9E                       	SAHF 
 03C2  74 E9                    	JZ	SHORT GCLERC	;IF NO FORMULA JUST CLEAR 
 03C4  3C 2C                    	CMP	AL,LOW 54O	;ALLOW NO STRING SPACE 
 03C6  74 09                    	JZ	SHORT CSKPCM 
 03C8  E8 0000 E                	CALL	INTID2		;Get Dummy Integer Parameter into [D,E] 
 03CB  4B                       	DEC	BX 
 03CC  E8 0000 E                	CALL	CHRGTR		;SEE IF ITS THE END 
 03CF  74 DC                    	JZ	SHORT GCLERC 
 03D1  E8 0136 R                CSKPCM:	CALL	SYNCHR 
 03D4  2C                       	DB	OFFSET 54O 
 03D5  74 D6                    	JZ	SHORT GCLERC 
 03D7  8B 16 0000 E             	MOV	DX,TOPMEM	;Use current top of memory as default 
 03DB  3C 2C                    	CMP	AL,LOW 54O 
 03DD  74 10                    	JZ	SHORT CLEARS	;SHOULD FINISH THERE 
 03DF  E8 0444 R                	CALL	GETMPM		;GET MEMORY SIZE PARAMETER 
 03E2  53                       	PUSH	BX		;save text pointer 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:30:24
 
BIMISC  BASIC Interpreter miscellaneous routines/WHG/PGA etcPage     1-24
CLEAR                                                       

                                	EXTRN	MAXMEM:WORD 
 0000                           DSEG	ENDS 
 03E3  8B 1E 0000 E             	MOV	BX,MAXMEM	;[HL]=highest byte available to BASIC 
 03E7  3B DA                    	CMP	BX,DX 
 03E9  73 03                    	JAE	SHORT ??L007 
 03EB  E9 0000 E                	JMP	FCERR		;branch if user tried to get more 
 03EE                           ??L007: 
 03EE  5B                       	POP	BX		;restore text pointer 
 03EF  4B                       CLEARS:	DEC	BX		;BACK UP 
 03F0  E8 0000 E                	CALL	CHRGTR		;GET CHAR 
 03F3  52                       	PUSH	DX		;SAVE NEW HIGH MEM 
 03F4  74 5C                    	JZ	SHORT CDFSTK	;USE SAME STACK SIZE 
 03F6  E8 0136 R                	CALL	SYNCHR 
 03F9  2C                       	DB	OFFSET 54O 
 03FA  74 56                    	JZ	SHORT CDFSTK 
 03FC  E8 0444 R                	CALL	GETMPM		;GET STACK SIZE PARAMETER 
 03FF  4B                       	DEC	BX 
 0400  E8 0000 E                	CALL	CHRGTR 
 0403  74 03                    	JZ	SHORT ??L008 
 0405  E9 0000 E                	JMP	SNERR 
 0408                           ??L008: 
 0408  5E                       CLEART:	POP	SI		;XTHL 
 0409  87 F3                    	XCHG	SI,BX 
 040B  56                       	PUSH	SI		;SAVE TEXT POINTER 
 040C  53                       	PUSH	BX		;SAVE CANDIDATE FOR TOPMEM 
 040D  BB 00F0                  	MOV	BX,OFFSET (2*NUMLEV)+20	;CHECK STACK SIZE IS REASONABLE 
 0410  3B DA                    	CMP	BX,DX 
 0412  73 3B                    	JAE	SHORT GOMERR 
 0414  5B                       	POP	BX		;[HL]=candidate for TOPMEM 
 0415  E8 045C R                	CALL	SUBDE		;DE=HL-DE=High Ram - Stack Size=new stack bottom 
 0418  72 35                    	JB	SHORT GOMERR	;WANTED MORE THAN TOTAL! 
 041A  53                       	PUSH	BX		;SAVE STACK BOTTOM 
 041B  8B 1E 0000 E             	MOV	BX,VARTAB	;TOP LOCATION IN USE 
 041F  B9 0014                  	MOV	CX,20		;LEAVE BREATHING ROOM 
 0422  03 D9                    	ADD	BX,CX 
 0424  3B DA                    	CMP	BX,DX		;ROOM? 
 0426  73 27                    	JAE	SHORT GOMERR	;NO, DON'T EVEN CLEAR 
 0428  87 DA                    	XCHG	BX,DX		;NEW STACK BASE IN [H,L] 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	FILTAB:WORD,STKLOW:WORD 
 0000                           DSEG	ENDS 
 042A  89 1E 0000 E             	MOV	STKLOW,BX	;set bottom of stack limit 
 042E  89 1E 0000 E             	MOV	FILTAB,BX	;set FDB chain base (No files are open) 
 0432  4B                       	DEC	BX 
 0433  C6 07 00                 	MOV	BYTE PTR [BX],LOW 0	;set string terminator so VAL$ will always work 
 0436  4B                       	DEC	BX 
 0437  89 1E 0000 E             	MOV	MEMSIZ,BX	;SET UP NEW STACK BOTTOM 
 043B  5B                       	POP	BX		;HL=Highest Ram available to BASIC 
 043C  89 1E 0000 E             	MOV	TOPMEM,BX	;SAVE IT, IT MUST BE OK 
 0440  5B                       	POP	BX		;REGAIN THE TEXT POINTER 
 0441  E9 03AD R                	JMP	GCLERC		;GO CLEAR 
                                 
 0444  E8 0000 E                GETMPM:	CALL	FRMQNT		;EVALUATE FORMULA 
 0447  0B D2                    	OR	DX,DX		;Memory size =0? 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:30:24
 
BIMISC  BASIC Interpreter miscellaneous routines/WHG/PGA etcPage     1-25
CLEAR                                                       

 0449  75 03                    	JNZ	SHORT ??L009 
 044B  E9 0000 E                	JMP	FCERR		;Yes, error 
 044E                           ??L009: 
 044E  C3                       	RET 
                                 
 044F  E9 001F R                GOMERR:	JMP	OMERR		;GIVE OM ERROR 
                                 
                                ;CLEAR Default Stack Size to current stack size 
                                ; 
 0452                           CDFSTK: 
 0452  8B 16 0000 E             	MOV	DX,TOPMEM	;FIGURE OUT CURRENT STACK SIZE 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	STKLOW:WORD 
 0000                           DSEG	ENDS 
                                	INS86	53,26,STKLOW	;SUB DX,STKLOW 
 045A  EB AC                    	JMP	SHORT CLEART 
                                 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:30:24
 
BIMISC  BASIC Interpreter miscellaneous routines/WHG/PGA etcPage     1-26
CLEAR                                                       

                                	PAGE 
                                ; [D,E]=[H,L]-[D,E] 
                                	PUBLIC	SUBDE 
 045C                           SUBDE: 
                                	INS86	213,303		;MOV AX,BX 
                                	INS86	53,302		;SUB AX,DX 
                                	INS86	213,320		;MOV DX,AX 
 0462  C3                       	RET 
                                ;PAGE 
                                 
                                 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:30:24
 
BIMISC  BASIC Interpreter miscellaneous routines/WHG/PGA etcPage     1-27
CLEAR                                                       

                                	PAGE 
                                 
                                	PUBLIC	ISFLIO 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	PTRFIL:WORD 
 0000                           DSEG	ENDS 
 0463                           ISFLIO: 
 0463  53                       	PUSH	BX		;SAVE [H,L] 
 0464  8B 1E 0000 E             	MOV	BX,PTRFIL	;GET FILE POINTER 
 0468  0B DB                    	OR	BX,BX		;NO ZERO? 
 046A  5B                       	POP	BX		;RESTORE [H,L] 
 046B  C3                       	RET 
                                 
                                ;EXTERNAL DECLARATIONS REQUIRED FOR LABELSTUFF 
                                ; INTERNAL DECLARATIONS REQUIRED 
                                ; 
                                ;ALL THIS STUFF HAS BEEN ADDED FOR LABELS 
                                ;IF LABELS ARE REQUIRED  LABEL SWITCH SHLOULD BE ON 
                                ;;; 
                                ; 
                                ; 
                                ;CHKLBL ROUTINE CHECKS WHETHER THE LABEL IS ALREADY PRESENT IN THE SYMBOL TABLE 
                                ;HL=POINTER TO LABEL 
                                ;B=LABEL LENGTH 
                                ;DE IS SET TO THE WORD WHICH CONTAINS THE POINTER TO THE STMNT IN CASE THERE IS MATCH 
                                ;Z IS SET INCASE MATCH 
                                ;HL AND B ARE PRESERVED 
 046C                           CSEG	ENDS 
                                	END 

Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:30:24
 
BIMISC  BASIC Interpreter miscellaneous routines/WHG/PGA etcSymbols-1
                                                             

Macros:

		N a m e			Lines

ACRLF  . . . . . . . . . . . . .  	   2
ADR  . . . . . . . . . . . . . .  	   1
CALLOS . . . . . . . . . . . . .  	   1
CHRGET . . . . . . . . . . . . .  	   1
COMPAR . . . . . . . . . . . . .  	   2
DBGBRK . . . . . . . . . . . . .  	   1
DC . . . . . . . . . . . . . . .  	   6
DJNZ . . . . . . . . . . . . . .  	   2
FSIGN  . . . . . . . . . . . . .  	   1
GETYPE . . . . . . . . . . . . .  	   1
INS86  . . . . . . . . . . . . .  	  13
INST . . . . . . . . . . . . . .  	   1
LDDR . . . . . . . . . . . . . .  	   8
LDIR . . . . . . . . . . . . . .  	   8
MOVRI  . . . . . . . . . . . . .  	   6
OUTCHR . . . . . . . . . . . . .  	   1
POPR . . . . . . . . . . . . . .  	   2
PUSHM  . . . . . . . . . . . . .  	   5
PUSHR  . . . . . . . . . . . . .  	   2
SYNCHK . . . . . . . . . . . . .  	   2

Segments and Groups:

                N a m e         	Size	Align	Combine Class

CSEG . . . . . . . . . . . . . .  	046C	PARA	PUBLIC	'CODESG'
DSEG . . . . . . . . . . . . . .  	0000	PARA	PUBLIC	'DATASG'

Symbols:            

                N a m e         	Type	Value	Attr         

ALPCPM . . . . . . . . . . . . .  	Number	0000	
ALPS . . . . . . . . . . . . . .  	Number	0000	
ALTAIR . . . . . . . . . . . . .  	Number	0000	
ANSI . . . . . . . . . . . . . .  	Number	0001	
ARYTAB . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
AUTFLG . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External

BASDEB . . . . . . . . . . . . .  	Number	0000	
BEEPSW . . . . . . . . . . . . .  	Number	0001	
BGNRST . . . . . . . . . . . . .  	L NEAR	0258	CSEG
BINCSW . . . . . . . . . . . . .  	Number	0000	
BLODSW . . . . . . . . . . . . .  	Number	0001	
BRKTXT . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
BUFLEN . . . . . . . . . . . . .  	Number	00FF	

CAN8 . . . . . . . . . . . . . .  	Number	0000	
CASDON . . . . . . . . . . . . .  	L NEAR	039C	CSEG
CASSW  . . . . . . . . . . . . .  	Number	0000	
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:30:24
 
BIMISC  BASIC Interpreter miscellaneous routines/WHG/PGA etcSymbols-2
                                                             

CDFSTK . . . . . . . . . . . . .  	L NEAR	0452	CSEG
CHNFLG . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
CHRCON . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
CHRGTR . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
CHSEAT . . . . . . . . . . . . .  	Number	0001	
CLEAR  . . . . . . . . . . . . .  	L NEAR	03B0	CSEG	Global
CLEARC . . . . . . . . . . . . .  	L NEAR	0076	CSEG	Global
CLEARS . . . . . . . . . . . . .  	L NEAR	03EF	CSEG
CLEART . . . . . . . . . . . . .  	L NEAR	0408	CSEG
CLMWID . . . . . . . . . . . . .  	Number	000E	
CLRDS1 . . . . . . . . . . . . .  	L NEAR	00F4	CSEG
CLROVC . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
CLSALL . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
CMPUTN . . . . . . . . . . . . .  	Number	0000	
CNTOFL . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
COMMNT . . . . . . . . . . . . .  	Number	0000	
CONS1  . . . . . . . . . . . . .  	Number	0024	
CONSSW . . . . . . . . . . . . .  	Number	0001	
CONSTP . . . . . . . . . . . . .  	L NEAR	0276	CSEG
CONT . . . . . . . . . . . . . .  	L NEAR	02D3	CSEG	Global
CONTO  . . . . . . . . . . . . .  	Number	000F	
CONTRO . . . . . . . . . . . . .  	Number	0001	
CPM  . . . . . . . . . . . . . .  	Number	0001	
CPM110 . . . . . . . . . . . . .  	Number	0000	
CPM2 . . . . . . . . . . . . . .  	Number	0001	
CPM86  . . . . . . . . . . . . .  	Number	0000	
CPMA75 . . . . . . . . . . . . .  	Number	0000	
CPMADD . . . . . . . . . . . . .  	Number	0000	
CPMCON . . . . . . . . . . . . .  	Number	0000	
CPMLIF . . . . . . . . . . . . .  	Number	0000	
CPMMDS . . . . . . . . . . . . .  	Number	0000	
CPMPER . . . . . . . . . . . . .  	Number	0000	
CPMRSH . . . . . . . . . . . . .  	Number	0000	
CPMSBC . . . . . . . . . . . . .  	Number	0000	
CPMSER . . . . . . . . . . . . .  	Number	0000	
CRDO . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
CRDONZ . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
CRONLY . . . . . . . . . . . . .  	Number	0000	
CSKPCM . . . . . . . . . . . . .  	L NEAR	03D1	CSEG
CTRLPT . . . . . . . . . . . . .  	L NEAR	02B8	CSEG	Global
CTROPT . . . . . . . . . . . . .  	L NEAR	02B6	CSEG	Global
CURLIN . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External

DATPSC . . . . . . . . . . . . .  	Number	0080	
DATPTR . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
DBLCHR . . . . . . . . . . . . .  	Number	0000	
DBLTRN . . . . . . . . . . . . .  	Number	0000	
DCOMPR . . . . . . . . . . . . .  	L NEAR	0133	CSEG	Global
DEBUG  . . . . . . . . . . . . .  	Text  		
DEFTBL . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
DIRIS  . . . . . . . . . . . . .  	L NEAR	029F	CSEG
DISK . . . . . . . . . . . . . .  	Number	0001	
DMC  . . . . . . . . . . . . . .  	Number	0000	
DOS  . . . . . . . . . . . . . .  	Number	0000	
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:30:24
 
BIMISC  BASIC Interpreter miscellaneous routines/WHG/PGA etcSymbols-3
                                                             

DRVPOS . . . . . . . . . . . . .  	Number	0000	
DUPONT . . . . . . . . . . . . .  	Number	0000	
DYNCOM . . . . . . . . . . . . .  	Number	0001	

EDIT80 . . . . . . . . . . . . .  	Number	0000	
ENDCON . . . . . . . . . . . . .  	L NEAR	0285	CSEG	Global
ENDS1  . . . . . . . . . . . . .  	L NEAR	026F	CSEG
ENDST  . . . . . . . . . . . . .  	L NEAR	0267	CSEG	Global
ERASE  . . . . . . . . . . . . .  	L NEAR	034D	CSEG	Global
ERRCN  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERRFIN . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERRLIN . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
ERROM  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERROR  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERSLOP . . . . . . . . . . . . .  	L NEAR	0377	CSEG
ESCCTL . . . . . . . . . . . . .  	Number	0000	
EXIDY  . . . . . . . . . . . . .  	Number	0000	

FADDS  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FAST . . . . . . . . . . . . . .  	Number	0001	
FCERR  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FCOMP  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FILTAB . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
FINLPT . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FINPRT . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FIVDSK . . . . . . . . . . . . .  	Number	0001	
FIVEO  . . . . . . . . . . . . .  	Number	0001	
FIVLPT . . . . . . . . . . . . .  	Number	0001	
FIVMEM . . . . . . . . . . . . .  	Number	0001	
FKEYON . . . . . . . . . . . . .  	Number	0001	
FNDFOR . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FNDLIN . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FRECHK . . . . . . . . . . . . .  	L NEAR	017A	CSEG
FRESTR . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FRETOP . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
FRETP1 . . . . . . . . . . . . .  	L NEAR	01BA	CSEG
FRETP2 . . . . . . . . . . . . .  	L NEAR	01BC	CSEG
FRETRP . . . . . . . . . . . . .  	L NEAR	01AF	CSEG	Global
FRMEVL . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FRMQNT . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FRQINT . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FUNACT . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External

GARBA2 . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
GCLERC . . . . . . . . . . . . .  	L NEAR	03AD	CSEG
GENBIN . . . . . . . . . . . . .  	Number	0001	
GENDSK . . . . . . . . . . . . .  	Number	0000	
GENIO  . . . . . . . . . . . . .  	Number	0001	
GESBC  . . . . . . . . . . . . .  	Number	0000	
GETBYT . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
GETMPM . . . . . . . . . . . . .  	L NEAR	0444	CSEG
GETSTK . . . . . . . . . . . . .  	L NEAR	0000	CSEG	Global
GETYPR . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
GFCERR . . . . . . . . . . . . .  	L NEAR	034A	CSEG
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:30:24
 
BIMISC  BASIC Interpreter miscellaneous routines/WHG/PGA etcSymbols-4
                                                             

GIO86  . . . . . . . . . . . . .  	Number	0001	
GODFRE . . . . . . . . . . . . .  	L NEAR	00CF	CSEG
GOMERR . . . . . . . . . . . . .  	L NEAR	044F	CSEG
GOSUB2 . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
GOTRP  . . . . . . . . . . . . .  	L NEAR	01E0	CSEG	Global
GOTRP1 . . . . . . . . . . . . .  	L NEAR	0200	CSEG
GOTRP2 . . . . . . . . . . . . .  	L NEAR	020F	CSEG
GOTRPL . . . . . . . . . . . . .  	L NEAR	01FA	CSEG
GOTRPX . . . . . . . . . . . . .  	L NEAR	020D	CSEG
GRPRST . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
GTMPRT . . . . . . . . . . . . .  	L NEAR	012E	CSEG	Global
GW . . . . . . . . . . . . . . .  	Number	0001	
GWCASS . . . . . . . . . . . . .  	Number	0000	
GWDBUG . . . . . . . . . . . . .  	Number	0000	

HAL  . . . . . . . . . . . . . .  	Number	0000	
HEATH  . . . . . . . . . . . . .  	Number	0000	
HEXOCT . . . . . . . . . . . . .  	Number	0001	
HGHBIT . . . . . . . . . . . . .  	Number	0001	
HLPEDT . . . . . . . . . . . . .  	Number	0000	

I8086  . . . . . . . . . . . . .  	Number	0001	
I8251  . . . . . . . . . . . . .  	Number	0000	
IADD . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
IBMLIK . . . . . . . . . . . . .  	Number	0001	
IBMTOK . . . . . . . . . . . . .  	Number	0001	
ICOMP  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
INITP0 . . . . . . . . . . . . .  	L NEAR	01CF	CSEG
INITRP . . . . . . . . . . . . .  	L NEAR	01C8	CSEG	Global
INKEYF . . . . . . . . . . . . .  	Number	0001	
INLADD . . . . . . . . . . . . .  	Number	0000	
INLIN  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
INSTSW . . . . . . . . . . . . .  	Number	0000	
INTEL  . . . . . . . . . . . . .  	Number	0000	
INTFHW . . . . . . . . . . . . .  	Number	0000	
INTFSW . . . . . . . . . . . . .  	Number	0000	
INTID2 . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
INTLEC . . . . . . . . . . . . .  	Number	0000	
INTROM . . . . . . . . . . . . .  	Number	0000	
ISC  . . . . . . . . . . . . . .  	Number	0000	
ISFLIO . . . . . . . . . . . . .  	L NEAR	0463	CSEG	Global
ISIS . . . . . . . . . . . . . .  	Number	0000	
ISLET  . . . . . . . . . . . . .  	L NEAR	03A2	CSEG	Global
ISLET2 . . . . . . . . . . . . .  	L NEAR	03A4	CSEG	Global

JISKTN . . . . . . . . . . . . .  	Number	0000	

KANABS . . . . . . . . . . . . .  	Number	0000	
KANJFN . . . . . . . . . . . . .  	Number	0000	
KEYSTA . . . . . . . . . . . . .  	Number	0000	
KILLER . . . . . . . . . . . . .  	Number	0000	

LABEL  . . . . . . . . . . . . .  	Number	0000	
LABKEY . . . . . . . . . . . . .  	Number	0001	
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:30:24
 
BIMISC  BASIC Interpreter miscellaneous routines/WHG/PGA etcSymbols-5
                                                             

LEN2 . . . . . . . . . . . . . .  	Number	0001	
LEN3 . . . . . . . . . . . . . .  	Number	0001	
LENGTH . . . . . . . . . . . . .  	Number	0002	
LEVDTB . . . . . . . . . . . . .  	L NEAR	00A2	CSEG
LINGET . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
LINKER . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
LINLN  . . . . . . . . . . . . .  	Number	0050	
LISTEN . . . . . . . . . . . . .  	Number	0001	
LNGVAR . . . . . . . . . . . . .  	Number	0001	
LOKHED . . . . . . . . . . . . .  	Number	0000	
LONGI  . . . . . . . . . . . . .  	Number	0000	
LOPDFT . . . . . . . . . . . . .  	L NEAR	009A	CSEG
LPBKNM . . . . . . . . . . . . .  	L NEAR	0362	CSEG
LPT3 . . . . . . . . . . . . . .  	Number	0000	
LPTLEN . . . . . . . . . . . . .  	Number	0084	
LPTSW  . . . . . . . . . . . . .  	Number	0001	
LTRACE . . . . . . . . . . . . .  	Number	0000	

MAXMEM . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
MDS  . . . . . . . . . . . . . .  	Number	0000	
MDSISS . . . . . . . . . . . . .  	Number	0000	
MEMIMG . . . . . . . . . . . . .  	Number	0001	
MEMSIZ . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
MOSTEK . . . . . . . . . . . . .  	Number	0000	
MOVE . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
MOVFM  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
MOVMF  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
MOVRM  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
MRGFLG . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
MULSEG . . . . . . . . . . . . .  	Number	0001	

NAMLEN . . . . . . . . . . . . .  	Number	0028	
NASCOM . . . . . . . . . . . . .  	Number	0000	
NATROM . . . . . . . . . . . . .  	Number	0000	
NBANKS . . . . . . . . . . . . .  	Number	0001	
NCRBAS . . . . . . . . . . . . .  	Number	0000	
NCRCAS . . . . . . . . . . . . .  	Number	0000	
NCRDEB . . . . . . . . . . . . .  	Number	0000	
NCRELS . . . . . . . . . . . . .  	Number	0000	
NCRLPT . . . . . . . . . . . . .  	Number	0001	
NECBAS . . . . . . . . . . . . .  	Number	0000	
NECPPC . . . . . . . . . . . . .  	Number	0000	
NEWSTT . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
NFERR  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
NLONLY . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
NMCOMT . . . . . . . . . . . . .  	Number	0002	
NMKEYF . . . . . . . . . . . . .  	Number	000A	
NMKEYT . . . . . . . . . . . . .  	Number	000E	
NMLINE . . . . . . . . . . . . .  	Number	0019	
NMLPT  . . . . . . . . . . . . .  	Number	0003	
NMPENT . . . . . . . . . . . . .  	Number	0001	
NMSTRT . . . . . . . . . . . . .  	Number	0004	
NNECBS . . . . . . . . . . . . .  	Number	0000	
NOATDL . . . . . . . . . . . . .  	Number	0000	
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:30:24
 
BIMISC  BASIC Interpreter miscellaneous routines/WHG/PGA etcSymbols-6
                                                             

NOCTLA . . . . . . . . . . . . .  	Number	0000	
NODOT  . . . . . . . . . . . . .  	Number	0000	
NODSKS . . . . . . . . . . . . .  	L NEAR	0052	CSEG	Global
NOEDIT . . . . . . . . . . . . .  	Number	0000	
NOFUNS . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
NOIOS  . . . . . . . . . . . . .  	Number	0000	
NONULL . . . . . . . . . . . . .  	Number	0000	
NOPEKS . . . . . . . . . . . . .  	Number	0000	
NOROMP . . . . . . . . . . . . .  	Number	0000	
NORUBT . . . . . . . . . . . . .  	Number	0000	
NOUSR  . . . . . . . . . . . . .  	Number	0000	
NOVARP . . . . . . . . . . . . .  	Number	0000	
NTCTCT . . . . . . . . . . . . .  	L NEAR	02C0	CSEG
NULCNT . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
NULL . . . . . . . . . . . . . .  	L NEAR	02EA	CSEG	Global
NUMLEV . . . . . . . . . . . . .  	Number	006E	
NUMTMP . . . . . . . . . . . . .  	Number	000A	
NUMTRP . . . . . . . . . . . . .  	Number	0015	
NXTCON . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
NXTFLG . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External

OEMRAM . . . . . . . . . . . . .  	Number	0000	
OFFTRP . . . . . . . . . . . . .  	L NEAR	0161	CSEG	Global
OKI  . . . . . . . . . . . . . .  	Number	0000	
OLDLIN . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
OLDTXT . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
OMERR  . . . . . . . . . . . . .  	L NEAR	001F	CSEG	Global
OMERRR . . . . . . . . . . . . .  	L NEAR	002C	CSEG	Global
ONEFLG . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
ONELIN . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
ONGSBF . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
ONTEL  . . . . . . . . . . . . .  	Number	0000	
ONTRP  . . . . . . . . . . . . .  	L NEAR	014E	CSEG	Global
ONTRP0 . . . . . . . . . . . . .  	L NEAR	015F	CSEG
OPTFLG . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
OPTVAL . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
OUTDO  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
OVERR  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External

PALSIZ . . . . . . . . . . . . .  	Number	0000	
PANBAS . . . . . . . . . . . . .  	Number	0000	
PC8A . . . . . . . . . . . . . .  	Number	0000	
PCS  . . . . . . . . . . . . . .  	Number	0000	
PLAYSW . . . . . . . . . . . . .  	Number	0001	
POPAHT . . . . . . . . . . . . .  	L NEAR	039C	CSEG	Global
PRMLEN . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
PRMLN2 . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
PRMSTK . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
PROFLG . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
PTRFIL . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
PTRFLG . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
PTRGET . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
PURE . . . . . . . . . . . . . .  	Number	0001	

Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:30:24
 
BIMISC  BASIC Interpreter miscellaneous routines/WHG/PGA etcSymbols-7
                                                             

QUEUE  . . . . . . . . . . . . .  	Number	0001	

REALIO . . . . . . . . . . . . .  	Number	0001	
REASON . . . . . . . . . . . . .  	L NEAR	0032	CSEG	Global
REQTPX . . . . . . . . . . . . .  	L NEAR	01A2	CSEG
REQTRP . . . . . . . . . . . . .  	L NEAR	018D	CSEG	Global
RESERR . . . . . . . . . . . . .  	L NEAR	02D9	CSEG
RESFIN . . . . . . . . . . . . .  	L NEAR	0259	CSEG	Global
RESTORE  . . . . . . . . . . . .  	L NEAR	023F	CSEG	Global
RMX  . . . . . . . . . . . . . .  	Number	0000	
RNDCOP . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
RNDX . . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
RSHACK . . . . . . . . . . . . .  	Number	0000	
RSTLES . . . . . . . . . . . . .  	Number	0001	
RSTTRP . . . . . . . . . . . . .  	L NEAR	0180	CSEG	Global
RUNC . . . . . . . . . . . . . .  	L NEAR	0071	CSEG	Global

SAVSTK . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
SAVTXT . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
SBC  . . . . . . . . . . . . . .  	Number	0000	
SBC86  . . . . . . . . . . . . .  	Number	0000	
SCP  . . . . . . . . . . . . . .  	Number	0001	
SCRATH . . . . . . . . . . . . .  	L NEAR	0054	CSEG	Global
SCRN86 . . . . . . . . . . . . .  	Number	0001	
SCRNIO . . . . . . . . . . . . .  	Number	0001	
SCROLT . . . . . . . . . . . . .  	Number	0001	
SCRTCH . . . . . . . . . . . . .  	L NEAR	0057	CSEG	Global
SETCHK . . . . . . . . . . . . .  	L NEAR	019E	CSEG
SETTP2 . . . . . . . . . . . . .  	L NEAR	01A5	CSEG
SETTRP . . . . . . . . . . . . .  	L NEAR	01A4	CSEG	Global
SGSATS . . . . . . . . . . . . .  	Number	0000	
SHORTJ . . . . . . . . . . . . .  	Number	0001	
SHTCHN . . . . . . . . . . . . .  	Number	0000	
SHTERR . . . . . . . . . . . . .  	Number	0000	
SHTINS . . . . . . . . . . . . .  	Number	0000	
SHTLHM . . . . . . . . . . . . .  	Number	0000	
SHTLIN . . . . . . . . . . . . .  	Number	0000	
SHTPRO . . . . . . . . . . . . .  	Number	0000	
SHTREN . . . . . . . . . . . . .  	Number	0000	
SIXDIG . . . . . . . . . . . . .  	Number	0000	
SMALL  . . . . . . . . . . . . .  	Number	0000	
SNDINI . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
SNERR  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
SPCDSK . . . . . . . . . . . . .  	Number	0000	
SPCNDS . . . . . . . . . . . . .  	Number	0000	
STKERR . . . . . . . . . . . . .  	L NEAR	0101	CSEG	Global
STKINI . . . . . . . . . . . . .  	L NEAR	00F4	CSEG	Global
STKLOW . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
STOP . . . . . . . . . . . . . .  	L NEAR	0260	CSEG	Global
STOPRG . . . . . . . . . . . . .  	L NEAR	0263	CSEG	Global
STPEND . . . . . . . . . . . . .  	L NEAR	0282	CSEG	Global
STPRDY . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
STPTRP . . . . . . . . . . . . .  	L NEAR	0169	CSEG	Global
STREND . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:30:24
 
BIMISC  BASIC Interpreter miscellaneous routines/WHG/PGA etcSymbols-8
                                                             

STRING . . . . . . . . . . . . .  	Number	0001	
STRSIZ . . . . . . . . . . . . .  	Number	0003	
SUBDE  . . . . . . . . . . . . .  	L NEAR	045C	CSEG	Global
SUBFLG . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
SUPRSH . . . . . . . . . . . . .  	Number	0001	
SWAP . . . . . . . . . . . . . .  	L NEAR	02FD	CSEG	Global
SWAPSW . . . . . . . . . . . . .  	Number	0001	
SWPTMP . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
SYNCHR . . . . . . . . . . . . .  	L NEAR	0136	CSEG	Global
SYNCON . . . . . . . . . . . . .  	L NEAR	0148	CSEG
SYNERR . . . . . . . . . . . . .  	L NEAR	014B	CSEG

TEK  . . . . . . . . . . . . . .  	Number	0000	
TEMP . . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
TEMPPT . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
TEMPST . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
TIMSHR . . . . . . . . . . . . .  	Number	0000	
TMERR  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
TOFF . . . . . . . . . . . . . .  	L NEAR	02F7	CSEG	Global
TON  . . . . . . . . . . . . . .  	L NEAR	02F6	CSEG	Global
TOPMEM . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
TRCFLG . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
TRNCHR . . . . . . . . . . . . .  	Number	0000	
TRPTBL . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
TRSER2 . . . . . . . . . . . . .  	Number	0000	
TRSHHC . . . . . . . . . . . . .  	Number	0000	
TRUANS . . . . . . . . . . . . .  	Number	0000	
TRUROM . . . . . . . . . . . . .  	Number	0001	
TSDISK . . . . . . . . . . . . .  	Number	0000	
TSHIBA . . . . . . . . . . . . .  	Number	0000	
TSLPT  . . . . . . . . . . . . .  	Number	0000	
TXTTAB . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
T_ON . . . . . . . . . . . . . .  	Number	0001		Global
T_REQ  . . . . . . . . . . . . .  	Number	0004		Global
T_STOP . . . . . . . . . . . . .  	Number	0002		Global

USERR  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External

VALTYP . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
VARTAB . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
VMOVE  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External

XTNSYS . . . . . . . . . . . . .  	Number	0000	

Z80  . . . . . . . . . . . . . .  	Number	0001	
Z80MAC . . . . . . . . . . . . .  	Number	0001	

??L000 . . . . . . . . . . . . .  	L NEAR	00EA	CSEG
??L001 . . . . . . . . . . . . .  	L NEAR	0258	CSEG
??L002 . . . . . . . . . . . . .  	L NEAR	0275	CSEG
??L003 . . . . . . . . . . . . .  	L NEAR	02B3	CSEG
??L004 . . . . . . . . . . . . .  	L NEAR	02E1	CSEG
??L005 . . . . . . . . . . . . .  	L NEAR	0328	CSEG
??L006 . . . . . . . . . . . . .  	L NEAR	036D	CSEG
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:30:24
 
BIMISC  BASIC Interpreter miscellaneous routines/WHG/PGA etcSymbols-9
                                                             

??L007 . . . . . . . . . . . . .  	L NEAR	03EE	CSEG
??L008 . . . . . . . . . . . . .  	L NEAR	0408	CSEG
??L009 . . . . . . . . . . . . .  	L NEAR	044E	CSEG


   1306 Source  Lines
   1476 Total   Lines
    420 Symbols

  37294 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
