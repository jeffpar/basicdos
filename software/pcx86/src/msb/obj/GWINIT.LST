Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:52:32
 
GWINIT GW-BASIC-86 Initialization                           Page     1-1
                                                            

                                ; [ This translation created 10-Feb-83 by Versi
				on 4.3 ] 
                                 
 0008                           	.RADIX  8		; To be safe 
                                 
 0000                           CSEG	SEGMENT PUBLIC 'CODESG' 
                                	ASSUME  CS:CSEG 
                                 
                             C  INCLUDE	OEM.INC 
                             C  ; [ This translation created 10-Feb-83 by Versi
				on 4.3 ] 
                             C   
                             C  	PAGE	,132D 
                             C  	SUBTTL  Common file to produce 2-segment 8086 GW-CPM BASIC 
                             C   
                             C  	.SALL 
                             C   
 000A                        C  	.RADIX	10 
 = 0000                      C  	OEMRAM=0D 
                             C  ;Pascal program HFILE searches for the following line - DO NOT MODIFY 
                             C  ;** (VERSION SPECIFIC VALUES) ************************************************ 
 = 0019                      C  	NMLINE=25		;Max screen display text lines 
 = 0001                      C  	NBANKS=1		;Number of graphic planes 
 = 0000                      C  	PALSIZ=0		;Size of OEM color palette 
 = 0000                      C  	DBLCHR=0		;Editor support for KANJI chars 
 = 0000                      C  	KANABS=0		;Kana BASIC (Japanese JIS codes) 
 = 0000                      C  	KANJFN=0		;KANJI String Functions KPOS, KLEN .. 
 = 0000                      C  	JISKTN=0		;&K, &J constants (KANJI) 
 = 0001                      C  	SUPRSH=1		;1=super shift key feature 
 = 000A                      C  	NMKEYF=10		;number of function keys 
 = 000E                      C  	NMKEYT=14		;number of function key traps 
 = 0001                      C  	FKEYON=1		;yes=display function keys 
 = 0001                      C  	SCROLT=1		;Line 25 allocated for status only 
 = 0001                      C  	PLAYSW=1		;for PLAY statement 
 = 0001                      C  	BEEPSW=1		;for SOUND, BEEP statements 
 = 0003                      C  	NMLPT=3			;number of line printers 
 = 0001                      C  	CONSSW=1		;Device CONS: 
 = 0002                      C  	NMCOMT=2		;number of COMmunications ports 
 = 0001                      C  	NMPENT=1		;number of light pens 
 = 0004                      C  	NMSTRT=4		;number of joysticks 
 = 0000                      C  	GWCASS=0		;Cassette switch (CSAVE,CLOAD,MOTOR) 
 = 0001                      C  	IBMLIK=1		;IBM compatibility package 
 = 0001                      C  	IBMTOK=1		;IBM token compatibility 
 = 0001                      C  	DYNCOM=1		;Dynamic communication buffers 
                             C  ;** (END OF VERSION SPECIFIC VALUES) ***************************************** 
                             C  ;Pascal program HFILE searches for the previous line - DO NOT MODIFY 
                             C  ; 
 = 0015                      C  	NUMTRP=NMKEYT+NMCOMT+NMPENT+NMSTRT 
 = 0001                      C  	GW=1			;GW BASIC 
 = 0000                      C  	ESCCTL=0		;Escape Sequence processing in SCROUT 
 = 0000                      C  	GWDBUG=0		;DEBUG statement (TEST VERSIONS ONLY) 
                             C  				; Support is in BINTRP.MAC and GWSTS.MAC 
 = 0000                      C  	SIXDIG=0		;# of digits of accuracy assumed when formatting 
                             C  				;single precision numbers for output. 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:52:32
 
GWINIT GW-BASIC-86 Initialization                           Page     1-2
Common file to produce 2-segment 8086 GW-CPM BASIC          

                             C  				; 0 := 7 digits 
                             C  				; 1 := 6 digits 
 = 0000                      C  	CASSW=0			;CASSETTE SWITCH 
 = 0001                      C  	LABKEY=1		;^T (LABEL) key capability 
 = 0001                      C  	HGHBIT=1		;8-bit characters (ASCII & Graphics) 
 = 0001                      C  	QUEUE=1			;Queued painting algorithm (vs. stack) 
 = 0001                      C  	GIO86=1			;BASIC-86 Generalized I/O 
 = 0001                      C  	SCRNIO=1		;Screen editor 
 = 0001                      C  	SCRN86=1		;8086 Screen editor 
 = 0001                      C  	I8086=1			;CROSS ASSEMBLING FOR 8086 
 = 0001                      C  	MULSEG=1		;MULTI-SEGMENT 8086 BASIC 
 = 0000                      C  	SMALL=0			;"SMALL" VERSION OF 8086 BASIC IF SET 
 = 0001                      C  	TRUROM=1 
 = 0000                      C  	SBC86=0			;SBC 86/02 BOARD? 
 = 0001                      C  	SHORTJ=1		;USE INTRA-SEGMENT SHORT JUMPS 
                             C  				;IN 8086 CODE 
 = 0001                      C  	LNGVAR=1		;LONG VARIABLE NAME SUPPORT (EXTENDED ONLY) 
 = 0000                      C  	SHTERR=0		;SHORT (2 CHAR) ERROR MESSAGES 
 = 0000                      C  	SHTINS=0		;INSTR IN NON-FAST LEN2 VERSIONS 
 = 0000                      C  	SHTLHM=0		;LEFT HAND SIDE MID IN NON FAST LEN2 VERSIONS 
 = 0000                      C  	SHTCHN=0		;ALLOW CHAIN IN NON-5.0 
 = 0000                      C  	SHTPRO=0		;ALLOW PROTECTED FILES IN NON-FIVDSK 
 = 0000                      C  	SHTLIN=0		;ALLOW LINE INPUT IN NON-EXTENDED NON-FAST 
 = 0000                      C  	SHTREN=0		;ALLOW RENUM IN NON-FST VERSIONS 
 = 0001                      C  	INKEYF=1		;ADDS INKEY$ FUNCTION 
 = 0000                      C  	NOIOS=0			;NO I/O STATMENTS (INP,OUT, WAIT) 
 = 0000                      C  	NOPEKS=0		;NO PEEK, POKE 
 = 0000                      C  	NOUSR=0			;NO USR 
 = 0000                      C  	NOCTLA=0		;NO CONTROL-A IN EXTENDED 
 = 0000                      C  	NORUBT=0		;NO RUBOUT 
 = 0000                      C  	NOROMP=0		;NO ROM PROGRAM FEATURE 
 = 0000                      C  	NOATDL=0		;NO AUTO DELETE IN NON-FAST EXTENDED 
 = 0000                      C  	NODOT=0			;NO DOT IN LEN2 
 = 0000                      C  	NOEDIT=0		;NO EDIT COMMAND 
 = 0000                      C  	CRONLY=0		;ONLY PUT OUT CR, NOT CRLF TO TERMINAL 
                             C  				;AND FILES 
 = 0000                      C  	NONULL=0		;NO NULL COMMAND, PUT OUT NULLS IN CRDO & OUTCH1 
 = 0000                      C  	NOVARP=0		;NO VARPTR FUNCTION 
 = 0001                      C  	FIVEO=1			;GENERATE VERSION WITH RELEASE 5.0 FEATURES 
 = 0001                      C  	FIVMEM=1 
 = 0001                      C  	ANSI=1 
 = 0001                      C  	FIVDSK=1		;5.0 NEW DSK CODE 
 = 0001                      C  	FIVLPT=1		;WIDTH LPRINT AND 255 FEATURE 
 = 0001                      C  	HEXOCT=1		;&H..., HEX$, &O..., OCT$ 
 = 0000                      C  	BINCSW=0		;&B..., BIN$ 
 = 0001                      C  	BLODSW=1		;BLOAD, BSAVE COMMANDS 
 = 0001                      C  	MEMIMG=1		;MEMORY IMAGE FILES 
 = 0001                      C  	GENBIN=1 
                             C   
 = 0000                      C  	TRUANS=0		;TRUE ANSI VERSION (STATIC SCAN, ON ERROR) 
 = 0000                      C  	COMMNT=0		;DONT WANT BIG COMMENT 
 = 0000                      C  	INTEL=0			;INTEL PROPRIETARY 
 = 0000                      C  	INTFSW=0		;INTEL FLOATING POINT 
 = 0000                      C  	INTFHW=0 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:52:32
 
GWINIT GW-BASIC-86 Initialization                           Page     1-3
Common file to produce 2-segment 8086 GW-CPM BASIC          

 = 0000                      C  	RMX=0			;INTEL RMX VERSION 
 = 0000                      C  	EDIT80=0		;FOR EDIT80 I/O ROUTINES 
 = 0000                      C  	RSHACK=0 
 = 0000                      C  	INTLEC=0 
 = 0002                      C  	LENGTH=2		;  1 MEANS 8K, 2 MEANS 12K 
 = 0000                      C  	BASDEB=0		;WHETHER DBG WILL BE LOADED WITH BASIC 
 = 0001                      C  	RSTLES=1		;WHETHER BASIC WILL USE RST LOCATIONS 
                             C  				;TO MAKE ITSELF SMALLER & QUICKER 
 = 0001                      C  	REALIO=1		;WHETHER SIMULATE (=0) OR ON MACHINE (=1) 
 = 0001                      C  	GENIO=1			;USE G/P ROUTINES 
 = 0001                      C  	CHSEAT=1		;CHSNS eats chars 
 = 0000                      C  	GENDSK=0		;USE G/P DSK CODE 
 = 0000                      C  	LONGI=0			;WHETHER WE ASK "TERMINAL WIDTH?" 
                             C  				;AND WANT SIN-TAN-COS-ATN? 
 = 0000                      C  	INSTSW=0		;FOR INSTR INSTRUCTION 
 = 0001                      C  	SWAPSW=1		;FOR SWAP STATEMENT 
 = 0000                      C  	MDS=0			;FOR INTEL MDS SYSTEMS 
 = 0000                      C  	SBC=0			;FOR INTEL SINGLE BOARD COMPUTER 
                             C  				;1=SBC 80/10, 2=SBC 80/20 
 = 0001                      C  	PURE=1			;ON FOR PURE CODE 
 = 0000                      C  	KILLER=0		;FOR ROM VERSION THAT WONT RUN IN RAM 
 = 0000                      C  	INTROM=0 
 = 0001                      C  	LPTSW=1 
 = 0001                      C  	NCRLPT=1 
 = 0000                      C  	NCRCAS=0 
 = 0000                      C  	ISC=0			;FOR ISC VERSION 
 = 0000                      C  	LPT3=0			;THREE LPT DRIVER VERSION(QUME,OKIA,CENT) 
 = 0000                      C  	TSLPT=0 
                             C   
 = 0000                      C  	DOS=0			;ON TO GEN ROUTINES FOR DOS 
 = 0001                      C  	DISK=1			;FILE I/O FEATURES 
 = 0000                      C  	TIMSHR=0		;NO TIME-SHARING DISK 
 = 0000                      C  	TSDISK=0		;NO TIME-SHARING DISK FOR US 
 = 0000                      C  	SPCDSK=0		;MAY HAVE MM'S DISK CODE 
 = 0000                      C  	SPCNDS=0 
 = 0001                      C  	FAST=1			;CONSTANT COMPRESSION, RENUM & FRIENDS 
 = 0000                      C  	KEYSTA=0 
 = 0000                      C  	ISIS=0			;FOR VERSION TO RUN UNDER INTEL'S ISIS II DOS 
 = 0000                      C  	MDSISS=0		;FOR MDS VERSION THAT RUNS UNDER ISIS-II 
 = 0001                      C  	CPM=1			;FOR CPM compatible operating systems 
 = 0001                      C  	CPM2=1			;VERSION 2. CPM 
 = 0000                      C  	CPM86=0			;FOR CP/M-86 operating system 
 = 0001                      C  	SCP=1			;MS-DOS operating system 
 = 0000                      C  	CPMCON=0 
 = 0000                      C  	CPMSER=0		;CHECK CPM SERIAL #'S 
 = 0000                      C  	CPMADD=0		;FOR VERSION TO RUN ON ADDS CPM 
 = 0000                      C  	CPMA75=0		;FOR VERSION TO RUN ON ADDS SYSTEM 75 
                             C  				;CP/M 
 = 0000                      C  	CPMRSH=0		;FOR RADIO SHACK CPM/M 
 = 0000                      C  	CPM110=0		;FOR CP/M @1100 HEX (INTERALIA) 
 = 0000                      C  	CPMSBC=0		;FOR VERSION TO RUN ON SBC CP/M AT 4100H 
 = 0000                      C  	CPMPER=0		;FOR PERTEC VERSION OF CPM 
 = 0000                      C  	CPMLIF=0		;LIFEBOAT CP/M AT 4200H 
 = 0000                      C  	CPMMDS=0		;MOHAWK DATA SYSTEMS CP/M 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:52:32
 
GWINIT GW-BASIC-86 Initialization                           Page     1-4
Common file to produce 2-segment 8086 GW-CPM BASIC          

 = 0000                      C  	CPMCON=0 
 = 0000                      C  	Z80=0 
 = 0001                      C  	DISK=1 
 = 0001                      C  	NCRLPT=1 
 = 0001                      C  	RSTLES=1 
 = 0000                      C  	DRVPOS=CPMADD 
 = 0000                      C  	TRNCHR=CPMADD 
 = 0000                      C  	INLADD=CPMADD 
 = 0001                      C  	LISTEN=1		;ON MEANS LISTEN FOR ^C 
 = 0001                      C  	LISTEN=1 
 = 0000                      C  	LEN2=0 
 = 0001                      C  	LEN2=1 
 = 0001                      C  	HEXOCT=1 
 = 0002                      C  	LENGTH=2 
 = 0001                      C  	RSTLES=1 
 = 0001                      C  	FIVLPT=1 
 = 0000                      C  	I8251=0			;THIS SWITCH IS USED FOR ROSEMOUNT VERSION 
 = 0001                      C  	CONTRO=1		;ALLOW ^O 
 = 0001                      C  	LEN3=LEN2 OR CASSW 
                             C   
                             C   
                             C   
 = 0001                      C  	STRING=1 
 = 0001                      C  	NCRLPT=1 
                             C   
                             C  ; *** OEM Switches which need to be defaulted to 0 
                             C  ; 
 = 0000                      C  	CMPUTN=0 
 = 0000                      C  	DUPONT=0 
 = 0000                      C  	EXIDY=0 
 = 0000                      C  	GESBC=0 
 = 0000                      C  	HEATH=0 
 = 0000                      C  	LOKHED=0 
 = 0000                      C  	MOSTEK=0 
 = 0000                      C  	TEK=0 
 = 0000                      C  	TRSER2=0 
 = 0000                      C  	NASCOM=0 
 = 0000                      C  	NATROM=0 
 = 0000                      C  	NCRBAS=0 
 = 0000                      C  	NCRDEB=0 
 = 0000                      C  	NCRDEB=0 
 = 0000                      C  	NCRELS=0 
 = 0000                      C  	ONTEL=0 
 = 0000                      C  	PCS=0 
 = 0000                      C  	SGSATS=0 
 = 0000                      C  	ALTAIR=0 
 = 0000                      C  	DMC=0 
 = 0000                      C  	PANBAS=0 
 = 0000                      C  	XTNSYS=0 
 = 0000                      C  	NECBAS=0 
                             C  ;******************************************************************* 
                             C  ; Z80 related macros 
                             C  ;******************************************************************* 
 = 0001                      C  	Z80=1			;FOR VERSION THAT RUNS ON BOTH 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:52:32
 
GWINIT GW-BASIC-86 Initialization                           Page     1-5
Common file to produce 2-segment 8086 GW-CPM BASIC          

                             C  				;8080'S AND ZILOG Z-80'S 
 = 0001                      C  	Z80MAC=1		;USE 8080 MACROS INSTEAD OF Z80 INSTRUCTIONS 
 = 0000                      C  	Z80=0 
 = 0001                      C  	Z80=1 
                             C  LDIR	MACRO 
                             C  	MOV	WORD PTR A,WORD PTR M 
                             C  	STAX	D 
                             C  	INXF	H 
                             C  	INXF	D 
                             C  	DCXF	B 
                             C  	MOV	WORD PTR A,WORD PTR B 
                             C  	ORA	C 
                             C  	JNZ	_-8D 
                             C  ENDM 
                             C  LDDR	MACRO 
                             C  	MOV	WORD PTR A,WORD PTR M 
                             C  	STAX	D 
                             C  	DCXF	H 
                             C  	DCXF	D 
                             C  	DCXF	B 
                             C  	MOV	WORD PTR A,WORD PTR B 
                             C  	ORA	C 
                             C  	JNZ	_-8D 
                             C  ENDM 
                             C  DJNZ	MACRO	    DEST 
                             C  	DCR	B 
                             C  	JNZ	DEST 
                             C  ENDM 
                             C  ;******************************************************************* 
                             C  ; Define reset routines. 
                             C  ;******************************************************************* 
                             C  FSIGN	MACRO 
                             C  	CALL	SIGN 
                             C  ENDM 
                             C  PUSHM	MACRO 
                             C  	MOV	WORD PTR C,WORD PTR M 
                             C  	INX	H 
                             C  	MOV	WORD PTR B,WORD PTR M 
                             C  	INX	H 
                             C  	PUSH	WORD PTR B 
                             C  ENDM 
                             C  SYNCHK	MACRO	X 
                             C  	CALL	SYNCHR 
                             C  	DB	OFFSET X 
                             C  ENDM 
                             C  OUTCHR	MACRO 
                             C  	CALL	OUTDO 
                             C  ENDM 
                             C  CHRGET	MACRO 
                             C  	CALL	CHRGTR 
                             C  ENDM 
                             C  COMPAR	MACRO 
                             C  	CALL	DCOMPR 
                             C  ENDM 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:52:32
 
GWINIT GW-BASIC-86 Initialization                           Page     1-6
Common file to produce 2-segment 8086 GW-CPM BASIC          

                             C  GETYPE	MACRO 
                             C  	CALL	GETYPR 
                             C  ENDM 
                             C  COMPAR	MACRO 
                             C  	DB	73O 
                             C  	DB	332O 
                             C   ENDM 
                             C  ACRLF	MACRO 
                             C  	DB	13D 
                             C  	DB	10D 
                             C  ENDM 
                             C  PUSHR	MACRO 
                             C  	PUSH	WORD PTR D 
                             C  	PUSH	WORD PTR B 
                             C  ENDM 
                             C  POPR	MACRO 
                             C  	POP	WORD PTR B 
                             C  	POP	WORD PTR D 
                             C  ENDM 
                             C  MOVRI	MACRO	B,C,D,E 
                             C  	DB	1O		; "LXI  B" 
                             C  	DB	OFFSET C 
                             C  	DB	OFFSET B 
                             C  	DB	21O		; "LXI  D" 
                             C  	DB	OFFSET E 
                             C  	DB	OFFSET D 
                             C  ENDM 
                             C  INST	MACRO	X 
                             C  	DB	OX 
                             C  ENDM 
                             C   
                             C   
 = 000F                      C  	CONTO=15		;CHARACTER TO SUPRESS OUTPUT (USUALLY CONTROL-O) 
 = 0000                      C  	DBLTRN=0		;FOR DOUBLE PRECISION TRANSCENDENTALS 
                             C   
 = 000E                      C  	CLMWID=14D		;MAKE COMMA COLUMNS FOURTEEN CHARACTERS 
 = 0080                      C  	DATPSC=128D		;NUMBER OF DATA BYTES IN DISK SECTOR 
 = 0050                      C  	LINLN=80D		;TERMINAL LINE LENGTH 
 = 0084                      C  	LPTLEN=132D 
 = 00FF                      C  	BUFLEN=255		;LONG LINES 
 = 0028                      C  	NAMLEN=40D		;MAXIMUM LENGTH NAME -- 3 TO 127 
                             C   
 = 006E                      C  	NUMLEV=110D		;NUMBER OF STACK LEVELS RESERVED 
                             C  				;BY AN EXPLICIT CALL TO GETSTK 
 = 0004                      C  	STRSIZ=4 
 = 0003                      C  	STRSIZ=3 
 = 0003                      C  	NUMTMP=3		;NUMBER OF STRING TEMPORARIES 
 = 000A                      C  	NUMTMP=10 
                             C   
 0008                        C  	.RADIX	8 
                             C  ; 
                             C  ; Useful macros 
                             C  ; 
                             C   
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:52:32
 
GWINIT GW-BASIC-86 Initialization                           Page     1-7
Common file to produce 2-segment 8086 GW-CPM BASIC          

                             C  ACRLF   MACRO 
                             C          DB      13D 
                             C          DB      10D 
                             C  ENDM 
                             C   
                             C  INS86   MACRO   A,B,C,D 
                             C          DB      A&O 
                             C  IFNB    <B> 
                             C          DB      B&O 
                             C  ENDIF 
                             C  IFNB    <D> 
                             C          DB      C&O 
                             C          DB      D&O 
                             C  ENDIF 
                             C  IFB     <D> 
                             C   IFNB   <C> 
                             C          DW      C 
                             C    ENDIF 
                             C   ENDIF 
                             C  ENDM 
                             C   
                             C  CALLOS  MACRO 
                             C          CALL    CPMENT 
                             C  ENDM 
                             C   
                             C  POPR    MACRO 
                             C          POP     CX 
                             C          POP     DX 
                             C  ENDM 
                             C   
                             C  ADR     MACRO   X 
                             C          DW      X 
                             C  ENDM 
                             C   
                             C  DC      MACRO   ARG 
                             C          IRPC    ZZ,<ARG> 
                             C              IFDIF       <ZZ>,<">
                             C                  DB      "&ZZ&" 
                             C                  _A="&ZZ&" 
                             C              ENDIF 
                             C          ENDM 
                             C  ENDM 
                             C  ; 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:52:32
 
GWINIT GW-BASIC-86 Initialization                           Page     1-8
Common file to produce 2-segment 8086 GW-CPM BASIC          

                             C          PAGE 
                             C   
                             C  DBGBRK	MACRO 
                             C  	DB	0CDh,06h,0CCh 
                             C  	ENDM 
                                 
                                 
                                	TITLE   GWINIT GW-BASIC-86 Initialization 
                                 
                                ;Assumes LEN2, FIVMEM, FIVEO, I8086, PURE 
                                 
                                 
 = 0000                         TRACEF=0			;for Debugging when DEBUG can't be used 
 = 0000                         CPM86=0 
 = 0000                         DYNBUF=0 
 = 0000                         BSEGSZ=0			;Size of Buffer segment for Misc. Buffers 
                                 
 000A                           	.RADIX	10 
                                 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	ASSUME DS:DSEG 
                                	EXTRN	LSTVAR:WORD	;Last variable in RAM 
                                	EXTRN	FILTAB:WORD,STKLOW:WORD,MAXMEM:WORD 
                                	EXTRN	TSTACK:WORD,ERRFLG:WORD 
                                	EXTRN	MEMSIZ:WORD,TOPMEM:WORD,SAVSTK:WORD,FRETOP:WORD,TXTTAB:WORD 
                                	EXTRN	PROFLG:WORD,CHNFLG:WORD,MRGFLG:WORD,ERRFLG:WORD 
                                	EXTRN	CHNFLG:WORD,MRGFLG:WORD,ERRFLG:WORD 
                                	EXTRN	PRMSTK:WORD,PRMPRV:WORD 
 0000                           DSEG	ENDS 
                                 
                                	EXTRN	FCERR:NEAR,SNERR:NEAR 
                                 
                                ; 
 = 002F                         	SWTCHR=57O		;DEFAULT SWITCH CHARACTER IS SLASH 
                                	EXTRN	MAKUPL:NEAR 
                                	EXTRN	CNSGET:NEAR 
                                	EXTRN	CHRGTR:NEAR 
                                	EXTRN	OUTDO:NEAR,LINPRT:NEAR,CRDO:NEAR,OMERRR:NEAR 
                                	EXTRN	REASON:NEAR 
                                	EXTRN	READY:NEAR,STKINI:NEAR 
                                	EXTRN	DCOMPR:NEAR 
                                	EXTRN	SYNCHR:NEAR 
                                 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	BUF:WORD 
 0000                           DSEG	ENDS 
                                	EXTRN	SNERR:NEAR,FCERR:NEAR,ATN:NEAR,COS:NEAR 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	MSWFLG:WORD,MSWSIZ:WORD,CSWFLG:WORD,CSWSIZ:WORD,NEWDS:WORD 
 0000                           DSEG	ENDS 
                                	EXTRN	MAPCLC:NEAR,MAPINI:NEAR 
                                	EXTRN	INITSA:NEAR 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:52:32
 
GWINIT GW-BASIC-86 Initialization                           Page     1-9
Common file to produce 2-segment 8086 GW-CPM BASIC          

                                	PAGE 
                                	SUBTTL  INIT - System Initialization Code 
                                 
                                	PUBLIC	INIT 
                                	EXTRN	STROUT:NEAR,HEDING:NEAR,WORDS:NEAR 
                                	EXTRN	GWINI:NEAR 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	BUF:WORD,KBUF:WORD 
 0000                           DSEG	ENDS 
                                 
 0000                           INIT: 
                                ; For safety, a label has been defined in BINTRP.MAC that contains the 
                                ; start of the data segment.  That is where the O.S. control block will 
                                ; be copied to, so it MUST be first in the DSEG. 
                                ; BEGDSG is declared as a code segment external here even though it 
                                ; really is in the data segment.  This makes it easier to get the offset 
                                ; of the beginning of the data segment from the beginning of the code 
                                ; segment.  The beginning of DATASG MUST be within 64K of the beginning 
                                ; of CODESG for this to work.  No error will be generated, so be careful. 
                                ; 
                                	EXTRN	BEGDSG:NEAR	;Beg. of the data segment, offset from CS 
                                	INS86	272,,BEGDSG	;MOVI DX,BEGDSP 
                                	INS86	261,4		;MOVI CL,4   Divide by 16 to ... 
                                	INS86	323,352		;SHR  DX,CL  get paragraph address 
                                	INS86	214,311		;MOV  CX,CS  add in code segment 
                                	INS86	3,321		;ADD  DX,CS 
                                	INS86	264,46		;MOVBI AH,38 SPECIAL FUNCTION TO CALC END 
                                				;            OF CS AND RETURN START OF DS 
                                	INS86	315,41		;INT  33     CALL SCP DOS 
                                	INS86	214,330		;MOV  AX,DS  SAVE DS FOR EXIT VECTOR 
                                	INS86	216,332		;MOV  DS,DX  SET UP SEG REGS 
                                	INS86	216,302		;MOV  ES,DX 
                                ;Initialize the jump vector for exit to MSDOS.  MSDOS 2.0 requires that 
                                ; exit is made through the segment prefix table which is located at DS:0. 
                                ; For .EXE files, DS is not the same as CS at program initiation time (NOW). 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	CPMEXT:WORD 
 0000                           DSEG	ENDS 
                                	INS86	307,6,CPMEXT	;MOVI CPMEXT,^D0 
                                	INS86	0,0		;            INS86 has 4 params 
                                				;            & some may not be words 
                                	INS86	220,243,CPMEXT+2	;NOP         NOP - pad to item 3 of INS86 
                                				;MOV  CPMEXT+2,AX 
 001F  FA                       	CLI			;Setting the stack segment and stack 
                                				;pointer must be an indivisable 
                                				;operation. 
                                	INS86	216,322		;MOV SS,DX 
 0022  BB 0080 E                	MOV	BX,OFFSET BUF+128D	;Use BUF for a temporary stack. 
 0025  89 1E 0000 E             	MOV	MEMSIZ,BX 
 0029  8B E3                    	MOV	SP,BX 
 002B  32 C0                    	XOR	AL,AL		;INITIALIZE PROTECT FLAG 
 002D  A2 0000 E                	MOV	BYTE PTR PROFLG,AL 
 0030  A2 0000 E                	MOV	BYTE PTR MSWFLG,AL	;Init /M: flag 
 0033  A2 0000 E                	MOV	BYTE PTR CSWFLG,AL	;Init /C: flag 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:52:32
 
GWINIT GW-BASIC-86 Initialization                           Page     1-10
INIT - System Initialization Code                           

                                	EXTRN	CNSLEN:NEAR,CONSTR:NEAR 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	ENDBUF:WORD,RAMLOW:WORD 
 0000                           DSEG	ENDS 
 0036  B5 03 E                  	MOV	CH,LOW OFFSET CNSLEN+3	;Get number of bytes to move 
 0038  BB 0000 E                	MOV	BX,OFFSET RAMLOW	;WHERE THE CONSTANTS ARE STORE IN RAM 
 003B  BA 0000 E                	MOV	DX,OFFSET CONSTR	;WHERE THE CONSTANTS ARE HELD IN ROM 
 003E                           MORMOV:				;MOVE ROM INITIALIZATION VALUES TO RAM 
                                	INS86	213,362,56,254	;CODE SEGMENT FETCH 
 0042  88 07                    	MOV	BYTE PTR [BX],AL	;STORE IT AWAY IN RAM 
 0044  43                       	INC	BX 
 0045  42                       	INC	DX 
 0046  FE CD                    	DEC	CH 
 0048  75 F4                    	JNZ	SHORT MORMOV	;IF NOT, KEEP SHOVELING THEM DOWN 
 004A  FB                       	STI 
                                	EXTRN	SCNIPL:NEAR 
 004B  E8 0000 E                	CALL	SCNIPL		;Screen editor initialization 
 004E  E8 0000 E                	CALL	GWINI		;OEM specific initialization 
                                	EXTRN	SNDRST:NEAR 
 0051  E8 0000 E                	CALL	SNDRST		;reset sound queue, disable speaker 
                                	EXTRN	GIOINI:NEAR 
 0054  E8 0000 E                	CALL	GIOINI 
 0057  8B 1E 0000 E             	MOV	BX,MEMSIZ 
 005B  89 1E 0000 E             	MOV	TOPMEM,BX 
 005F  BB FFFF E                	MOV	BX,OFFSET KBUF-1	;INITIALIZE KBUF-1 WITH A COLON 
 0062  C6 07 3A                 	MOV	BYTE PTR [BX],LOW ":"	;DIRECT INPUTS RESTART OK. 
 0065  E8 0000 E                	CALL	STKINI		;REALLY SET UP INIT'S TEMPORARY STACK 
                                ; 
                                ;       Check CP/M Version Number 
                                 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	CPMREA:WORD 
 0000                           DSEG	ENDS 
                                 
 0068  BB 2221                  	MOV	BX,OFFSET 34*256+33+0	;2.x Read / Write 
 006B  89 1E 0000 E             CPMVR1:	MOV	CPMREA,BX	;Save Read/Write Codes 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	CNTOFL:WORD 
 0000                           DSEG	ENDS 
 006F  32 C0                    	XOR	AL,AL 
 0071  A2 0000 E                	MOV	BYTE PTR CNTOFL,AL 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	ENDBUF:WORD 
 0000                           DSEG	ENDS 
 0074  A2 0000 E                	MOV	BYTE PTR ENDBUF,AL	;MAKE SURE OVERRUNS STOP 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	DSEGZ:WORD 
 0000                           DSEG	ENDS 
 0077  A2 0000 E                	MOV	BYTE PTR DSEGZ,AL	;(DS) LOCATED ZERO 
 007A  A2 0000 E                	MOV	BYTE PTR CHNFLG,AL	;MAKE SURE CHAINS AND MERGES 
 007D  A2 0000 E                	MOV	BYTE PTR MRGFLG,AL	;DONT TRY TO HAPPEN 
 0080  A2 0000 E                	MOV	BYTE PTR ERRFLG,AL	;DON'T ALLOW EDIT TO BE CALLED ON ERRORS 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	TEMPST:WORD,TEMPPT:WORD 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:52:32
 
GWINIT GW-BASIC-86 Initialization                           Page     1-11
INIT - System Initialization Code                           

 0000                           DSEG	ENDS 
 0083  BB 0000 E                	MOV	BX,OFFSET TEMPST 
 0086  89 1E 0000 E             	MOV	TEMPPT,BX 
 008A  BB 0000 E                	MOV	BX,OFFSET PRMSTK	;INITIALIZE PARAMETER BLOCK CHAIN 
 008D  89 1E 0000 E             	MOV	PRMPRV,BX 
                                 
                                 
                                	SUBTTL Read Operating System Parameters (memsiz etc.) 
                                 
                                 
                                ; THE FOLLOWING CODE SCANS A CP/M COMMAND LINE FOR BASIC. 
                                 
                                ; THE FOLLOWING SWITCHES ARE RECOGNIZED: 
                                ; 
                                ;       /M:<TOPMEM> 
                                ;       /F:<FILES> 
                                ;       /S:<MAX RECORD SIZE> 
                                ;       /C:<COM INPUT QUEUE SIZE> 
                                ; 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	CPMMEM:WORD 
 0000                           DSEG	ENDS 
 0091  8B 1E 0000 E             	MOV	BX,CPMMEM	;Load bytes free within segment 
                                ;For DYNCOM, CPMMEM holds the last segment addr of the system(i.e. CPMMEM=2) 
                                	EXTRN	SEGOFF:NEAR 
 0095  E8 0000 E                	CALL	SEGOFF		;Return byte offset of segment from current DS 
 0098  89 1E 0000 E             	MOV	MEMSIZ,BX	;USE AS DEFAULT 
 009C  89 1E 0000 E             	MOV	MAXMEM,BX	;set MAX DS size for CLEAR statement 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	DSEGZ:WORD 
 0000                           DSEG	ENDS 
 00A0  BB 0000 E                	MOV	BX,OFFSET DSEGZ	;IN THE DATA SEGMENT 
 00A3  89 1E 0000 E             	MOV	TEMP8,BX	;SO IF RE-INITAILIZE OK 
                                	EXTRN	CPMWRM:NEAR 
 =                              	TBUFF	EQU	CPMWRM+128D	;WHERE CP/M COMMAND BUFFER IS LOCATED 
                                 
 00A7  BB 0080 E                	MOV	BX,OFFSET TBUFF	;POINT TO FIRST CHAR OF COMMAND BUFFER 
 00AA  8A 07                    	MOV	AL,BYTE PTR [BX]	;WHICH CONTAINS # OF CHARS IN COMMAND 
 00AC  0A C0                    	OR	AL,AL		;IS THERE A COMMAND? 
 00AE  89 1E 0000 E             	MOV	TEMP8,BX	;SAVE POINTER TO THIS ZERO 
 00B2  75 03                    	JNZ	SHORT ??L000 
 00B4  E9 0146 R                	JMP	DONCMD		;NOTHING IN COMMAND BUFFER 
 00B7                           ??L000: 
 00B7  8A 2F                    	MOV	CH,BYTE PTR [BX]	;AND [B] 
 00B9  43                       	INC	BX		;POINT TO FIRST CHAR IN BUFFER 
 00BA  8A 07                    TBFLP:	MOV	AL,BYTE PTR [BX]	;GET CHAR FROM BUFFER 
 00BC  4B                       	DEC	BX		;BACK UP POINTER 
 00BD  88 07                    	MOV	BYTE PTR [BX],AL	;STORE CHAR BACK 
 00BF  43                       	INC	BX		;NOW ADVANCE CHAR TO ONE PLACE 
 00C0  43                       	INC	BX		;AFTER PREVIOUS POSIT. 
 00C1  FE CD                    	DEC	CH 
 00C3  75 F5                    	JNZ	SHORT TBFLP	;KEEP MOVING CHARS 
 00C5  4B                       	DEC	BX		;BACK UP POINTER 
 00C6  C6 07 00                 ENDCMD:	MOV	BYTE PTR [BX],LOW 0	;STORE TERMINATOR FOR CHRGET (0) 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:52:32
 
GWINIT GW-BASIC-86 Initialization                           Page     1-12
Read Operating System Parameters (memsiz etc.)              

 00C9  89 1E 0000 E             	MOV	TEMP8,BX	;SAVE POINTER TO NEW ZERO (OLD DESTROYED) 
 00CD  BB 007F E                	MOV	BX,OFFSET TBUFF-1	;POINT TO CHAR BEFORE BUFFER 
 00D0  E8 0000 E                	CALL	CHRGTR		;IGNORE LEADING SPACES 
 00D3  0A C0                    	OR	AL,AL 
 00D5  75 03                    	JNZ	SHORT ??L001 
 00D7  EB 6D 90                 	JMP	DONCMD		;END OF COMMAND 
 00DA                           ??L001: 
 00DA  3C 2F                    	CMP	AL,LOW OFFSET SWTCHR	;IS IT A SLASH 
 00DC  74 17                    	JZ	SHORT FNDSLH	;YES 
 00DE  4B                       	DEC	BX		;BACK UP POINTER 
 00DF  C6 07 22                 	MOV	BYTE PTR [BX],LOW 34	;STORE DOUBLE QUOTE 
 00E2  89 1E 0000 E             	MOV	TEMP8,BX	;SAVE POINTER TO START OF FILE NAME 
 00E6  43                       	INC	BX		;BUMP POINTER 
 00E7  3C 2F                    ISSLH:	CMP	AL,LOW OFFSET SWTCHR	;OPTION? 
 00E9  74 0A                    	JZ	SHORT FNDSLH	;YES 
 00EB  E8 0000 E                	CALL	CHRGTR		;SKIP OVER CHAR IN FILE NAME 
 00EE  0A C0                    	OR	AL,AL		;SET CC'S 
 00F0  75 F5                    	JNZ	SHORT ISSLH	;KEEP LOOKING FOR OPTION 
 00F2  EB 52 90                 	JMP	DONCMD		;THATS IT 
 00F5  C6 07 00                 FNDSLH:	MOV	BYTE PTR [BX],LOW 0	;STORE TERMINATOR OVER "/" 
 00F8                           SCANSW: 
 00F8  E8 0000 E                	CALL	CHRGTR		;GET CHAR AFTER SLASH 
 00FB                           SCANS1: 
 00FB  E8 0000 E                	CALL	MAKUPL		;CONVERT SWITCH TO UPPER CASE 
 00FE  3C 53                    	CMP	AL,LOW "S"	;IS IT /S: ? (SET MAX RECORD SIZE) 
 0100  74 35                    	JZ	SHORT WASS 
 0102  3C 43                    	CMP	AL,LOW "C"	;COM buffer size option 
 0104  74 23                    	JZ	SHORT WASC 
 0106  3C 46                    	CMP	AL,LOW "F"	;FILES OPTION 
 0108  74 2D                    	JZ	SHORT WASF 
 010A  3C 4D                    	CMP	AL,LOW "M"	;MEMORY OPTION 
 010C  74 03                    	JZ	SHORT ??L002 
 010E  E9 0000 E                	JMP	SNERR		;Branch if couldn't recognize option 
 0111                           ??L002: 
 0111  E8 013C R                	CALL	GETVAL		;[DX]=requested MEMSIZ 
 0114  89 16 0000 E             	MOV	MSWSIZ,DX	;Record memory request 
 0118  B0 FF                    	MOV	AL,LOW 377O 
 011A  A2 0000 E                	MOV	BYTE PTR MSWFLG,AL	;Set /M: option flag 
 011D  4B                       FOK:	DEC	BX		;RESCAN LAST CHAR 
 011E  E8 0000 E                	CALL	CHRGTR		;BY CALLING CHRGET 
 0121  74 23                    	JZ	SHORT DONCMD	;END OF COMMAND 
 0123  E8 0000 E                	CALL	SYNCHR 
 0126  2F                       	DB	OFFSET SWTCHR	;SLASH SHOULD FOLLOW 
 0127  EB D2                    	JMP	SHORT SCANS1	;SCAN NEXT SWITCH 
                                 
 0129  B0 FF                    WASC:	MOV	AL,LOW 377O 
 012B  A2 0000 E                	MOV	BYTE PTR CSWFLG,AL	;Set /C: option flag 
 012E  E8 013C R                	CALL	GETVAL		;Get COM request to D,E 
 0131  89 16 0000 E             	MOV	CSWSIZ,DX	;Record for future memory map calc. 
 0135  EB E6                    	JMP	SHORT FOK 
 0137                           WASS:				;GIO has dynamic record size 
 0137                           WASF:				;GIO has dynamic number of files 
 0137  E8 013C R                	CALL	GETVAL		;Get value 
 013A  EB E1                    	JMP	SHORT FOK	;Any value OK (and ignored) 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:52:32
 
GWINIT GW-BASIC-86 Initialization                           Page     1-13
Read Operating System Parameters (memsiz etc.)              

                                 
 013C  E8 0000 E                GETVAL:	CALL	CHRGTR		;skip M,F or S 
 013F  E8 0000 E                	CALL	SYNCHR 
 0142  3A                       	DB	OFFSET ":"	;MAKE SURE COLON FOLLOWS 
 0143  E9 0000 E                	JMP	CNSGET		;[DE]=VALUE FOLLOWING COLON 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	TEMP8:WORD	;POINTER TO BASIC LOAD FILE 
 0000                           DSEG	ENDS 
 0146                           ERRCMD: 
 0146                           DONCMD: 
 0146  E8 0000 E                	CALL	MAPCLC		;Calc. (but don't set) the new mem. map 
                                 
                                ;Now copy the command line file name (if there is one) to BUF 
                                ;Move required since DS: segment header will be overwritten when the 
                                ;DS: is coppied to the new DS: location. 
                                 
 0149  8B 1E 0000 E             	MOV	BX,TEMP8	;Load address of command line file name 
 014D  BA 0000 E                	MOV	DX,OFFSET BUF	;Destination address 
 0150  89 16 0000 E             	MOV	TEMP8,DX	;New command line buffer address 
 0154  8A 07                    NXTBYT:	MOV	AL,BYTE PTR [BX]	;File name character 
 0156  87 DA                    	XCHG	BX,DX 
 0158  88 07                    	MOV	BYTE PTR [BX],AL	;Store at BUF 
 015A  43                       	INC	BX 
 015B  87 DA                    	XCHG	BX,DX 
 015D  43                       	INC	BX 
 015E  0A C0                    	OR	AL,AL		;Test for zero byte terminator 
 0160  75 F2                    	JNZ	SHORT NXTBYT	;Get next file name character 
                                 
                                	SUBTTL Allocate Space for Disk Buffers 
                                 
                                ; Disk Initialization Routine 
                                 
                                ; setup  file info blocks 
                                ; the number of each and information for 
                                ; getting to pointers to each is stored. no locations are 
                                ; initialized, this is done by nodsks, first closing all files. 
                                ; the number of files is the file pointer table 
                                ; 
 0162  8B 1E 0000 E             	MOV	BX,MEMSIZ	;get size of memory 
 0166  4B                       	DEC	BX		;always leave top byte unused because 
                                				;val(string) makes byte in memory 
                                				;beyond last char of string=0 
 0167  89 1E 0000 E             	MOV	MEMSIZ,BX	;save in real memory size 
 016B  4B                       	DEC	BX		;one lower is stktop 
 016C  53                       	PUSH	BX		;save it on stack 
                                 
                                 
                                	SUBTTL INIT TXTAB, STKTOP, VARTAB, MEMSIZ, FRETOP, STREND 
                                 
                                ; Memory map for GW-BASIC: 
                                ; 
                                ;               [MAXMEM]--}     highest byte of physical memory in system 
                                ;                               user managed memory 
                                ;               [TOPMEM]--}     highest byte available to BASIC 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:52:32
 
GWINIT GW-BASIC-86 Initialization                           Page     1-14
INIT TXTAB, STKTOP, VARTAB, MEMSIZ, FRETOP, STREND          

                                ;                               basic stack 
                                ;               [STKLOW]--}     lowest byte available for STACK 
                                ;                           +--}FDB---}[STKEND] {end of chain} 
                                ;                           +---FDB{--+ 
                                ;               [FILTAB]-------}FDB---+ (FILTAB points to lowest byte of lowest FDB) 
                                ;                               0 (1 byte string space terminator for VAL) 
                                ;               [MEMSIZ]--}     highest byte of IN-USE string space 
                                ;               [FRETOP]--}     highest byte of FREE string space 
                                ;               [STREND]--}     lowest  byte of FREE string space 
                                ;               [ARYTAB]--}     lowest  byte of Array Table 
                                ;               [VARTAB]--}     lowest  byte of Variable Table 
                                ;               [TXTTAB]--}     lowest  byte of BASIC Program Text 
                                ; 
                                ; note:  when [FILTAB] = [STKLOW], no FDB's are allocated. 
                                ;        when [FRETOP] = [MEMSIZ], IN-USE string space is empty. 
                                ;        when [SP] = [STKLOW], STACK is full. 
                                 
                                ; At this point, MEMSIZ-1 is on stack, [HL]=TXTTAB-1 
                                ; 
 016D  BB 0000 E                	MOV	BX,OFFSET LSTVAR	;LSTVAR resides in last linked module with DS: 
 0170  89 1E 0000 E             	MOV	TXTTAB,BX	;save bottom of memory 
 0174  5A                       	POP	DX		;GET CURRENT MEMSIZ 
 0175  8A C2                    	MOV	AL,DL		;WANT AN EVEN STACK PTR. FOR 8086 
 0177  24 FE                    	AND	AL,LOW 254D	;SO WE'LL CLEAR LOW BIT 
 0179  8A D0                    	MOV	DL,AL		;OF THE STACK PTR. 
 017B  8A C2                    	MOV	AL,DL		;CALC TOTAL FREE/8 
 017D  2A C3                    	SUB	AL,BL 
 017F  8A D8                    	MOV	BL,AL 
 0181  8A C6                    	MOV	AL,DH 
 0183  1A C7                    	SBB	AL,BH 
 0185  8A F8                    	MOV	BH,AL 
 0187  73 03                    	JAE	SHORT ??L003 
 0189  E9 0000 E                	JMP	OMERRR 
 018C                           ??L003: 
 018C  B1 03                    	MOV	CL,LOW 3	;SHIFT RIGHT THREE BITS (DIVIDE BY 8) 
                                	INS86	323,353		;SHR BX,CL 
 0190  8A C7                    	MOV	AL,BH		;SEE HOW MUCH 
 0192  3C 02                    	CMP	AL,LOW 2	;IF LESS THAN 512 USE 1 EIGHTH 
 0194  72 03                    	JB	SHORT SMLSTK 
 0196  BB 0200                  	MOV	BX,512D 
 0199  8A C2                    SMLSTK:	MOV	AL,DL		;SUBTRACT STACK SIZE FROM TOP MEM 
 019B  2A C3                    	SUB	AL,BL 
 019D  8A D8                    	MOV	BL,AL 
 019F  8A C6                    	MOV	AL,DH 
 01A1  1A C7                    	SBB	AL,BH 
 01A3  8A F8                    	MOV	BH,AL 
 01A5  73 03                    	JAE	SHORT ??L004 
 01A7  E9 0000 E                	JMP	OMERRR 
 01AA                           ??L004: 
                                 
 01AA  89 1E 0000 E             	MOV	STKLOW,BX	;Save lowest legal value for [SP] 
 01AE  89 1E 0000 E             	MOV	FILTAB,BX	;Initially there are no FDB's 
 01B2  4B                       	DEC	BX 
 01B3  C6 07 00                 	MOV	BYTE PTR [BX],LOW 0	;String space should be terminated by 0 for VAL 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:52:32
 
GWINIT GW-BASIC-86 Initialization                           Page     1-15
INIT TXTAB, STKTOP, VARTAB, MEMSIZ, FRETOP, STREND          

 01B6  4B                       	DEC	BX 
 01B7  89 1E 0000 E             	MOV	MEMSIZ,BX	;Save highest byte to be used by strings 
 01BB  87 DA                    	XCHG	BX,DX 
 01BD  89 1E 0000 E             	MOV	TOPMEM,BX 
 01C1  89 1E 0000 E             	MOV	FRETOP,BX	;REASON USES THIS... 
 01C5  8B E3                    	MOV	SP,BX		;SET UP NEW STACK 
 01C7  89 1E 0000 E             	MOV	SAVSTK,BX 
 01CB  8B 1E 0000 E             	MOV	BX,TXTTAB 
 01CF  87 DA                    	XCHG	BX,DX 
 01D1  E8 0000 E                	CALL	REASON 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	FREFLG:WORD	;Print free bytes flag 
 0000                           DSEG	ENDS 
 01D4  32 C0                    	XOR	AL,AL 
 01D6  A2 0000 E                	MOV	BYTE PTR FREFLG,AL	;Clear to print free bytes message 
                                	EXTRN	GETHED:NEAR	;OEM heading retrieval routine 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	KEYSW:WORD	;Function key on flag 
 0000                           DSEG	ENDS 
 01D9  B0 FF                    	MOV	AL,LOW 255D	;if heading is printed, display Fn keys also 
 01DB  A2 0000 E                	MOV	BYTE PTR KEYSW,AL 
 01DE  E8 0000 E                	CALL	GETHED		;Get OEM specific portion of the heading 
 01E1  75 16                    	JNZ	SHORT PRNTIT	;Always print the heading option 
 01E3  53                       	PUSH	BX		;Print heading if no program option 
 01E4  8B 1E 0000 E             	MOV	BX,TEMP8	;Get pointer to file or 0 
 01E8  8A 07                    	MOV	AL,BYTE PTR [BX]	;Test for file on command line 
 01EA  5B                       	POP	BX		;Retrieve OEM heading pointer 
 01EB  0A C0                    	OR	AL,AL 
 01ED  74 0A                    	JZ	SHORT PRNTIT	;No program - go print heading 
 01EF  A2 0000 E                	MOV	BYTE PTR FREFLG,AL	;Set to inhibit free bytes message 
 01F2  32 C0                    	XOR	AL,AL		;Turn keys off if there is a program 
 01F4  A2 0000 E                	MOV	BYTE PTR KEYSW,AL	; otherwise allow OEM default 
 01F7  EB 09                    	JMP	SHORT PRNTND	;Skip heading 
                                 
 01F9  E8 0000 E                PRNTIT:	CALL	STROUT		;Print it 
 01FC  BB 0000 E                	MOV	BX,OFFSET HEDING	;GET HEADING ("BASIC VERSION...") 
 01FF  E8 0000 E                	CALL	STROUT		;PRINT IT 
 0202                           PRNTND: 
                                	EXTRN	SKEYON:NEAR 
 0202  A0 0000 E                	MOV	AL,BYTE PTR KEYSW	;Get function key display switch 
 0205  0A C0                    	OR	AL,AL		;Keys need to be turned on? 
 0207  75 03                    	JNZ	SHORT ??L005 
 0209  EB 09 90                 	JMP	KEYSOF		;Leave keys off 
 020C                           ??L005: 
 020C  32 C0                    	XOR	AL,AL 
 020E  A2 0000 E                	MOV	BYTE PTR KEYSW,AL	;Show current status of keys 
 0211  E8 0000 E                	CALL	SKEYON		;Set function key display on 
 0214  B0 FF                    KEYSOF:	MOV	AL,LOW 377O 
 0216  A2 0000 E                	MOV	BYTE PTR INITFG,AL	;Set the initialization complete flag 
                                				;indicating errors no longer result in an exit 
                                				;to the OS 
 0219  E9 0000 E                	JMP	INITSA 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:52:32
 
GWINIT GW-BASIC-86 Initialization                           Page     1-16
INIT TXTAB, STKTOP, VARTAB, MEMSIZ, FRETOP, STREND          

                                	PAGE 
                                ;CMDERR This routine is called when an error is detected before the 
                                ;       completion of initialization (before INITFG is set to non-zero). 
                                ;       CMDERR performs the following: 
                                ;               1. Write the heading 
                                ;               2. Write an error message implicating the command line. 
                                ;               3. Exit to the operating system through SYSTME 
                                 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	INITFG:WORD 
 0000                           DSEG	ENDS 
                                	EXTRN	SYSTME:NEAR,CERMSG:NEAR 
                                	PUBLIC	CMDERR 
                                 
 021C  BB 0000 E                CMDERR:	MOV	BX,OFFSET HEDING	;Get heading ("BASIC VERSION...") 
 021F  E8 0000 E                	CALL	STROUT		;Print it 
 0222  BB 0000 E                	MOV	BX,OFFSET CERMSG	;Get command error message 
 0225  E8 0000 E                	CALL	STROUT		;Print it 
 0228  E9 0000 E                	JMP	SYSTME		;Exit to the OS 
                                 
                                PUBLIC	$LAST 
 = 022B                         	$LAST=$ 
                                PUBLIC	LASTWR 
 = 022B                         	LASTWR=$ 
 022B                           CSEG	ENDS 
                                	END 

Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:52:32
 
GWINIT GW-BASIC-86 Initialization                           Symbols-1
                                                             

Macros:

		N a m e			Lines

ACRLF  . . . . . . . . . . . . .  	   2
ADR  . . . . . . . . . . . . . .  	   1
CALLOS . . . . . . . . . . . . .  	   1
CHRGET . . . . . . . . . . . . .  	   1
COMPAR . . . . . . . . . . . . .  	   2
DBGBRK . . . . . . . . . . . . .  	   1
DC . . . . . . . . . . . . . . .  	   6
DJNZ . . . . . . . . . . . . . .  	   2
FSIGN  . . . . . . . . . . . . .  	   1
GETYPE . . . . . . . . . . . . .  	   1
INS86  . . . . . . . . . . . . .  	  13
INST . . . . . . . . . . . . . .  	   1
LDDR . . . . . . . . . . . . . .  	   8
LDIR . . . . . . . . . . . . . .  	   8
MOVRI  . . . . . . . . . . . . .  	   6
OUTCHR . . . . . . . . . . . . .  	   1
POPR . . . . . . . . . . . . . .  	   2
PUSHM  . . . . . . . . . . . . .  	   5
PUSHR  . . . . . . . . . . . . .  	   2
SYNCHK . . . . . . . . . . . . .  	   2

Segments and Groups:

                N a m e         	Size	Align	Combine Class

CSEG . . . . . . . . . . . . . .  	022B	PARA	PUBLIC	'CODESG'
DSEG . . . . . . . . . . . . . .  	0000	PARA	PUBLIC	'DATASG'

Symbols:            

                N a m e         	Type	Value	Attr         

ALTAIR . . . . . . . . . . . . .  	Number	0000	
ANSI . . . . . . . . . . . . . .  	Number	0001	
ATN  . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External

BASDEB . . . . . . . . . . . . .  	Number	0000	
BEEPSW . . . . . . . . . . . . .  	Number	0001	
BEGDSG . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
BINCSW . . . . . . . . . . . . .  	Number	0000	
BLODSW . . . . . . . . . . . . .  	Number	0001	
BSEGSZ . . . . . . . . . . . . .  	Number	0000	
BUF  . . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
BUFLEN . . . . . . . . . . . . .  	Number	00FF	

CASSW  . . . . . . . . . . . . .  	Number	0000	
CERMSG . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
CHNFLG . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
CHRGTR . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
CHSEAT . . . . . . . . . . . . .  	Number	0001	
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:52:32
 
GWINIT GW-BASIC-86 Initialization                           Symbols-2
                                                             

CLMWID . . . . . . . . . . . . .  	Number	000E	
CMDERR . . . . . . . . . . . . .  	L NEAR	021C	CSEG	Global
CMPUTN . . . . . . . . . . . . .  	Number	0000	
CNSGET . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
CNSLEN . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
CNTOFL . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
COMMNT . . . . . . . . . . . . .  	Number	0000	
CONSSW . . . . . . . . . . . . .  	Number	0001	
CONSTR . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
CONTO  . . . . . . . . . . . . .  	Number	000F	
CONTRO . . . . . . . . . . . . .  	Number	0001	
COS  . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
CPM  . . . . . . . . . . . . . .  	Number	0001	
CPM110 . . . . . . . . . . . . .  	Number	0000	
CPM2 . . . . . . . . . . . . . .  	Number	0001	
CPM86  . . . . . . . . . . . . .  	Number	0000	
CPMA75 . . . . . . . . . . . . .  	Number	0000	
CPMADD . . . . . . . . . . . . .  	Number	0000	
CPMCON . . . . . . . . . . . . .  	Number	0000	
CPMEXT . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
CPMLIF . . . . . . . . . . . . .  	Number	0000	
CPMMDS . . . . . . . . . . . . .  	Number	0000	
CPMMEM . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
CPMPER . . . . . . . . . . . . .  	Number	0000	
CPMREA . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
CPMRSH . . . . . . . . . . . . .  	Number	0000	
CPMSBC . . . . . . . . . . . . .  	Number	0000	
CPMSER . . . . . . . . . . . . .  	Number	0000	
CPMVR1 . . . . . . . . . . . . .  	L NEAR	006B	CSEG
CPMWRM . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
CRDO . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
CRONLY . . . . . . . . . . . . .  	Number	0000	
CSWFLG . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
CSWSIZ . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External

DATPSC . . . . . . . . . . . . .  	Number	0080	
DBLCHR . . . . . . . . . . . . .  	Number	0000	
DBLTRN . . . . . . . . . . . . .  	Number	0000	
DCOMPR . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
DEBUG  . . . . . . . . . . . . .  	Text  		
DISK . . . . . . . . . . . . . .  	Number	0001	
DMC  . . . . . . . . . . . . . .  	Number	0000	
DONCMD . . . . . . . . . . . . .  	L NEAR	0146	CSEG
DOS  . . . . . . . . . . . . . .  	Number	0000	
DRVPOS . . . . . . . . . . . . .  	Number	0000	
DSEGZ  . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
DUPONT . . . . . . . . . . . . .  	Number	0000	
DYNBUF . . . . . . . . . . . . .  	Number	0000	
DYNCOM . . . . . . . . . . . . .  	Number	0001	

EDIT80 . . . . . . . . . . . . .  	Number	0000	
ENDBUF . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
ENDCMD . . . . . . . . . . . . .  	L NEAR	00C6	CSEG
ERRCMD . . . . . . . . . . . . .  	L NEAR	0146	CSEG
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:52:32
 
GWINIT GW-BASIC-86 Initialization                           Symbols-3
                                                             

ERRFLG . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
ESCCTL . . . . . . . . . . . . .  	Number	0000	
EXIDY  . . . . . . . . . . . . .  	Number	0000	

FAST . . . . . . . . . . . . . .  	Number	0001	
FCERR  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FILTAB . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
FIVDSK . . . . . . . . . . . . .  	Number	0001	
FIVEO  . . . . . . . . . . . . .  	Number	0001	
FIVLPT . . . . . . . . . . . . .  	Number	0001	
FIVMEM . . . . . . . . . . . . .  	Number	0001	
FKEYON . . . . . . . . . . . . .  	Number	0001	
FNDSLH . . . . . . . . . . . . .  	L NEAR	00F5	CSEG
FOK  . . . . . . . . . . . . . .  	L NEAR	011D	CSEG
FREFLG . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
FRETOP . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External

GENBIN . . . . . . . . . . . . .  	Number	0001	
GENDSK . . . . . . . . . . . . .  	Number	0000	
GENIO  . . . . . . . . . . . . .  	Number	0001	
GESBC  . . . . . . . . . . . . .  	Number	0000	
GETHED . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
GETVAL . . . . . . . . . . . . .  	L NEAR	013C	CSEG
GIO86  . . . . . . . . . . . . .  	Number	0001	
GIOINI . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
GW . . . . . . . . . . . . . . .  	Number	0001	
GWCASS . . . . . . . . . . . . .  	Number	0000	
GWDBUG . . . . . . . . . . . . .  	Number	0000	
GWINI  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External

HEATH  . . . . . . . . . . . . .  	Number	0000	
HEDING . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
HEXOCT . . . . . . . . . . . . .  	Number	0001	
HGHBIT . . . . . . . . . . . . .  	Number	0001	

I8086  . . . . . . . . . . . . .  	Number	0001	
I8251  . . . . . . . . . . . . .  	Number	0000	
IBMLIK . . . . . . . . . . . . .  	Number	0001	
IBMTOK . . . . . . . . . . . . .  	Number	0001	
INIT . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	Global
INITFG . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
INITSA . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
INKEYF . . . . . . . . . . . . .  	Number	0001	
INLADD . . . . . . . . . . . . .  	Number	0000	
INSTSW . . . . . . . . . . . . .  	Number	0000	
INTEL  . . . . . . . . . . . . .  	Number	0000	
INTFHW . . . . . . . . . . . . .  	Number	0000	
INTFSW . . . . . . . . . . . . .  	Number	0000	
INTLEC . . . . . . . . . . . . .  	Number	0000	
INTROM . . . . . . . . . . . . .  	Number	0000	
ISC  . . . . . . . . . . . . . .  	Number	0000	
ISIS . . . . . . . . . . . . . .  	Number	0000	
ISSLH  . . . . . . . . . . . . .  	L NEAR	00E7	CSEG

Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:52:32
 
GWINIT GW-BASIC-86 Initialization                           Symbols-4
                                                             

JISKTN . . . . . . . . . . . . .  	Number	0000	

KANABS . . . . . . . . . . . . .  	Number	0000	
KANJFN . . . . . . . . . . . . .  	Number	0000	
KBUF . . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
KEYSOF . . . . . . . . . . . . .  	L NEAR	0214	CSEG
KEYSTA . . . . . . . . . . . . .  	Number	0000	
KEYSW  . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
KILLER . . . . . . . . . . . . .  	Number	0000	

LABKEY . . . . . . . . . . . . .  	Number	0001	
LASTWR . . . . . . . . . . . . .  	NEAR 	022B	CSEG	Global
LEN2 . . . . . . . . . . . . . .  	Number	0001	
LEN3 . . . . . . . . . . . . . .  	Number	0001	
LENGTH . . . . . . . . . . . . .  	Number	0002	
LINLN  . . . . . . . . . . . . .  	Number	0050	
LINPRT . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
LISTEN . . . . . . . . . . . . .  	Number	0001	
LNGVAR . . . . . . . . . . . . .  	Number	0001	
LOKHED . . . . . . . . . . . . .  	Number	0000	
LONGI  . . . . . . . . . . . . .  	Number	0000	
LPT3 . . . . . . . . . . . . . .  	Number	0000	
LPTLEN . . . . . . . . . . . . .  	Number	0084	
LPTSW  . . . . . . . . . . . . .  	Number	0001	
LSTVAR . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External

MAKUPL . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
MAPCLC . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
MAPINI . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
MAXMEM . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
MDS  . . . . . . . . . . . . . .  	Number	0000	
MDSISS . . . . . . . . . . . . .  	Number	0000	
MEMIMG . . . . . . . . . . . . .  	Number	0001	
MEMSIZ . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
MORMOV . . . . . . . . . . . . .  	L NEAR	003E	CSEG
MOSTEK . . . . . . . . . . . . .  	Number	0000	
MRGFLG . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
MSWFLG . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
MSWSIZ . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
MULSEG . . . . . . . . . . . . .  	Number	0001	

NAMLEN . . . . . . . . . . . . .  	Number	0028	
NASCOM . . . . . . . . . . . . .  	Number	0000	
NATROM . . . . . . . . . . . . .  	Number	0000	
NBANKS . . . . . . . . . . . . .  	Number	0001	
NCRBAS . . . . . . . . . . . . .  	Number	0000	
NCRCAS . . . . . . . . . . . . .  	Number	0000	
NCRDEB . . . . . . . . . . . . .  	Number	0000	
NCRELS . . . . . . . . . . . . .  	Number	0000	
NCRLPT . . . . . . . . . . . . .  	Number	0001	
NECBAS . . . . . . . . . . . . .  	Number	0000	
NEWDS  . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
NMCOMT . . . . . . . . . . . . .  	Number	0002	
NMKEYF . . . . . . . . . . . . .  	Number	000A	
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:52:32
 
GWINIT GW-BASIC-86 Initialization                           Symbols-5
                                                             

NMKEYT . . . . . . . . . . . . .  	Number	000E	
NMLINE . . . . . . . . . . . . .  	Number	0019	
NMLPT  . . . . . . . . . . . . .  	Number	0003	
NMPENT . . . . . . . . . . . . .  	Number	0001	
NMSTRT . . . . . . . . . . . . .  	Number	0004	
NOATDL . . . . . . . . . . . . .  	Number	0000	
NOCTLA . . . . . . . . . . . . .  	Number	0000	
NODOT  . . . . . . . . . . . . .  	Number	0000	
NOEDIT . . . . . . . . . . . . .  	Number	0000	
NOIOS  . . . . . . . . . . . . .  	Number	0000	
NONULL . . . . . . . . . . . . .  	Number	0000	
NOPEKS . . . . . . . . . . . . .  	Number	0000	
NOROMP . . . . . . . . . . . . .  	Number	0000	
NORUBT . . . . . . . . . . . . .  	Number	0000	
NOUSR  . . . . . . . . . . . . .  	Number	0000	
NOVARP . . . . . . . . . . . . .  	Number	0000	
NUMLEV . . . . . . . . . . . . .  	Number	006E	
NUMTMP . . . . . . . . . . . . .  	Number	000A	
NUMTRP . . . . . . . . . . . . .  	Number	0015	
NXTBYT . . . . . . . . . . . . .  	L NEAR	0154	CSEG

OEMRAM . . . . . . . . . . . . .  	Number	0000	
OMERRR . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ONTEL  . . . . . . . . . . . . .  	Number	0000	
OUTDO  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External

PALSIZ . . . . . . . . . . . . .  	Number	0000	
PANBAS . . . . . . . . . . . . .  	Number	0000	
PCS  . . . . . . . . . . . . . .  	Number	0000	
PLAYSW . . . . . . . . . . . . .  	Number	0001	
PRMPRV . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
PRMSTK . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
PRNTIT . . . . . . . . . . . . .  	L NEAR	01F9	CSEG
PRNTND . . . . . . . . . . . . .  	L NEAR	0202	CSEG
PROFLG . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
PURE . . . . . . . . . . . . . .  	Number	0001	

QUEUE  . . . . . . . . . . . . .  	Number	0001	

RAMLOW . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
READY  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
REALIO . . . . . . . . . . . . .  	Number	0001	
REASON . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
RMX  . . . . . . . . . . . . . .  	Number	0000	
RSHACK . . . . . . . . . . . . .  	Number	0000	
RSTLES . . . . . . . . . . . . .  	Number	0001	

SAVSTK . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
SBC  . . . . . . . . . . . . . .  	Number	0000	
SBC86  . . . . . . . . . . . . .  	Number	0000	
SCANS1 . . . . . . . . . . . . .  	L NEAR	00FB	CSEG
SCANSW . . . . . . . . . . . . .  	L NEAR	00F8	CSEG
SCNIPL . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
SCP  . . . . . . . . . . . . . .  	Number	0001	
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:52:32
 
GWINIT GW-BASIC-86 Initialization                           Symbols-6
                                                             

SCRN86 . . . . . . . . . . . . .  	Number	0001	
SCRNIO . . . . . . . . . . . . .  	Number	0001	
SCROLT . . . . . . . . . . . . .  	Number	0001	
SEGOFF . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
SGSATS . . . . . . . . . . . . .  	Number	0000	
SHORTJ . . . . . . . . . . . . .  	Number	0001	
SHTCHN . . . . . . . . . . . . .  	Number	0000	
SHTERR . . . . . . . . . . . . .  	Number	0000	
SHTINS . . . . . . . . . . . . .  	Number	0000	
SHTLHM . . . . . . . . . . . . .  	Number	0000	
SHTLIN . . . . . . . . . . . . .  	Number	0000	
SHTPRO . . . . . . . . . . . . .  	Number	0000	
SHTREN . . . . . . . . . . . . .  	Number	0000	
SIXDIG . . . . . . . . . . . . .  	Number	0000	
SKEYON . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
SMALL  . . . . . . . . . . . . .  	Number	0000	
SMLSTK . . . . . . . . . . . . .  	L NEAR	0199	CSEG
SNDRST . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
SNERR  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
SPCDSK . . . . . . . . . . . . .  	Number	0000	
SPCNDS . . . . . . . . . . . . .  	Number	0000	
STKINI . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
STKLOW . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
STRING . . . . . . . . . . . . .  	Number	0001	
STROUT . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
STRSIZ . . . . . . . . . . . . .  	Number	0003	
SUPRSH . . . . . . . . . . . . .  	Number	0001	
SWAPSW . . . . . . . . . . . . .  	Number	0001	
SWTCHR . . . . . . . . . . . . .  	Number	002F	
SYNCHR . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
SYSTME . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External

TBFLP  . . . . . . . . . . . . .  	L NEAR	00BA	CSEG
TBUFF  . . . . . . . . . . . . .  	Text  CPMWRM+128D		
TEK  . . . . . . . . . . . . . .  	Number	0000	
TEMP8  . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
TEMPPT . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
TEMPST . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
TIMSHR . . . . . . . . . . . . .  	Number	0000	
TOPMEM . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
TRACEF . . . . . . . . . . . . .  	Number	0000	
TRNCHR . . . . . . . . . . . . .  	Number	0000	
TRSER2 . . . . . . . . . . . . .  	Number	0000	
TRUANS . . . . . . . . . . . . .  	Number	0000	
TRUROM . . . . . . . . . . . . .  	Number	0001	
TSDISK . . . . . . . . . . . . .  	Number	0000	
TSLPT  . . . . . . . . . . . . .  	Number	0000	
TSTACK . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
TXTTAB . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External

WASC . . . . . . . . . . . . . .  	L NEAR	0129	CSEG
WASF . . . . . . . . . . . . . .  	L NEAR	0137	CSEG
WASS . . . . . . . . . . . . . .  	L NEAR	0137	CSEG
WORDS  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:52:32
 
GWINIT GW-BASIC-86 Initialization                           Symbols-7
                                                             


XTNSYS . . . . . . . . . . . . .  	Number	0000	

Z80  . . . . . . . . . . . . . .  	Number	0001	
Z80MAC . . . . . . . . . . . . .  	Number	0001	

$LAST  . . . . . . . . . . . . .  	NEAR 	022B	CSEG	Global
??L000 . . . . . . . . . . . . .  	L NEAR	00B7	CSEG
??L001 . . . . . . . . . . . . .  	L NEAR	00DA	CSEG
??L002 . . . . . . . . . . . . .  	L NEAR	0111	CSEG
??L003 . . . . . . . . . . . . .  	L NEAR	018C	CSEG
??L004 . . . . . . . . . . . . .  	L NEAR	01AA	CSEG
??L005 . . . . . . . . . . . . .  	L NEAR	020C	CSEG


    818 Source  Lines
   1027 Total   Lines
    323 Symbols

  40316 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
