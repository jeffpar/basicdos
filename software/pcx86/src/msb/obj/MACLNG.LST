Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:36:18
 
MACLNG - MACRO LANGUAGE DRIVER                              Page     1-1
                                                            

                                ; [ This translation created 10-Feb-83 by Versi
				on 4.3 ] 
                                 
 0008                           	.RADIX  8		; To be safe 
                                 
 0000                           CSEG	SEGMENT PUBLIC 'CODESG' 
                                	ASSUME  CS:CSEG 
                                 
                             C  INCLUDE	OEM.INC 
                             C  ; [ This translation created 10-Feb-83 by Versi
				on 4.3 ] 
                             C   
                             C  	PAGE	,132D 
                             C  	SUBTTL  Common file to produce 2-segment 8086 GW-CPM BASIC 
                             C   
                             C  	.SALL 
                             C   
 000A                        C  	.RADIX	10 
 = 0000                      C  	OEMRAM=0D 
                             C  ;Pascal program HFILE searches for the following line - DO NOT MODIFY 
                             C  ;** (VERSION SPECIFIC VALUES) ************************************************ 
 = 0019                      C  	NMLINE=25		;Max screen display text lines 
 = 0001                      C  	NBANKS=1		;Number of graphic planes 
 = 0000                      C  	PALSIZ=0		;Size of OEM color palette 
 = 0000                      C  	DBLCHR=0		;Editor support for KANJI chars 
 = 0000                      C  	KANABS=0		;Kana BASIC (Japanese JIS codes) 
 = 0000                      C  	KANJFN=0		;KANJI String Functions KPOS, KLEN .. 
 = 0000                      C  	JISKTN=0		;&K, &J constants (KANJI) 
 = 0001                      C  	SUPRSH=1		;1=super shift key feature 
 = 000A                      C  	NMKEYF=10		;number of function keys 
 = 000E                      C  	NMKEYT=14		;number of function key traps 
 = 0001                      C  	FKEYON=1		;yes=display function keys 
 = 0001                      C  	SCROLT=1		;Line 25 allocated for status only 
 = 0001                      C  	PLAYSW=1		;for PLAY statement 
 = 0001                      C  	BEEPSW=1		;for SOUND, BEEP statements 
 = 0003                      C  	NMLPT=3			;number of line printers 
 = 0001                      C  	CONSSW=1		;Device CONS: 
 = 0002                      C  	NMCOMT=2		;number of COMmunications ports 
 = 0001                      C  	NMPENT=1		;number of light pens 
 = 0004                      C  	NMSTRT=4		;number of joysticks 
 = 0000                      C  	GWCASS=0		;Cassette switch (CSAVE,CLOAD,MOTOR) 
 = 0001                      C  	IBMLIK=1		;IBM compatibility package 
 = 0001                      C  	IBMTOK=1		;IBM token compatibility 
 = 0001                      C  	DYNCOM=1		;Dynamic communication buffers 
                             C  ;** (END OF VERSION SPECIFIC VALUES) ***************************************** 
                             C  ;Pascal program HFILE searches for the previous line - DO NOT MODIFY 
                             C  ; 
 = 0015                      C  	NUMTRP=NMKEYT+NMCOMT+NMPENT+NMSTRT 
 = 0001                      C  	GW=1			;GW BASIC 
 = 0000                      C  	ESCCTL=0		;Escape Sequence processing in SCROUT 
 = 0000                      C  	GWDBUG=0		;DEBUG statement (TEST VERSIONS ONLY) 
                             C  				; Support is in BINTRP.MAC and GWSTS.MAC 
 = 0000                      C  	SIXDIG=0		;# of digits of accuracy assumed when formatting 
                             C  				;single precision numbers for output. 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:36:18
 
MACLNG - MACRO LANGUAGE DRIVER                              Page     1-2
Common file to produce 2-segment 8086 GW-CPM BASIC          

                             C  				; 0 := 7 digits 
                             C  				; 1 := 6 digits 
 = 0000                      C  	CASSW=0			;CASSETTE SWITCH 
 = 0001                      C  	LABKEY=1		;^T (LABEL) key capability 
 = 0001                      C  	HGHBIT=1		;8-bit characters (ASCII & Graphics) 
 = 0001                      C  	QUEUE=1			;Queued painting algorithm (vs. stack) 
 = 0001                      C  	GIO86=1			;BASIC-86 Generalized I/O 
 = 0001                      C  	SCRNIO=1		;Screen editor 
 = 0001                      C  	SCRN86=1		;8086 Screen editor 
 = 0001                      C  	I8086=1			;CROSS ASSEMBLING FOR 8086 
 = 0001                      C  	MULSEG=1		;MULTI-SEGMENT 8086 BASIC 
 = 0000                      C  	SMALL=0			;"SMALL" VERSION OF 8086 BASIC IF SET 
 = 0001                      C  	TRUROM=1 
 = 0000                      C  	SBC86=0			;SBC 86/02 BOARD? 
 = 0001                      C  	SHORTJ=1		;USE INTRA-SEGMENT SHORT JUMPS 
                             C  				;IN 8086 CODE 
 = 0001                      C  	LNGVAR=1		;LONG VARIABLE NAME SUPPORT (EXTENDED ONLY) 
 = 0000                      C  	SHTERR=0		;SHORT (2 CHAR) ERROR MESSAGES 
 = 0000                      C  	SHTINS=0		;INSTR IN NON-FAST LEN2 VERSIONS 
 = 0000                      C  	SHTLHM=0		;LEFT HAND SIDE MID IN NON FAST LEN2 VERSIONS 
 = 0000                      C  	SHTCHN=0		;ALLOW CHAIN IN NON-5.0 
 = 0000                      C  	SHTPRO=0		;ALLOW PROTECTED FILES IN NON-FIVDSK 
 = 0000                      C  	SHTLIN=0		;ALLOW LINE INPUT IN NON-EXTENDED NON-FAST 
 = 0000                      C  	SHTREN=0		;ALLOW RENUM IN NON-FST VERSIONS 
 = 0001                      C  	INKEYF=1		;ADDS INKEY$ FUNCTION 
 = 0000                      C  	NOIOS=0			;NO I/O STATMENTS (INP,OUT, WAIT) 
 = 0000                      C  	NOPEKS=0		;NO PEEK, POKE 
 = 0000                      C  	NOUSR=0			;NO USR 
 = 0000                      C  	NOCTLA=0		;NO CONTROL-A IN EXTENDED 
 = 0000                      C  	NORUBT=0		;NO RUBOUT 
 = 0000                      C  	NOROMP=0		;NO ROM PROGRAM FEATURE 
 = 0000                      C  	NOATDL=0		;NO AUTO DELETE IN NON-FAST EXTENDED 
 = 0000                      C  	NODOT=0			;NO DOT IN LEN2 
 = 0000                      C  	NOEDIT=0		;NO EDIT COMMAND 
 = 0000                      C  	CRONLY=0		;ONLY PUT OUT CR, NOT CRLF TO TERMINAL 
                             C  				;AND FILES 
 = 0000                      C  	NONULL=0		;NO NULL COMMAND, PUT OUT NULLS IN CRDO & OUTCH1 
 = 0000                      C  	NOVARP=0		;NO VARPTR FUNCTION 
 = 0001                      C  	FIVEO=1			;GENERATE VERSION WITH RELEASE 5.0 FEATURES 
 = 0001                      C  	FIVMEM=1 
 = 0001                      C  	ANSI=1 
 = 0001                      C  	FIVDSK=1		;5.0 NEW DSK CODE 
 = 0001                      C  	FIVLPT=1		;WIDTH LPRINT AND 255 FEATURE 
 = 0001                      C  	HEXOCT=1		;&H..., HEX$, &O..., OCT$ 
 = 0000                      C  	BINCSW=0		;&B..., BIN$ 
 = 0001                      C  	BLODSW=1		;BLOAD, BSAVE COMMANDS 
 = 0001                      C  	MEMIMG=1		;MEMORY IMAGE FILES 
 = 0001                      C  	GENBIN=1 
                             C   
 = 0000                      C  	TRUANS=0		;TRUE ANSI VERSION (STATIC SCAN, ON ERROR) 
 = 0000                      C  	COMMNT=0		;DONT WANT BIG COMMENT 
 = 0000                      C  	INTEL=0			;INTEL PROPRIETARY 
 = 0000                      C  	INTFSW=0		;INTEL FLOATING POINT 
 = 0000                      C  	INTFHW=0 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:36:18
 
MACLNG - MACRO LANGUAGE DRIVER                              Page     1-3
Common file to produce 2-segment 8086 GW-CPM BASIC          

 = 0000                      C  	RMX=0			;INTEL RMX VERSION 
 = 0000                      C  	EDIT80=0		;FOR EDIT80 I/O ROUTINES 
 = 0000                      C  	RSHACK=0 
 = 0000                      C  	INTLEC=0 
 = 0002                      C  	LENGTH=2		;  1 MEANS 8K, 2 MEANS 12K 
 = 0000                      C  	BASDEB=0		;WHETHER DBG WILL BE LOADED WITH BASIC 
 = 0001                      C  	RSTLES=1		;WHETHER BASIC WILL USE RST LOCATIONS 
                             C  				;TO MAKE ITSELF SMALLER & QUICKER 
 = 0001                      C  	REALIO=1		;WHETHER SIMULATE (=0) OR ON MACHINE (=1) 
 = 0001                      C  	GENIO=1			;USE G/P ROUTINES 
 = 0001                      C  	CHSEAT=1		;CHSNS eats chars 
 = 0000                      C  	GENDSK=0		;USE G/P DSK CODE 
 = 0000                      C  	LONGI=0			;WHETHER WE ASK "TERMINAL WIDTH?" 
                             C  				;AND WANT SIN-TAN-COS-ATN? 
 = 0000                      C  	INSTSW=0		;FOR INSTR INSTRUCTION 
 = 0001                      C  	SWAPSW=1		;FOR SWAP STATEMENT 
 = 0000                      C  	MDS=0			;FOR INTEL MDS SYSTEMS 
 = 0000                      C  	SBC=0			;FOR INTEL SINGLE BOARD COMPUTER 
                             C  				;1=SBC 80/10, 2=SBC 80/20 
 = 0001                      C  	PURE=1			;ON FOR PURE CODE 
 = 0000                      C  	KILLER=0		;FOR ROM VERSION THAT WONT RUN IN RAM 
 = 0000                      C  	INTROM=0 
 = 0001                      C  	LPTSW=1 
 = 0001                      C  	NCRLPT=1 
 = 0000                      C  	NCRCAS=0 
 = 0000                      C  	ISC=0			;FOR ISC VERSION 
 = 0000                      C  	LPT3=0			;THREE LPT DRIVER VERSION(QUME,OKIA,CENT) 
 = 0000                      C  	TSLPT=0 
                             C   
 = 0000                      C  	DOS=0			;ON TO GEN ROUTINES FOR DOS 
 = 0001                      C  	DISK=1			;FILE I/O FEATURES 
 = 0000                      C  	TIMSHR=0		;NO TIME-SHARING DISK 
 = 0000                      C  	TSDISK=0		;NO TIME-SHARING DISK FOR US 
 = 0000                      C  	SPCDSK=0		;MAY HAVE MM'S DISK CODE 
 = 0000                      C  	SPCNDS=0 
 = 0001                      C  	FAST=1			;CONSTANT COMPRESSION, RENUM & FRIENDS 
 = 0000                      C  	KEYSTA=0 
 = 0000                      C  	ISIS=0			;FOR VERSION TO RUN UNDER INTEL'S ISIS II DOS 
 = 0000                      C  	MDSISS=0		;FOR MDS VERSION THAT RUNS UNDER ISIS-II 
 = 0001                      C  	CPM=1			;FOR CPM compatible operating systems 
 = 0001                      C  	CPM2=1			;VERSION 2. CPM 
 = 0000                      C  	CPM86=0			;FOR CP/M-86 operating system 
 = 0001                      C  	SCP=1			;MS-DOS operating system 
 = 0000                      C  	CPMCON=0 
 = 0000                      C  	CPMSER=0		;CHECK CPM SERIAL #'S 
 = 0000                      C  	CPMADD=0		;FOR VERSION TO RUN ON ADDS CPM 
 = 0000                      C  	CPMA75=0		;FOR VERSION TO RUN ON ADDS SYSTEM 75 
                             C  				;CP/M 
 = 0000                      C  	CPMRSH=0		;FOR RADIO SHACK CPM/M 
 = 0000                      C  	CPM110=0		;FOR CP/M @1100 HEX (INTERALIA) 
 = 0000                      C  	CPMSBC=0		;FOR VERSION TO RUN ON SBC CP/M AT 4100H 
 = 0000                      C  	CPMPER=0		;FOR PERTEC VERSION OF CPM 
 = 0000                      C  	CPMLIF=0		;LIFEBOAT CP/M AT 4200H 
 = 0000                      C  	CPMMDS=0		;MOHAWK DATA SYSTEMS CP/M 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:36:18
 
MACLNG - MACRO LANGUAGE DRIVER                              Page     1-4
Common file to produce 2-segment 8086 GW-CPM BASIC          

 = 0000                      C  	CPMCON=0 
 = 0000                      C  	Z80=0 
 = 0001                      C  	DISK=1 
 = 0001                      C  	NCRLPT=1 
 = 0001                      C  	RSTLES=1 
 = 0000                      C  	DRVPOS=CPMADD 
 = 0000                      C  	TRNCHR=CPMADD 
 = 0000                      C  	INLADD=CPMADD 
 = 0001                      C  	LISTEN=1		;ON MEANS LISTEN FOR ^C 
 = 0001                      C  	LISTEN=1 
 = 0000                      C  	LEN2=0 
 = 0001                      C  	LEN2=1 
 = 0001                      C  	HEXOCT=1 
 = 0002                      C  	LENGTH=2 
 = 0001                      C  	RSTLES=1 
 = 0001                      C  	FIVLPT=1 
 = 0000                      C  	I8251=0			;THIS SWITCH IS USED FOR ROSEMOUNT VERSION 
 = 0001                      C  	CONTRO=1		;ALLOW ^O 
 = 0001                      C  	LEN3=LEN2 OR CASSW 
                             C   
                             C   
                             C   
 = 0001                      C  	STRING=1 
 = 0001                      C  	NCRLPT=1 
                             C   
                             C  ; *** OEM Switches which need to be defaulted to 0 
                             C  ; 
 = 0000                      C  	CMPUTN=0 
 = 0000                      C  	DUPONT=0 
 = 0000                      C  	EXIDY=0 
 = 0000                      C  	GESBC=0 
 = 0000                      C  	HEATH=0 
 = 0000                      C  	LOKHED=0 
 = 0000                      C  	MOSTEK=0 
 = 0000                      C  	TEK=0 
 = 0000                      C  	TRSER2=0 
 = 0000                      C  	NASCOM=0 
 = 0000                      C  	NATROM=0 
 = 0000                      C  	NCRBAS=0 
 = 0000                      C  	NCRDEB=0 
 = 0000                      C  	NCRDEB=0 
 = 0000                      C  	NCRELS=0 
 = 0000                      C  	ONTEL=0 
 = 0000                      C  	PCS=0 
 = 0000                      C  	SGSATS=0 
 = 0000                      C  	ALTAIR=0 
 = 0000                      C  	DMC=0 
 = 0000                      C  	PANBAS=0 
 = 0000                      C  	XTNSYS=0 
 = 0000                      C  	NECBAS=0 
                             C  ;******************************************************************* 
                             C  ; Z80 related macros 
                             C  ;******************************************************************* 
 = 0001                      C  	Z80=1			;FOR VERSION THAT RUNS ON BOTH 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:36:18
 
MACLNG - MACRO LANGUAGE DRIVER                              Page     1-5
Common file to produce 2-segment 8086 GW-CPM BASIC          

                             C  				;8080'S AND ZILOG Z-80'S 
 = 0001                      C  	Z80MAC=1		;USE 8080 MACROS INSTEAD OF Z80 INSTRUCTIONS 
 = 0000                      C  	Z80=0 
 = 0001                      C  	Z80=1 
                             C  LDIR	MACRO 
                             C  	MOV	WORD PTR A,WORD PTR M 
                             C  	STAX	D 
                             C  	INXF	H 
                             C  	INXF	D 
                             C  	DCXF	B 
                             C  	MOV	WORD PTR A,WORD PTR B 
                             C  	ORA	C 
                             C  	JNZ	_-8D 
                             C  ENDM 
                             C  LDDR	MACRO 
                             C  	MOV	WORD PTR A,WORD PTR M 
                             C  	STAX	D 
                             C  	DCXF	H 
                             C  	DCXF	D 
                             C  	DCXF	B 
                             C  	MOV	WORD PTR A,WORD PTR B 
                             C  	ORA	C 
                             C  	JNZ	_-8D 
                             C  ENDM 
                             C  DJNZ	MACRO	    DEST 
                             C  	DCR	B 
                             C  	JNZ	DEST 
                             C  ENDM 
                             C  ;******************************************************************* 
                             C  ; Define reset routines. 
                             C  ;******************************************************************* 
                             C  FSIGN	MACRO 
                             C  	CALL	SIGN 
                             C  ENDM 
                             C  PUSHM	MACRO 
                             C  	MOV	WORD PTR C,WORD PTR M 
                             C  	INX	H 
                             C  	MOV	WORD PTR B,WORD PTR M 
                             C  	INX	H 
                             C  	PUSH	WORD PTR B 
                             C  ENDM 
                             C  SYNCHK	MACRO	X 
                             C  	CALL	SYNCHR 
                             C  	DB	OFFSET X 
                             C  ENDM 
                             C  OUTCHR	MACRO 
                             C  	CALL	OUTDO 
                             C  ENDM 
                             C  CHRGET	MACRO 
                             C  	CALL	CHRGTR 
                             C  ENDM 
                             C  COMPAR	MACRO 
                             C  	CALL	DCOMPR 
                             C  ENDM 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:36:18
 
MACLNG - MACRO LANGUAGE DRIVER                              Page     1-6
Common file to produce 2-segment 8086 GW-CPM BASIC          

                             C  GETYPE	MACRO 
                             C  	CALL	GETYPR 
                             C  ENDM 
                             C  COMPAR	MACRO 
                             C  	DB	73O 
                             C  	DB	332O 
                             C   ENDM 
                             C  ACRLF	MACRO 
                             C  	DB	13D 
                             C  	DB	10D 
                             C  ENDM 
                             C  PUSHR	MACRO 
                             C  	PUSH	WORD PTR D 
                             C  	PUSH	WORD PTR B 
                             C  ENDM 
                             C  POPR	MACRO 
                             C  	POP	WORD PTR B 
                             C  	POP	WORD PTR D 
                             C  ENDM 
                             C  MOVRI	MACRO	B,C,D,E 
                             C  	DB	1O		; "LXI  B" 
                             C  	DB	OFFSET C 
                             C  	DB	OFFSET B 
                             C  	DB	21O		; "LXI  D" 
                             C  	DB	OFFSET E 
                             C  	DB	OFFSET D 
                             C  ENDM 
                             C  INST	MACRO	X 
                             C  	DB	OX 
                             C  ENDM 
                             C   
                             C   
 = 000F                      C  	CONTO=15		;CHARACTER TO SUPRESS OUTPUT (USUALLY CONTROL-O) 
 = 0000                      C  	DBLTRN=0		;FOR DOUBLE PRECISION TRANSCENDENTALS 
                             C   
 = 000E                      C  	CLMWID=14D		;MAKE COMMA COLUMNS FOURTEEN CHARACTERS 
 = 0080                      C  	DATPSC=128D		;NUMBER OF DATA BYTES IN DISK SECTOR 
 = 0050                      C  	LINLN=80D		;TERMINAL LINE LENGTH 
 = 0084                      C  	LPTLEN=132D 
 = 00FF                      C  	BUFLEN=255		;LONG LINES 
 = 0028                      C  	NAMLEN=40D		;MAXIMUM LENGTH NAME -- 3 TO 127 
                             C   
 = 006E                      C  	NUMLEV=110D		;NUMBER OF STACK LEVELS RESERVED 
                             C  				;BY AN EXPLICIT CALL TO GETSTK 
 = 0004                      C  	STRSIZ=4 
 = 0003                      C  	STRSIZ=3 
 = 0003                      C  	NUMTMP=3		;NUMBER OF STRING TEMPORARIES 
 = 000A                      C  	NUMTMP=10 
                             C   
 0008                        C  	.RADIX	8 
                             C  ; 
                             C  ; Useful macros 
                             C  ; 
                             C   
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:36:18
 
MACLNG - MACRO LANGUAGE DRIVER                              Page     1-7
Common file to produce 2-segment 8086 GW-CPM BASIC          

                             C  ACRLF   MACRO 
                             C          DB      13D 
                             C          DB      10D 
                             C  ENDM 
                             C   
                             C  INS86   MACRO   A,B,C,D 
                             C          DB      A&O 
                             C  IFNB    <B> 
                             C          DB      B&O 
                             C  ENDIF 
                             C  IFNB    <D> 
                             C          DB      C&O 
                             C          DB      D&O 
                             C  ENDIF 
                             C  IFB     <D> 
                             C   IFNB   <C> 
                             C          DW      C 
                             C    ENDIF 
                             C   ENDIF 
                             C  ENDM 
                             C   
                             C  CALLOS  MACRO 
                             C          CALL    CPMENT 
                             C  ENDM 
                             C   
                             C  POPR    MACRO 
                             C          POP     CX 
                             C          POP     DX 
                             C  ENDM 
                             C   
                             C  ADR     MACRO   X 
                             C          DW      X 
                             C  ENDM 
                             C   
                             C  DC      MACRO   ARG 
                             C          IRPC    ZZ,<ARG> 
                             C              IFDIF       <ZZ>,<">
                             C                  DB      "&ZZ&" 
                             C                  _A="&ZZ&" 
                             C              ENDIF 
                             C          ENDM 
                             C  ENDM 
                             C  ; 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:36:18
 
MACLNG - MACRO LANGUAGE DRIVER                              Page     1-8
Common file to produce 2-segment 8086 GW-CPM BASIC          

                             C          PAGE 
                             C   
                             C  DBGBRK	MACRO 
                             C  	DB	0CDh,06h,0CCh 
                             C  	ENDM 
                                 
                                 
                                	TITLE   MACLNG - MACRO LANGUAGE DRIVER 
                                ; 
                                ; MICROSOFT GRAPHICS AND SOUND MACRO LANGUAGES 
                                ; 
 = 0000                         TSHIBA=0 
 = 0000                         ALPCPM=0 
                                 
                                 
                                 
                                	PUBLIC	FETCHR,FETCHZ,DECFET 
                                	PUBLIC	VALSCN,VALSC2,VARGET,NEGD 
                                 
                                	EXTRN	FCERR:NEAR,FRESTR:NEAR,FRCINT:NEAR,FRMEVL:NEAR,ISVAR:NEAR 
                                 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	ASSUME DS:DSEG 
                                	EXTRN	MCLLEN:WORD,MCLPTR:WORD,BUF:WORD,MCLTAB:WORD 
 0000                           DSEG	ENDS 
                                 
                                	PUBLIC	MACLNG,MCLXEQ 
                                	EXTRN	GETBCD:NEAR 
                                 
 0000  89 16 0000 E             MACLNG:	MOV	MCLTAB,DX	;SAVE POINTER TO COMMAND TABLE 
 0004  E8 0000 E                	CALL	FRMEVL		;EVALUATE STRING ARGUMENT 
 0007  53                       	PUSH	BX		;SAVE TXTPTR TILL DONE 
 0008  BA 0000                  	MOV	DX,0		;PUSH DUMMY ENTRY TO MARK END OF STK 
 000B  52                       	PUSH	DX		;DUMMY ADDR 
 000C  50                       	PUSH	AX		;DUMMY LENGTH 
                                 
 000D  E8 0000 E                MCLNEW:	CALL	FRESTR 
 0010  E8 0000 E                	CALL	GETBCD		;GET LENGTH & POINTER 
 0013  8A C5                    	MOV	AL,CH 
 0015  0A C1                    	OR	AL,CL 
 0017  74 0A                    	JZ	SHORT MCLOOP	;Don't Push if addr is 0 
 0019  8A C6                    	MOV	AL,DH 
 001B  0A C0                    	OR	AL,AL 
 001D  74 04                    	JZ	SHORT MCLOOP	; or if Len is 0... 
 001F  51                       	PUSH	CX		;PUSH ADDR OF STRING 
 0020  8A C6                    	MOV	AL,DH		;PUT IN [AL] 
 0022  50                       	PUSH	AX 
                                 
 0023  58                       MCLOOP:	POP	AX		;GET LENGTH OFF STACK 
 0024  A2 0000 E                	MOV	BYTE PTR MCLLEN,AL 
 0027  5B                       	POP	BX		;GET ADDR 
 0028  0B DB                    	OR	BX,BX		;SEE IF LAST ENTRY 
 002A  75 03                    	JNZ	SHORT ??L000 
 002C  E9 00B5 R                	JMP	POPTRT 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:36:18
 
MACLNG - MACRO LANGUAGE DRIVER                              Page     1-9
Common file to produce 2-segment 8086 GW-CPM BASIC          

 002F                           ??L000:				;ALL FINISHED IF ZERO 
 002F  89 1E 0000 E             	MOV	MCLPTR,BX	;SET UP POINTER 
                                 
 0033  E8 0094 R                MCLSCN:	CALL	FETCHR		;GET A CHAR FROM STRING 
 0036  74 EB                    	JZ	SHORT MCLOOP	;END OF STRING - SEE IF MORE ON STK 
 0038  02 C0                    	ADD	AL,AL		;PUT CHAR * 2 INTO [C] 
 003A  8A C8                    	MOV	CL,AL 
 003C  8B 1E 0000 E             	MOV	BX,MCLTAB	;POINT TO COMMAND TABLE 
 0040                           MSCNLP: 
                                	INS86	56		;CS OVERRIDE 
 0041  8A 07                    	MOV	AL,BYTE PTR [BX]	;GET CHAR FROM COMMAND TABLE 
 0043  02 C0                    	ADD	AL,AL		;CHAR = CHAR * 2 (CLR HI BIT FOR CMP) 
 0045  75 03                    GOFCER:	JNZ	SHORT ??L001 
 0047  E8 0000 E                	CALL	FCERR		;END OF TABLE. 
 004A                           ??L001: 
 004A  3A C1                    	CMP	AL,CL		;HAVE WE GOT IT? 
 004C  74 05                    	JZ	SHORT MISCMD	;YES. 
 004E  43                       	INC	BX		;MOVE TO NEXT ENTRY 
 004F  43                       	INC	BX 
 0050  43                       	INC	BX 
 0051  EB ED                    	JMP	SHORT MSCNLP 
                                 
 0053                           MISCMD: 
 0053  B9 0033 R                	MOV	CX,OFFSET MCLSCN	;RETURN TO TOP OF LOOP WHEN DONE 
 0056  51                       	PUSH	CX 
                                	INS86	56		;CS OVERRIDE 
 0058  8A 07                    	MOV	AL,BYTE PTR [BX]	;SEE IF A VALUE NEEDED 
 005A  8A C8                    	MOV	CL,AL		;PASS GOTTEN CHAR IN [C] 
 005C  02 C0                    	ADD	AL,AL 
 005E  73 28                    	JAE	SHORT MNOARG	;COMMAND DOESN'T REQUIRE ARGUMENT 
 0060  0A C0                    	OR	AL,AL		;CLEAR CARRY 
 0062  D0 D8                    	RCR	AL,1		;MAKE IT A CHAR AGAIN 
 0064  8A C8                    	MOV	CL,AL		;PUT IN [C] 
 0066  51                       	PUSH	CX 
 0067  53                       	PUSH	BX		;SAVE PTR INTO CMD TABLE 
 0068  E8 0094 R                	CALL	FETCHR		;GET A CHAR 
 006B  BA 0001                  	MOV	DX,1		;DEFAULT ARG=1 
 006E  75 03                    	JNZ	SHORT ??L002 
 0070  EB 12 90                 	JMP	VSNAR0		;NO ARG IF END OF STRING 
 0073                           ??L002: 
 0073  E8 0181 R                	CALL	ISLET2		;SEE IF POSSIBLE LETTER 
 0076  72 03                    	JNAE	SHORT ??L003 
 0078  EB 07 90                 	JMP	VSNARG 
 007B                           ??L003: 
 007B  E8 00CB R                	CALL	VALSC3		;GET THE VALUE 
 007E  F9                       	STC			;SET CARRY TO FLAG USING NON-DEFAULT 
 007F  EB 05                    	JMP	SHORT ISCMD3 
 0081  E8 00B7 R                VSNARG:	CALL	DECFET		;PUT CHAR BACK INTO STRING 
 0084  0A C0                    VSNAR0:	OR	AL,AL		;CLEAR CARRY 
 0086  5B                       ISCMD3:	POP	BX 
 0087  59                       	POP	CX		;GET BACK COMMAND CHAR 
 0088  43                       MNOARG:	INC	BX		;POINT TO DISPATCH ADDR 
                                	INS86	56		;CS OVERRIDE 
 008A  8B 1F                    	MOV	BX,[BX]		;GET ADDRESS INTO HL 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:36:18
 
MACLNG - MACRO LANGUAGE DRIVER                              Page     1-10
Common file to produce 2-segment 8086 GW-CPM BASIC          

 008C  FF E3                    	JMP	BX		;DISPATCH 
                                 
 008E  E8 0094 R                FETCHZ:	CALL	FETCHR		;GET A CHAR FROM STRING 
 0091  74 B2                    	JZ	SHORT GOFCER	;GIVE ERROR IF END OF LINE 
 0093  C3                       	RET 
                                 
 0094  53                       FETCHR:	PUSH	BX 
 0095  BB 0000 E                FETCH2:	MOV	BX,OFFSET MCLLEN	;POINT TO STRING LENGTH 
 0098  8A 07                    	MOV	AL,BYTE PTR [BX] 
 009A  0A C0                    	OR	AL,AL 
 009C  74 17                    	JZ	SHORT POPTRT	;RETURN Z=0 IF END OF STRING 
 009E  FE 0F                    	DEC	BYTE PTR [BX]	;UPDATE COUNT FOR NEXT TIME 
 00A0  8B 1E 0000 E             	MOV	BX,MCLPTR	;GET PTR TO STRING 
 00A4  8A 07                    	MOV	AL,BYTE PTR [BX]	;GET CHARACTER FROM STRING 
 00A6  43                       	INC	BX		;UPDATE PTR FOR NEXT TIME 
 00A7  89 1E 0000 E             	MOV	MCLPTR,BX 
 00AB  3C 20                    	CMP	AL,LOW " "	;SKIP SPACES 
 00AD  74 E6                    	JZ	SHORT FETCH2 
 00AF  3C 60                    	CMP	AL,LOW 96D	;CONVERT LOWER CASE TO UPPER 
 00B1  72 02                    	JB	SHORT POPTRT 
 00B3  2C 20                    	SUB	AL,LOW 32D	;DO CONVERSION 
 00B5  5B                       POPTRT:	POP	BX 
 00B6  C3                       	RET 
                                 
 00B7  53                       DECFET:	PUSH	BX 
 00B8  BB 0000 E                	MOV	BX,OFFSET MCLLEN	;INCREMENT LENGTH 
 00BB  FE 07                    	INC	BYTE PTR [BX] 
 00BD  8B 1E 0000 E             	MOV	BX,MCLPTR	;BACK UP POINTER 
 00C1  4B                       	DEC	BX 
 00C2  89 1E 0000 E             	MOV	MCLPTR,BX 
 00C6  5B                       	POP	BX 
 00C7  C3                       	RET 
                                 
 00C8  E8 008E R                VALSCN:	CALL	FETCHZ		;GET FIRST CHAR OF ARGUMENT 
 00CB  3C 3D                    VALSC3:	CMP	AL,LOW "="	;NUMERIC? 
 00CD  75 03                    	JNZ	SHORT ??L004 
 00CF  E9 015E R                	JMP	VARGET 
 00D2                           ??L004: 
 00D2  3C 2B                    	CMP	AL,LOW "+"	;PLUS SIGN? 
 00D4  74 F2                    	JZ	SHORT VALSCN	;THEN SKIP IT 
 00D6  3C 2D                    	CMP	AL,LOW "-"	;NEGATIVE VALUE? 
 00D8  75 06                    	JNZ	SHORT VALSC2 
 00DA  BA 017E R                	MOV	DX,OFFSET NEGD	;IF SO, NEGATE BEFORE RETURNING 
 00DD  52                       	PUSH	DX 
 00DE  EB E8                    	JMP	SHORT VALSCN	;EAT THE "-" 
 00E0                           VALSC2: 
 00E0  BA 0000                  	MOV	DX,0		;INITIAL VALUE OF ZERO 
 00E3                           NUMLOP: 
 00E3  3C 2C                    	CMP	AL,LOW 54O	;COMMA 
 00E5  74 D0                    	JZ	SHORT DECFET	;YES, BACK UP AND RETURN 
 00E7  3C 3B                    	CMP	AL,LOW 73O	;SEMICOLON? 
 00E9  75 01                    	JNZ	SHORT $+3 
 00EB  C3                       	RET			;YES, JUST RETURN 
 00EC  3C 3A                    	CMP	AL,LOW OFFSET "9"+1	;NOW SEE IF ITS A DIGIT 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:36:18
 
MACLNG - MACRO LANGUAGE DRIVER                              Page     1-11
Common file to produce 2-segment 8086 GW-CPM BASIC          

 00EE  73 C7                    	JAE	SHORT DECFET	;IF NOT, BACK UP AND RETURN 
 00F0  3C 30                    	CMP	AL,LOW "0" 
 00F2  72 C3                    	JB	SHORT DECFET 
 00F4  BB 0000                  	MOV	BX,0		;[HL] is accumulator 
 00F7  B5 0A                    	MOV	CH,LOW 10D	;[HL]=[DE]*10 
 00F9  03 DA                    NUML01:	ADD	BX,DX 
 00FB  72 5A                    	JB	SHORT SCNFC	;overflow - JMP Function Call Error 
 00FD  FE CD                    	DEC	CH 
 00FF  75 F8                    	JNZ	SHORT NUML01 
 0101  2C 30                    	SUB	AL,LOW "0"	;ADD IN THE DIGIT 
 0103  8A D0                    	MOV	DL,AL 
 0105  B6 00                    	MOV	DH,LOW 0 
 0107  03 DA                    	ADD	BX,DX 
 0109  72 4C                    	JB	SHORT SCNFC	;overflow - JMP Function Call Error 
 010B  87 DA                    	XCHG	BX,DX		;VALUE SHOULD BE IN [DE] 
 010D  E8 0094 R                	CALL	FETCHR		;GET NEXT CHAR 
 0110  75 D1                    	JNZ	SHORT NUMLOP	;branch if not end of string 
 0112  C3                       	RET 
                                 
                                 
 0113                           SCNVAR: 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	VALTYP:WORD 
 0000                           DSEG	ENDS 
                                	EXTRN	RETVAR:NEAR 
                                ;Allow VARPTR$(variable) for BASCOM compatibility 
                                ; 
 0113  8B 1E 0000 E             	MOV	BX,MCLPTR	;Get string pntr 
 0117  8A 07                    	MOV	AL,BYTE PTR [BX]	;possible VALTYP if string created by VARPTR$ 
 0119  3C 09                    	CMP	AL,LOW 9D	;If .gt. 8 then not VARPTR$ string 
 011B  73 1D                    	JAE	SHORT SCNVR2	;Brif not VARPTR$ candidate 
 011D  A0 0000 E                	MOV	AL,BYTE PTR MCLLEN	;Get str len 
 0120  2C 03                    	SUB	AL,LOW 3D	;at least 3 bytes if it was created by VARPTR$ 
 0122  72 16                    	JB	SHORT SCNVR2	;else let SCNVAR generate FCERR for bad var name 
 0124  A2 0000 E                	MOV	BYTE PTR MCLLEN,AL	;len -3 
 0127  8A 07                    	MOV	AL,BYTE PTR [BX]	;assume Byte 1 is Type 
 0129  A2 0000 E                	MOV	BYTE PTR VALTYP,AL	;so store in FAC 
 012C  43                       	INC	BX 
 012D  8A 17                    	MOV	DL,BYTE PTR [BX] 
 012F  43                       	INC	BX 
 0130  8A 37                    	MOV	DH,BYTE PTR [BX]	;[DE] = Var address. 
 0132  43                       	INC	BX 
 0133  89 1E 0000 E             	MOV	MCLPTR,BX	;New pntr 
 0137  E9 0000 E                	JMP	RETVAR		;Go return value in FAC 
 013A                           SCNVR2: 
 013A  E8 008E R                	CALL	FETCHZ		;MAKE SURE FIRST CHAR IS LETTER 
 013D  BA 0000 E                	MOV	DX,OFFSET BUF	;PLACE TO COPY NAME FOR PTRGET 
 0140  52                       	PUSH	DX		;SAVE ADDR OF BUF FOR "ISVAR" 
 0141  B5 28                    	MOV	CH,LOW 40D	;COPY MAX OF 40 CHARACTERS 
 0143  E8 0181 R                	CALL	ISLET2		;MAKE SURE IT'S A LETTER 
 0146  72 0F                    	JB	SHORT SCNFC	;FC ERROR IF NOT LETTER 
                                 
 0148  8B FA                    SCNVLP:	MOV	DI,DX 
 014A  AA                       	STOSB			;STORE CHAR IN BUF 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:36:18
 
MACLNG - MACRO LANGUAGE DRIVER                              Page     1-12
Common file to produce 2-segment 8086 GW-CPM BASIC          

 014B  42                       	INC	DX 
 014C  3C 3B                    	CMP	AL,LOW 73O	;A SEMICOLON? 
 014E  74 0A                    	JZ	SHORT SCNV2	;YES - END OF VARIABLE NAME 
 0150  E8 008E R                	CALL	FETCHZ		;GET NEXT CHAR 
 0153  FE CD                    	DEC	CH 
 0155  75 F1                    	JNZ	SHORT SCNVLP 
                                 
 0157  E8 0000 E                SCNFC:	CALL	FCERR		;ERROR - VARIABLE TOO LONG 
 015A  5B                       SCNV2:	POP	BX		;GET PTR TO BUF 
 015B  E9 0000 E                	JMP	ISVAR		;GO GET ITS VALUE 
                                 
 015E  E8 0113 R                VARGET:	CALL	SCNVAR		;SCAN & EVALUATE VARIABLE 
 0161  E8 0000 E                	CALL	FRCINT		;MAKE IT AN INTEGER 
 0164  87 DA                    	XCHG	BX,DX		;IN [DE] 
 0166  C3                       	RET 
                                 
                                	EXTRN	GETSTK:NEAR 
 0167  E8 0113 R                MCLXEQ:	CALL	SCNVAR		;SCAN VARIABLE NAME 
 016A  A0 0000 E                	MOV	AL,BYTE PTR MCLLEN	;SAVE CURRENT STRING POS & LENGTH 
 016D  8B 1E 0000 E             	MOV	BX,MCLPTR 
 0171  5E                       	POP	SI		;XTHL 
 0172  87 F3                    	XCHG	SI,BX 
 0174  56                       	PUSH	SI		;POP OFF RET ADDR, PUSH MCLPTR 
 0175  50                       	PUSH	AX 
 0176  B1 02                    	MOV	CL,LOW 2	;MAKE SURE OF ROOM ON STACK 
 0178  E8 0000 E                	CALL	GETSTK 
 017B  E9 000D R                	JMP	MCLNEW 
                                 
 017E                           NEGD: 
                                	INS86	367,332		;NEG DX,DX 
 0180  C3                       	RET 
                                 
 0181  3C 41                    ISLET2:	CMP	AL,LOW "A" 
 0183  72 03                    	JB	SHORT ISLETX	;TOO SMALL FOR LETTER 
 0185  3C 5B                    	CMP	AL,LOW OFFSET "Z"+1 
 0187  F5                       	CMC			;SET CARRY IF NOT LETTER 
 0188  C3                       ISLETX:	RET 
                                 
 0189                           CSEG	ENDS 
                                	END 

Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:36:18
 
MACLNG - MACRO LANGUAGE DRIVER                              Symbols-1
                                                             

Macros:

		N a m e			Lines

ACRLF  . . . . . . . . . . . . .  	   2
ADR  . . . . . . . . . . . . . .  	   1
CALLOS . . . . . . . . . . . . .  	   1
CHRGET . . . . . . . . . . . . .  	   1
COMPAR . . . . . . . . . . . . .  	   2
DBGBRK . . . . . . . . . . . . .  	   1
DC . . . . . . . . . . . . . . .  	   6
DJNZ . . . . . . . . . . . . . .  	   2
FSIGN  . . . . . . . . . . . . .  	   1
GETYPE . . . . . . . . . . . . .  	   1
INS86  . . . . . . . . . . . . .  	  13
INST . . . . . . . . . . . . . .  	   1
LDDR . . . . . . . . . . . . . .  	   8
LDIR . . . . . . . . . . . . . .  	   8
MOVRI  . . . . . . . . . . . . .  	   6
OUTCHR . . . . . . . . . . . . .  	   1
POPR . . . . . . . . . . . . . .  	   2
PUSHM  . . . . . . . . . . . . .  	   5
PUSHR  . . . . . . . . . . . . .  	   2
SYNCHK . . . . . . . . . . . . .  	   2

Segments and Groups:

                N a m e         	Size	Align	Combine Class

CSEG . . . . . . . . . . . . . .  	0189	PARA	PUBLIC	'CODESG'
DSEG . . . . . . . . . . . . . .  	0000	PARA	PUBLIC	'DATASG'

Symbols:            

                N a m e         	Type	Value	Attr         

ALPCPM . . . . . . . . . . . . .  	Number	0000	
ALTAIR . . . . . . . . . . . . .  	Number	0000	
ANSI . . . . . . . . . . . . . .  	Number	0001	

BASDEB . . . . . . . . . . . . .  	Number	0000	
BEEPSW . . . . . . . . . . . . .  	Number	0001	
BINCSW . . . . . . . . . . . . .  	Number	0000	
BLODSW . . . . . . . . . . . . .  	Number	0001	
BUF  . . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
BUFLEN . . . . . . . . . . . . .  	Number	00FF	

CASSW  . . . . . . . . . . . . .  	Number	0000	
CHSEAT . . . . . . . . . . . . .  	Number	0001	
CLMWID . . . . . . . . . . . . .  	Number	000E	
CMPUTN . . . . . . . . . . . . .  	Number	0000	
COMMNT . . . . . . . . . . . . .  	Number	0000	
CONSSW . . . . . . . . . . . . .  	Number	0001	
CONTO  . . . . . . . . . . . . .  	Number	000F	
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:36:18
 
MACLNG - MACRO LANGUAGE DRIVER                              Symbols-2
                                                             

CONTRO . . . . . . . . . . . . .  	Number	0001	
CPM  . . . . . . . . . . . . . .  	Number	0001	
CPM110 . . . . . . . . . . . . .  	Number	0000	
CPM2 . . . . . . . . . . . . . .  	Number	0001	
CPM86  . . . . . . . . . . . . .  	Number	0000	
CPMA75 . . . . . . . . . . . . .  	Number	0000	
CPMADD . . . . . . . . . . . . .  	Number	0000	
CPMCON . . . . . . . . . . . . .  	Number	0000	
CPMLIF . . . . . . . . . . . . .  	Number	0000	
CPMMDS . . . . . . . . . . . . .  	Number	0000	
CPMPER . . . . . . . . . . . . .  	Number	0000	
CPMRSH . . . . . . . . . . . . .  	Number	0000	
CPMSBC . . . . . . . . . . . . .  	Number	0000	
CPMSER . . . . . . . . . . . . .  	Number	0000	
CRONLY . . . . . . . . . . . . .  	Number	0000	

DATPSC . . . . . . . . . . . . .  	Number	0080	
DBLCHR . . . . . . . . . . . . .  	Number	0000	
DBLTRN . . . . . . . . . . . . .  	Number	0000	
DEBUG  . . . . . . . . . . . . .  	Text  		
DECFET . . . . . . . . . . . . .  	L NEAR	00B7	CSEG	Global
DISK . . . . . . . . . . . . . .  	Number	0001	
DMC  . . . . . . . . . . . . . .  	Number	0000	
DOS  . . . . . . . . . . . . . .  	Number	0000	
DRVPOS . . . . . . . . . . . . .  	Number	0000	
DUPONT . . . . . . . . . . . . .  	Number	0000	
DYNCOM . . . . . . . . . . . . .  	Number	0001	

EDIT80 . . . . . . . . . . . . .  	Number	0000	
ESCCTL . . . . . . . . . . . . .  	Number	0000	
EXIDY  . . . . . . . . . . . . .  	Number	0000	

FAST . . . . . . . . . . . . . .  	Number	0001	
FCERR  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FETCH2 . . . . . . . . . . . . .  	L NEAR	0095	CSEG
FETCHR . . . . . . . . . . . . .  	L NEAR	0094	CSEG	Global
FETCHZ . . . . . . . . . . . . .  	L NEAR	008E	CSEG	Global
FIVDSK . . . . . . . . . . . . .  	Number	0001	
FIVEO  . . . . . . . . . . . . .  	Number	0001	
FIVLPT . . . . . . . . . . . . .  	Number	0001	
FIVMEM . . . . . . . . . . . . .  	Number	0001	
FKEYON . . . . . . . . . . . . .  	Number	0001	
FRCINT . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FRESTR . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FRMEVL . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External

GENBIN . . . . . . . . . . . . .  	Number	0001	
GENDSK . . . . . . . . . . . . .  	Number	0000	
GENIO  . . . . . . . . . . . . .  	Number	0001	
GESBC  . . . . . . . . . . . . .  	Number	0000	
GETBCD . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
GETSTK . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
GIO86  . . . . . . . . . . . . .  	Number	0001	
GOFCER . . . . . . . . . . . . .  	L NEAR	0045	CSEG
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:36:18
 
MACLNG - MACRO LANGUAGE DRIVER                              Symbols-3
                                                             

GW . . . . . . . . . . . . . . .  	Number	0001	
GWCASS . . . . . . . . . . . . .  	Number	0000	
GWDBUG . . . . . . . . . . . . .  	Number	0000	

HEATH  . . . . . . . . . . . . .  	Number	0000	
HEXOCT . . . . . . . . . . . . .  	Number	0001	
HGHBIT . . . . . . . . . . . . .  	Number	0001	

I8086  . . . . . . . . . . . . .  	Number	0001	
I8251  . . . . . . . . . . . . .  	Number	0000	
IBMLIK . . . . . . . . . . . . .  	Number	0001	
IBMTOK . . . . . . . . . . . . .  	Number	0001	
INKEYF . . . . . . . . . . . . .  	Number	0001	
INLADD . . . . . . . . . . . . .  	Number	0000	
INSTSW . . . . . . . . . . . . .  	Number	0000	
INTEL  . . . . . . . . . . . . .  	Number	0000	
INTFHW . . . . . . . . . . . . .  	Number	0000	
INTFSW . . . . . . . . . . . . .  	Number	0000	
INTLEC . . . . . . . . . . . . .  	Number	0000	
INTROM . . . . . . . . . . . . .  	Number	0000	
ISC  . . . . . . . . . . . . . .  	Number	0000	
ISCMD3 . . . . . . . . . . . . .  	L NEAR	0086	CSEG
ISIS . . . . . . . . . . . . . .  	Number	0000	
ISLET2 . . . . . . . . . . . . .  	L NEAR	0181	CSEG
ISLETX . . . . . . . . . . . . .  	L NEAR	0188	CSEG
ISVAR  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External

JISKTN . . . . . . . . . . . . .  	Number	0000	

KANABS . . . . . . . . . . . . .  	Number	0000	
KANJFN . . . . . . . . . . . . .  	Number	0000	
KEYSTA . . . . . . . . . . . . .  	Number	0000	
KILLER . . . . . . . . . . . . .  	Number	0000	

LABKEY . . . . . . . . . . . . .  	Number	0001	
LEN2 . . . . . . . . . . . . . .  	Number	0001	
LEN3 . . . . . . . . . . . . . .  	Number	0001	
LENGTH . . . . . . . . . . . . .  	Number	0002	
LINLN  . . . . . . . . . . . . .  	Number	0050	
LISTEN . . . . . . . . . . . . .  	Number	0001	
LNGVAR . . . . . . . . . . . . .  	Number	0001	
LOKHED . . . . . . . . . . . . .  	Number	0000	
LONGI  . . . . . . . . . . . . .  	Number	0000	
LPT3 . . . . . . . . . . . . . .  	Number	0000	
LPTLEN . . . . . . . . . . . . .  	Number	0084	
LPTSW  . . . . . . . . . . . . .  	Number	0001	

MACLNG . . . . . . . . . . . . .  	L NEAR	0000	CSEG	Global
MCLLEN . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
MCLNEW . . . . . . . . . . . . .  	L NEAR	000D	CSEG
MCLOOP . . . . . . . . . . . . .  	L NEAR	0023	CSEG
MCLPTR . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
MCLSCN . . . . . . . . . . . . .  	L NEAR	0033	CSEG
MCLTAB . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:36:18
 
MACLNG - MACRO LANGUAGE DRIVER                              Symbols-4
                                                             

MCLXEQ . . . . . . . . . . . . .  	L NEAR	0167	CSEG	Global
MDS  . . . . . . . . . . . . . .  	Number	0000	
MDSISS . . . . . . . . . . . . .  	Number	0000	
MEMIMG . . . . . . . . . . . . .  	Number	0001	
MISCMD . . . . . . . . . . . . .  	L NEAR	0053	CSEG
MNOARG . . . . . . . . . . . . .  	L NEAR	0088	CSEG
MOSTEK . . . . . . . . . . . . .  	Number	0000	
MSCNLP . . . . . . . . . . . . .  	L NEAR	0040	CSEG
MULSEG . . . . . . . . . . . . .  	Number	0001	

NAMLEN . . . . . . . . . . . . .  	Number	0028	
NASCOM . . . . . . . . . . . . .  	Number	0000	
NATROM . . . . . . . . . . . . .  	Number	0000	
NBANKS . . . . . . . . . . . . .  	Number	0001	
NCRBAS . . . . . . . . . . . . .  	Number	0000	
NCRCAS . . . . . . . . . . . . .  	Number	0000	
NCRDEB . . . . . . . . . . . . .  	Number	0000	
NCRELS . . . . . . . . . . . . .  	Number	0000	
NCRLPT . . . . . . . . . . . . .  	Number	0001	
NECBAS . . . . . . . . . . . . .  	Number	0000	
NEGD . . . . . . . . . . . . . .  	L NEAR	017E	CSEG	Global
NMCOMT . . . . . . . . . . . . .  	Number	0002	
NMKEYF . . . . . . . . . . . . .  	Number	000A	
NMKEYT . . . . . . . . . . . . .  	Number	000E	
NMLINE . . . . . . . . . . . . .  	Number	0019	
NMLPT  . . . . . . . . . . . . .  	Number	0003	
NMPENT . . . . . . . . . . . . .  	Number	0001	
NMSTRT . . . . . . . . . . . . .  	Number	0004	
NOATDL . . . . . . . . . . . . .  	Number	0000	
NOCTLA . . . . . . . . . . . . .  	Number	0000	
NODOT  . . . . . . . . . . . . .  	Number	0000	
NOEDIT . . . . . . . . . . . . .  	Number	0000	
NOIOS  . . . . . . . . . . . . .  	Number	0000	
NONULL . . . . . . . . . . . . .  	Number	0000	
NOPEKS . . . . . . . . . . . . .  	Number	0000	
NOROMP . . . . . . . . . . . . .  	Number	0000	
NORUBT . . . . . . . . . . . . .  	Number	0000	
NOUSR  . . . . . . . . . . . . .  	Number	0000	
NOVARP . . . . . . . . . . . . .  	Number	0000	
NUML01 . . . . . . . . . . . . .  	L NEAR	00F9	CSEG
NUMLEV . . . . . . . . . . . . .  	Number	006E	
NUMLOP . . . . . . . . . . . . .  	L NEAR	00E3	CSEG
NUMTMP . . . . . . . . . . . . .  	Number	000A	
NUMTRP . . . . . . . . . . . . .  	Number	0015	

OEMRAM . . . . . . . . . . . . .  	Number	0000	
ONTEL  . . . . . . . . . . . . .  	Number	0000	

PALSIZ . . . . . . . . . . . . .  	Number	0000	
PANBAS . . . . . . . . . . . . .  	Number	0000	
PCS  . . . . . . . . . . . . . .  	Number	0000	
PLAYSW . . . . . . . . . . . . .  	Number	0001	
POPTRT . . . . . . . . . . . . .  	L NEAR	00B5	CSEG
PURE . . . . . . . . . . . . . .  	Number	0001	
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:36:18
 
MACLNG - MACRO LANGUAGE DRIVER                              Symbols-5
                                                             


QUEUE  . . . . . . . . . . . . .  	Number	0001	

REALIO . . . . . . . . . . . . .  	Number	0001	
RETVAR . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
RMX  . . . . . . . . . . . . . .  	Number	0000	
RSHACK . . . . . . . . . . . . .  	Number	0000	
RSTLES . . . . . . . . . . . . .  	Number	0001	

SBC  . . . . . . . . . . . . . .  	Number	0000	
SBC86  . . . . . . . . . . . . .  	Number	0000	
SCNFC  . . . . . . . . . . . . .  	L NEAR	0157	CSEG
SCNV2  . . . . . . . . . . . . .  	L NEAR	015A	CSEG
SCNVAR . . . . . . . . . . . . .  	L NEAR	0113	CSEG
SCNVLP . . . . . . . . . . . . .  	L NEAR	0148	CSEG
SCNVR2 . . . . . . . . . . . . .  	L NEAR	013A	CSEG
SCP  . . . . . . . . . . . . . .  	Number	0001	
SCRN86 . . . . . . . . . . . . .  	Number	0001	
SCRNIO . . . . . . . . . . . . .  	Number	0001	
SCROLT . . . . . . . . . . . . .  	Number	0001	
SGSATS . . . . . . . . . . . . .  	Number	0000	
SHORTJ . . . . . . . . . . . . .  	Number	0001	
SHTCHN . . . . . . . . . . . . .  	Number	0000	
SHTERR . . . . . . . . . . . . .  	Number	0000	
SHTINS . . . . . . . . . . . . .  	Number	0000	
SHTLHM . . . . . . . . . . . . .  	Number	0000	
SHTLIN . . . . . . . . . . . . .  	Number	0000	
SHTPRO . . . . . . . . . . . . .  	Number	0000	
SHTREN . . . . . . . . . . . . .  	Number	0000	
SIXDIG . . . . . . . . . . . . .  	Number	0000	
SMALL  . . . . . . . . . . . . .  	Number	0000	
SPCDSK . . . . . . . . . . . . .  	Number	0000	
SPCNDS . . . . . . . . . . . . .  	Number	0000	
STRING . . . . . . . . . . . . .  	Number	0001	
STRSIZ . . . . . . . . . . . . .  	Number	0003	
SUPRSH . . . . . . . . . . . . .  	Number	0001	
SWAPSW . . . . . . . . . . . . .  	Number	0001	

TEK  . . . . . . . . . . . . . .  	Number	0000	
TIMSHR . . . . . . . . . . . . .  	Number	0000	
TRNCHR . . . . . . . . . . . . .  	Number	0000	
TRSER2 . . . . . . . . . . . . .  	Number	0000	
TRUANS . . . . . . . . . . . . .  	Number	0000	
TRUROM . . . . . . . . . . . . .  	Number	0001	
TSDISK . . . . . . . . . . . . .  	Number	0000	
TSHIBA . . . . . . . . . . . . .  	Number	0000	
TSLPT  . . . . . . . . . . . . .  	Number	0000	

VALSC2 . . . . . . . . . . . . .  	L NEAR	00E0	CSEG	Global
VALSC3 . . . . . . . . . . . . .  	L NEAR	00CB	CSEG
VALSCN . . . . . . . . . . . . .  	L NEAR	00C8	CSEG	Global
VALTYP . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
VARGET . . . . . . . . . . . . .  	L NEAR	015E	CSEG	Global
VSNAR0 . . . . . . . . . . . . .  	L NEAR	0084	CSEG
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:36:18
 
MACLNG - MACRO LANGUAGE DRIVER                              Symbols-6
                                                             

VSNARG . . . . . . . . . . . . .  	L NEAR	0081	CSEG

XTNSYS . . . . . . . . . . . . .  	Number	0000	

Z80  . . . . . . . . . . . . . .  	Number	0001	
Z80MAC . . . . . . . . . . . . .  	Number	0001	

??L000 . . . . . . . . . . . . .  	L NEAR	002F	CSEG
??L001 . . . . . . . . . . . . .  	L NEAR	004A	CSEG
??L002 . . . . . . . . . . . . .  	L NEAR	0073	CSEG
??L003 . . . . . . . . . . . . .  	L NEAR	007B	CSEG
??L004 . . . . . . . . . . . . .  	L NEAR	00D2	CSEG


    620 Source  Lines
    673 Total   Lines
    268 Symbols

  42336 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
