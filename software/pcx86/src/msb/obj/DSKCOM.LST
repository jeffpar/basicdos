Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:31:10
 
DSKCOM - - COMMON ROUTINES FOR DISK BASICS                  Page     1-1
                                                            

                                ; [ This translation created 10-Feb-83 by Versi
				on 4.3 ] 
                                 
 0008                           	.RADIX  8		; To be safe 
                                 
 0000                           CSEG	SEGMENT PUBLIC 'CODESG' 
                                	ASSUME  CS:CSEG 
                                 
                             C  INCLUDE	OEM.INC 
                             C  ; [ This translation created 10-Feb-83 by Versi
				on 4.3 ] 
                             C   
                             C  	PAGE	,132D 
                             C  	SUBTTL  Common file to produce 2-segment 8086 GW-CPM BASIC 
                             C   
                             C  	.SALL 
                             C   
 000A                        C  	.RADIX	10 
 = 0000                      C  	OEMRAM=0D 
                             C  ;Pascal program HFILE searches for the following line - DO NOT MODIFY 
                             C  ;** (VERSION SPECIFIC VALUES) ************************************************ 
 = 0019                      C  	NMLINE=25		;Max screen display text lines 
 = 0001                      C  	NBANKS=1		;Number of graphic planes 
 = 0000                      C  	PALSIZ=0		;Size of OEM color palette 
 = 0000                      C  	DBLCHR=0		;Editor support for KANJI chars 
 = 0000                      C  	KANABS=0		;Kana BASIC (Japanese JIS codes) 
 = 0000                      C  	KANJFN=0		;KANJI String Functions KPOS, KLEN .. 
 = 0000                      C  	JISKTN=0		;&K, &J constants (KANJI) 
 = 0001                      C  	SUPRSH=1		;1=super shift key feature 
 = 000A                      C  	NMKEYF=10		;number of function keys 
 = 000E                      C  	NMKEYT=14		;number of function key traps 
 = 0001                      C  	FKEYON=1		;yes=display function keys 
 = 0001                      C  	SCROLT=1		;Line 25 allocated for status only 
 = 0001                      C  	PLAYSW=1		;for PLAY statement 
 = 0001                      C  	BEEPSW=1		;for SOUND, BEEP statements 
 = 0003                      C  	NMLPT=3			;number of line printers 
 = 0001                      C  	CONSSW=1		;Device CONS: 
 = 0002                      C  	NMCOMT=2		;number of COMmunications ports 
 = 0001                      C  	NMPENT=1		;number of light pens 
 = 0004                      C  	NMSTRT=4		;number of joysticks 
 = 0000                      C  	GWCASS=0		;Cassette switch (CSAVE,CLOAD,MOTOR) 
 = 0001                      C  	IBMLIK=1		;IBM compatibility package 
 = 0001                      C  	IBMTOK=1		;IBM token compatibility 
 = 0001                      C  	DYNCOM=1		;Dynamic communication buffers 
                             C  ;** (END OF VERSION SPECIFIC VALUES) ***************************************** 
                             C  ;Pascal program HFILE searches for the previous line - DO NOT MODIFY 
                             C  ; 
 = 0015                      C  	NUMTRP=NMKEYT+NMCOMT+NMPENT+NMSTRT 
 = 0001                      C  	GW=1			;GW BASIC 
 = 0000                      C  	ESCCTL=0		;Escape Sequence processing in SCROUT 
 = 0000                      C  	GWDBUG=0		;DEBUG statement (TEST VERSIONS ONLY) 
                             C  				; Support is in BINTRP.MAC and GWSTS.MAC 
 = 0000                      C  	SIXDIG=0		;# of digits of accuracy assumed when formatting 
                             C  				;single precision numbers for output. 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:31:10
 
DSKCOM - - COMMON ROUTINES FOR DISK BASICS                  Page     1-2
Common file to produce 2-segment 8086 GW-CPM BASIC          

                             C  				; 0 := 7 digits 
                             C  				; 1 := 6 digits 
 = 0000                      C  	CASSW=0			;CASSETTE SWITCH 
 = 0001                      C  	LABKEY=1		;^T (LABEL) key capability 
 = 0001                      C  	HGHBIT=1		;8-bit characters (ASCII & Graphics) 
 = 0001                      C  	QUEUE=1			;Queued painting algorithm (vs. stack) 
 = 0001                      C  	GIO86=1			;BASIC-86 Generalized I/O 
 = 0001                      C  	SCRNIO=1		;Screen editor 
 = 0001                      C  	SCRN86=1		;8086 Screen editor 
 = 0001                      C  	I8086=1			;CROSS ASSEMBLING FOR 8086 
 = 0001                      C  	MULSEG=1		;MULTI-SEGMENT 8086 BASIC 
 = 0000                      C  	SMALL=0			;"SMALL" VERSION OF 8086 BASIC IF SET 
 = 0001                      C  	TRUROM=1 
 = 0000                      C  	SBC86=0			;SBC 86/02 BOARD? 
 = 0001                      C  	SHORTJ=1		;USE INTRA-SEGMENT SHORT JUMPS 
                             C  				;IN 8086 CODE 
 = 0001                      C  	LNGVAR=1		;LONG VARIABLE NAME SUPPORT (EXTENDED ONLY) 
 = 0000                      C  	SHTERR=0		;SHORT (2 CHAR) ERROR MESSAGES 
 = 0000                      C  	SHTINS=0		;INSTR IN NON-FAST LEN2 VERSIONS 
 = 0000                      C  	SHTLHM=0		;LEFT HAND SIDE MID IN NON FAST LEN2 VERSIONS 
 = 0000                      C  	SHTCHN=0		;ALLOW CHAIN IN NON-5.0 
 = 0000                      C  	SHTPRO=0		;ALLOW PROTECTED FILES IN NON-FIVDSK 
 = 0000                      C  	SHTLIN=0		;ALLOW LINE INPUT IN NON-EXTENDED NON-FAST 
 = 0000                      C  	SHTREN=0		;ALLOW RENUM IN NON-FST VERSIONS 
 = 0001                      C  	INKEYF=1		;ADDS INKEY$ FUNCTION 
 = 0000                      C  	NOIOS=0			;NO I/O STATMENTS (INP,OUT, WAIT) 
 = 0000                      C  	NOPEKS=0		;NO PEEK, POKE 
 = 0000                      C  	NOUSR=0			;NO USR 
 = 0000                      C  	NOCTLA=0		;NO CONTROL-A IN EXTENDED 
 = 0000                      C  	NORUBT=0		;NO RUBOUT 
 = 0000                      C  	NOROMP=0		;NO ROM PROGRAM FEATURE 
 = 0000                      C  	NOATDL=0		;NO AUTO DELETE IN NON-FAST EXTENDED 
 = 0000                      C  	NODOT=0			;NO DOT IN LEN2 
 = 0000                      C  	NOEDIT=0		;NO EDIT COMMAND 
 = 0000                      C  	CRONLY=0		;ONLY PUT OUT CR, NOT CRLF TO TERMINAL 
                             C  				;AND FILES 
 = 0000                      C  	NONULL=0		;NO NULL COMMAND, PUT OUT NULLS IN CRDO & OUTCH1 
 = 0000                      C  	NOVARP=0		;NO VARPTR FUNCTION 
 = 0001                      C  	FIVEO=1			;GENERATE VERSION WITH RELEASE 5.0 FEATURES 
 = 0001                      C  	FIVMEM=1 
 = 0001                      C  	ANSI=1 
 = 0001                      C  	FIVDSK=1		;5.0 NEW DSK CODE 
 = 0001                      C  	FIVLPT=1		;WIDTH LPRINT AND 255 FEATURE 
 = 0001                      C  	HEXOCT=1		;&H..., HEX$, &O..., OCT$ 
 = 0000                      C  	BINCSW=0		;&B..., BIN$ 
 = 0001                      C  	BLODSW=1		;BLOAD, BSAVE COMMANDS 
 = 0001                      C  	MEMIMG=1		;MEMORY IMAGE FILES 
 = 0001                      C  	GENBIN=1 
                             C   
 = 0000                      C  	TRUANS=0		;TRUE ANSI VERSION (STATIC SCAN, ON ERROR) 
 = 0000                      C  	COMMNT=0		;DONT WANT BIG COMMENT 
 = 0000                      C  	INTEL=0			;INTEL PROPRIETARY 
 = 0000                      C  	INTFSW=0		;INTEL FLOATING POINT 
 = 0000                      C  	INTFHW=0 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:31:10
 
DSKCOM - - COMMON ROUTINES FOR DISK BASICS                  Page     1-3
Common file to produce 2-segment 8086 GW-CPM BASIC          

 = 0000                      C  	RMX=0			;INTEL RMX VERSION 
 = 0000                      C  	EDIT80=0		;FOR EDIT80 I/O ROUTINES 
 = 0000                      C  	RSHACK=0 
 = 0000                      C  	INTLEC=0 
 = 0002                      C  	LENGTH=2		;  1 MEANS 8K, 2 MEANS 12K 
 = 0000                      C  	BASDEB=0		;WHETHER DBG WILL BE LOADED WITH BASIC 
 = 0001                      C  	RSTLES=1		;WHETHER BASIC WILL USE RST LOCATIONS 
                             C  				;TO MAKE ITSELF SMALLER & QUICKER 
 = 0001                      C  	REALIO=1		;WHETHER SIMULATE (=0) OR ON MACHINE (=1) 
 = 0001                      C  	GENIO=1			;USE G/P ROUTINES 
 = 0001                      C  	CHSEAT=1		;CHSNS eats chars 
 = 0000                      C  	GENDSK=0		;USE G/P DSK CODE 
 = 0000                      C  	LONGI=0			;WHETHER WE ASK "TERMINAL WIDTH?" 
                             C  				;AND WANT SIN-TAN-COS-ATN? 
 = 0000                      C  	INSTSW=0		;FOR INSTR INSTRUCTION 
 = 0001                      C  	SWAPSW=1		;FOR SWAP STATEMENT 
 = 0000                      C  	MDS=0			;FOR INTEL MDS SYSTEMS 
 = 0000                      C  	SBC=0			;FOR INTEL SINGLE BOARD COMPUTER 
                             C  				;1=SBC 80/10, 2=SBC 80/20 
 = 0001                      C  	PURE=1			;ON FOR PURE CODE 
 = 0000                      C  	KILLER=0		;FOR ROM VERSION THAT WONT RUN IN RAM 
 = 0000                      C  	INTROM=0 
 = 0001                      C  	LPTSW=1 
 = 0001                      C  	NCRLPT=1 
 = 0000                      C  	NCRCAS=0 
 = 0000                      C  	ISC=0			;FOR ISC VERSION 
 = 0000                      C  	LPT3=0			;THREE LPT DRIVER VERSION(QUME,OKIA,CENT) 
 = 0000                      C  	TSLPT=0 
                             C   
 = 0000                      C  	DOS=0			;ON TO GEN ROUTINES FOR DOS 
 = 0001                      C  	DISK=1			;FILE I/O FEATURES 
 = 0000                      C  	TIMSHR=0		;NO TIME-SHARING DISK 
 = 0000                      C  	TSDISK=0		;NO TIME-SHARING DISK FOR US 
 = 0000                      C  	SPCDSK=0		;MAY HAVE MM'S DISK CODE 
 = 0000                      C  	SPCNDS=0 
 = 0001                      C  	FAST=1			;CONSTANT COMPRESSION, RENUM & FRIENDS 
 = 0000                      C  	KEYSTA=0 
 = 0000                      C  	ISIS=0			;FOR VERSION TO RUN UNDER INTEL'S ISIS II DOS 
 = 0000                      C  	MDSISS=0		;FOR MDS VERSION THAT RUNS UNDER ISIS-II 
 = 0001                      C  	CPM=1			;FOR CPM compatible operating systems 
 = 0001                      C  	CPM2=1			;VERSION 2. CPM 
 = 0000                      C  	CPM86=0			;FOR CP/M-86 operating system 
 = 0001                      C  	SCP=1			;MS-DOS operating system 
 = 0000                      C  	CPMCON=0 
 = 0000                      C  	CPMSER=0		;CHECK CPM SERIAL #'S 
 = 0000                      C  	CPMADD=0		;FOR VERSION TO RUN ON ADDS CPM 
 = 0000                      C  	CPMA75=0		;FOR VERSION TO RUN ON ADDS SYSTEM 75 
                             C  				;CP/M 
 = 0000                      C  	CPMRSH=0		;FOR RADIO SHACK CPM/M 
 = 0000                      C  	CPM110=0		;FOR CP/M @1100 HEX (INTERALIA) 
 = 0000                      C  	CPMSBC=0		;FOR VERSION TO RUN ON SBC CP/M AT 4100H 
 = 0000                      C  	CPMPER=0		;FOR PERTEC VERSION OF CPM 
 = 0000                      C  	CPMLIF=0		;LIFEBOAT CP/M AT 4200H 
 = 0000                      C  	CPMMDS=0		;MOHAWK DATA SYSTEMS CP/M 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:31:10
 
DSKCOM - - COMMON ROUTINES FOR DISK BASICS                  Page     1-4
Common file to produce 2-segment 8086 GW-CPM BASIC          

 = 0000                      C  	CPMCON=0 
 = 0000                      C  	Z80=0 
 = 0001                      C  	DISK=1 
 = 0001                      C  	NCRLPT=1 
 = 0001                      C  	RSTLES=1 
 = 0000                      C  	DRVPOS=CPMADD 
 = 0000                      C  	TRNCHR=CPMADD 
 = 0000                      C  	INLADD=CPMADD 
 = 0001                      C  	LISTEN=1		;ON MEANS LISTEN FOR ^C 
 = 0001                      C  	LISTEN=1 
 = 0000                      C  	LEN2=0 
 = 0001                      C  	LEN2=1 
 = 0001                      C  	HEXOCT=1 
 = 0002                      C  	LENGTH=2 
 = 0001                      C  	RSTLES=1 
 = 0001                      C  	FIVLPT=1 
 = 0000                      C  	I8251=0			;THIS SWITCH IS USED FOR ROSEMOUNT VERSION 
 = 0001                      C  	CONTRO=1		;ALLOW ^O 
 = 0001                      C  	LEN3=LEN2 OR CASSW 
                             C   
                             C   
                             C   
 = 0001                      C  	STRING=1 
 = 0001                      C  	NCRLPT=1 
                             C   
                             C  ; *** OEM Switches which need to be defaulted to 0 
                             C  ; 
 = 0000                      C  	CMPUTN=0 
 = 0000                      C  	DUPONT=0 
 = 0000                      C  	EXIDY=0 
 = 0000                      C  	GESBC=0 
 = 0000                      C  	HEATH=0 
 = 0000                      C  	LOKHED=0 
 = 0000                      C  	MOSTEK=0 
 = 0000                      C  	TEK=0 
 = 0000                      C  	TRSER2=0 
 = 0000                      C  	NASCOM=0 
 = 0000                      C  	NATROM=0 
 = 0000                      C  	NCRBAS=0 
 = 0000                      C  	NCRDEB=0 
 = 0000                      C  	NCRDEB=0 
 = 0000                      C  	NCRELS=0 
 = 0000                      C  	ONTEL=0 
 = 0000                      C  	PCS=0 
 = 0000                      C  	SGSATS=0 
 = 0000                      C  	ALTAIR=0 
 = 0000                      C  	DMC=0 
 = 0000                      C  	PANBAS=0 
 = 0000                      C  	XTNSYS=0 
 = 0000                      C  	NECBAS=0 
                             C  ;******************************************************************* 
                             C  ; Z80 related macros 
                             C  ;******************************************************************* 
 = 0001                      C  	Z80=1			;FOR VERSION THAT RUNS ON BOTH 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:31:10
 
DSKCOM - - COMMON ROUTINES FOR DISK BASICS                  Page     1-5
Common file to produce 2-segment 8086 GW-CPM BASIC          

                             C  				;8080'S AND ZILOG Z-80'S 
 = 0001                      C  	Z80MAC=1		;USE 8080 MACROS INSTEAD OF Z80 INSTRUCTIONS 
 = 0000                      C  	Z80=0 
 = 0001                      C  	Z80=1 
                             C  LDIR	MACRO 
                             C  	MOV	WORD PTR A,WORD PTR M 
                             C  	STAX	D 
                             C  	INXF	H 
                             C  	INXF	D 
                             C  	DCXF	B 
                             C  	MOV	WORD PTR A,WORD PTR B 
                             C  	ORA	C 
                             C  	JNZ	_-8D 
                             C  ENDM 
                             C  LDDR	MACRO 
                             C  	MOV	WORD PTR A,WORD PTR M 
                             C  	STAX	D 
                             C  	DCXF	H 
                             C  	DCXF	D 
                             C  	DCXF	B 
                             C  	MOV	WORD PTR A,WORD PTR B 
                             C  	ORA	C 
                             C  	JNZ	_-8D 
                             C  ENDM 
                             C  DJNZ	MACRO	    DEST 
                             C  	DCR	B 
                             C  	JNZ	DEST 
                             C  ENDM 
                             C  ;******************************************************************* 
                             C  ; Define reset routines. 
                             C  ;******************************************************************* 
                             C  FSIGN	MACRO 
                             C  	CALL	SIGN 
                             C  ENDM 
                             C  PUSHM	MACRO 
                             C  	MOV	WORD PTR C,WORD PTR M 
                             C  	INX	H 
                             C  	MOV	WORD PTR B,WORD PTR M 
                             C  	INX	H 
                             C  	PUSH	WORD PTR B 
                             C  ENDM 
                             C  SYNCHK	MACRO	X 
                             C  	CALL	SYNCHR 
                             C  	DB	OFFSET X 
                             C  ENDM 
                             C  OUTCHR	MACRO 
                             C  	CALL	OUTDO 
                             C  ENDM 
                             C  CHRGET	MACRO 
                             C  	CALL	CHRGTR 
                             C  ENDM 
                             C  COMPAR	MACRO 
                             C  	CALL	DCOMPR 
                             C  ENDM 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:31:10
 
DSKCOM - - COMMON ROUTINES FOR DISK BASICS                  Page     1-6
Common file to produce 2-segment 8086 GW-CPM BASIC          

                             C  GETYPE	MACRO 
                             C  	CALL	GETYPR 
                             C  ENDM 
                             C  COMPAR	MACRO 
                             C  	DB	73O 
                             C  	DB	332O 
                             C   ENDM 
                             C  ACRLF	MACRO 
                             C  	DB	13D 
                             C  	DB	10D 
                             C  ENDM 
                             C  PUSHR	MACRO 
                             C  	PUSH	WORD PTR D 
                             C  	PUSH	WORD PTR B 
                             C  ENDM 
                             C  POPR	MACRO 
                             C  	POP	WORD PTR B 
                             C  	POP	WORD PTR D 
                             C  ENDM 
                             C  MOVRI	MACRO	B,C,D,E 
                             C  	DB	1O		; "LXI  B" 
                             C  	DB	OFFSET C 
                             C  	DB	OFFSET B 
                             C  	DB	21O		; "LXI  D" 
                             C  	DB	OFFSET E 
                             C  	DB	OFFSET D 
                             C  ENDM 
                             C  INST	MACRO	X 
                             C  	DB	OX 
                             C  ENDM 
                             C   
                             C   
 = 000F                      C  	CONTO=15		;CHARACTER TO SUPRESS OUTPUT (USUALLY CONTROL-O) 
 = 0000                      C  	DBLTRN=0		;FOR DOUBLE PRECISION TRANSCENDENTALS 
                             C   
 = 000E                      C  	CLMWID=14D		;MAKE COMMA COLUMNS FOURTEEN CHARACTERS 
 = 0080                      C  	DATPSC=128D		;NUMBER OF DATA BYTES IN DISK SECTOR 
 = 0050                      C  	LINLN=80D		;TERMINAL LINE LENGTH 
 = 0084                      C  	LPTLEN=132D 
 = 00FF                      C  	BUFLEN=255		;LONG LINES 
 = 0028                      C  	NAMLEN=40D		;MAXIMUM LENGTH NAME -- 3 TO 127 
                             C   
 = 006E                      C  	NUMLEV=110D		;NUMBER OF STACK LEVELS RESERVED 
                             C  				;BY AN EXPLICIT CALL TO GETSTK 
 = 0004                      C  	STRSIZ=4 
 = 0003                      C  	STRSIZ=3 
 = 0003                      C  	NUMTMP=3		;NUMBER OF STRING TEMPORARIES 
 = 000A                      C  	NUMTMP=10 
                             C   
 0008                        C  	.RADIX	8 
                             C  ; 
                             C  ; Useful macros 
                             C  ; 
                             C   
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:31:10
 
DSKCOM - - COMMON ROUTINES FOR DISK BASICS                  Page     1-7
Common file to produce 2-segment 8086 GW-CPM BASIC          

                             C  ACRLF   MACRO 
                             C          DB      13D 
                             C          DB      10D 
                             C  ENDM 
                             C   
                             C  INS86   MACRO   A,B,C,D 
                             C          DB      A&O 
                             C  IFNB    <B> 
                             C          DB      B&O 
                             C  ENDIF 
                             C  IFNB    <D> 
                             C          DB      C&O 
                             C          DB      D&O 
                             C  ENDIF 
                             C  IFB     <D> 
                             C   IFNB   <C> 
                             C          DW      C 
                             C    ENDIF 
                             C   ENDIF 
                             C  ENDM 
                             C   
                             C  CALLOS  MACRO 
                             C          CALL    CPMENT 
                             C  ENDM 
                             C   
                             C  POPR    MACRO 
                             C          POP     CX 
                             C          POP     DX 
                             C  ENDM 
                             C   
                             C  ADR     MACRO   X 
                             C          DW      X 
                             C  ENDM 
                             C   
                             C  DC      MACRO   ARG 
                             C          IRPC    ZZ,<ARG> 
                             C              IFDIF       <ZZ>,<">
                             C                  DB      "&ZZ&" 
                             C                  _A="&ZZ&" 
                             C              ENDIF 
                             C          ENDM 
                             C  ENDM 
                             C  ; 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:31:10
 
DSKCOM - - COMMON ROUTINES FOR DISK BASICS                  Page     1-8
Common file to produce 2-segment 8086 GW-CPM BASIC          

                             C          PAGE 
                             C   
                             C  DBGBRK	MACRO 
                             C  	DB	0CDh,06h,0CCh 
                             C  	ENDM 
                                 
                                 
                                	TITLE   DSKCOM - - COMMON ROUTINES FOR DISK BASICS 
                                 
 = 0000                         ALPCPM=0 
 = 0000                         MELCO=0 
 = 0000                         MODEL3=0 
                                 
                                 
                                 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG'		; Data Segment 
                                	ASSUME DS:DSEG 
                                	EXTRN	CURLIN:WORD,DSCTMP:WORD,PTRFIL:WORD,FRETOP:WORD 
                                	EXTRN	SAVSTK:WORD,TXTTAB:WORD,VALTYP:WORD,VARTAB:WORD 
                                	EXTRN	BUF:WORD 
                                	EXTRN	DIRTMP:WORD 
 0000                           DSEG	ENDS			;End of data segment externals 
                                 
                                				; Code Segment ( terminated by END at bottom of file ) 
                                 
                                	EXTRN	CLSFIL:NEAR,CONINT:NEAR,DERBFN:NEAR,DERRPE:NEAR,ERROR:NEAR 
                                	EXTRN	FILOU3:NEAR,CHRGTR:NEAR 
                                	EXTRN	INDSKC:NEAR,PRGFIL:NEAR,SCRTCH:NEAR,SNERR:NEAR 
                                	EXTRN	STRLT3:NEAR,DERFOV:NEAR,DERBFM:NEAR,DOCNVF:NEAR,FCERR:NEAR 
                                	EXTRN	FINBCK:NEAR,FINPRT:NEAR,FRCSTR:NEAR,FRESTR:NEAR 
                                	EXTRN	FRMEVL:NEAR,GETBYT:NEAR,GETSPA:NEAR,GTBYTC:NEAR,GTMPRT:NEAR 
                                	EXTRN	INCHRI:NEAR 
                                	EXTRN	LINKER:NEAR,LIST:NEAR,MAIN:NEAR,NEWSTT:NEAR,OMERR:NEAR 
                                	EXTRN	PTRGET:NEAR,PUTNEW:NEAR,READY:NEAR,RUNC:NEAR 
                                	EXTRN	VMOVFM:NEAR,VMOVMF:NEAR,STRINI:NEAR 
                                 
                                	EXTRN	FRMEQL:NEAR 
                                	EXTRN	ENDCON:NEAR,GONE:NEAR 
                                	EXTRN	DOASIG:NEAR,ERRFDR:NEAR,FIN:NEAR 
                                	EXTRN	SCCPTR:NEAR 
                                 
                                	EXTRN	GETYPR:NEAR,SYNCHR:NEAR,DCOMPR:NEAR 
                                	PUBLIC	FIELD,PRGFLI 
                                	PUBLIC	FILIND 
                                	PUBLIC	MKI$,MKS$,MKD$,CVI,CVS,CVD 
                                	PUBLIC	DLINE,PRGFL2,LRUN,LOAD,PRGFIN,MERGE,SAVE 
                                	PUBLIC	OKGETM 
                                	PUBLIC	RSET,LSET 
                                 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	PROFLG:WORD 
 0000                           DSEG	ENDS 
                                 
                             C  	INCLUDE	GIO86U.INC 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:31:10
 
DSKCOM - - COMMON ROUTINES FOR DISK BASICS                  Page     1-9
Common file to produce 2-segment 8086 GW-CPM BASIC          

                             C  ; [ This translation created 12-Jan-83 by Version 4.3 ] 
                             C   
                             C  	SUBTTL GIO86U - Device Independent I/O Constants and Macros 
                             C   
                             C  COMMENT	* 
                             C   
                             C  --------- --- ---- -- --------- 
                             C  COPYRIGHT (C) 1982 BY MICROSOFT 
                             C  --------- --- ---- -- --------- 
                             C   
                             C          Programmer: Tom Corbett,  Microsoft Inc. 
                             C   
                             C          * 
                             C   
                             C  ROFFST	MACRO	NAME,SIZE	;define record macro 
                             C  	NAME=_OFFST 
                             C  	_OFFST=_OFFST+SIZE 
                             C  ENDM  
                             C   
                             C   
                             C  ;ASCII character definitions 
                             C  ; 
 = 0003                      C  	ASCCTC=3D		;CTL-C 
 = 0008                      C  	ASCBS=8D		;backspace 
 = 0009                      C  	ASCTAB=9D		;Tab 
 = 000A                      C  	ASCLF=10D		;Line Feed 
 = 000D                      C  	ASCCR=13D		;Carriage Return 
 = 0013                      C  	ASCCTS=19D		;CTL-S 
 = 001A                      C  	ASCCTZ=26D		;Control Z (End-of-file for some devices) 
 = 001B                      C  	ASCESC=27D		;Escape 
 = 0020                      C  	ASCSPC=32D		;Space 
                             C   
                             C  ;Special File ID's (identified by 1st byte of file) 
                             C  ; 
 = 00FF                      C  	BINFID=255D		;files created by SAVE "fn" 
 = 00FE                      C  	PROFID=254D		;files created by SAVE "fn",P 
 = 00FD                      C  	BSVFID=253D		;files created by BSAVE "fn" 
                             C   
                             C  ;Generalized I/O Function Codes: 
                             C  ; 
 = 0000                      C  	_OFFST=0		;initialize count 
                             C  	ROFFST	G_EOF,2		;test EOF for file opened to this device 
                             C  	ROFFST	G_LOC,2		;LOC 
                             C  	ROFFST	G_LOF,2		;LOF 
                             C  	ROFFST	G_CLS,2		;perform special CLOSE functions for this device 
                             C  	ROFFST	G_SWD,2		;set device width 
                             C  	ROFFST	G_RND,2		;GET/PUT random record from/to this device 
                             C  	ROFFST	G_OPN,2		;perform special OPEN functions for this device 
                             C  	ROFFST	G_SIN,2		;input 1 byte from file opened on this device 
                             C  	ROFFST	G_SOT,2		;output 1 byte to file opened on this device 
                             C  	ROFFST	G_GPS,2		;POS 
                             C  	ROFFST	G_GWD,2		;get device width 
                             C  	ROFFST	G_SCW,2		;set device column width 
                             C  	ROFFST	G_GCW,2		;get device column width 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:31:10
 
DSKCOM - - COMMON ROUTINES FOR DISK BASICS                  Page     1-10
GIO86U - Device Independent I/O Constants and Macros        

                             C  	ROFFST	G_BIN,2		;block input from file opened on this device 
                             C  	ROFFST	G_BOT,2		;block output to file opened on this device 
                             C   
                             C   
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:31:10
 
DSKCOM - - COMMON ROUTINES FOR DISK BASICS                  Page     1-11
GIO86U - Device Independent I/O Constants and Macros        

                             C          PAGE 
                                 
 = 0000                         CPM86=0 
                             C  	INCLUDE	MSDOSU.INC 
                             C  ; [ This translation created 12-Jan-83 by Version 4.3 ] 
                             C   
                             C  	SUBTTL    MSDOSU - MS-DOS Constants and Data-Structure Definitions 
                             C   
                             C  COMMENT	* 
                             C   
                             C  --------- --- ---- -- --------- 
                             C  COPYRIGHT (C) 1982 BY MICROSOFT 
                             C  --------- --- ---- -- --------- 
                             C   
                             C  	Programmer: Tom Corbett,  Microsoft Inc. 
                             C   
                             C  	* 
                             C   
                             C  CALLOS	MACRO	FUNC 
                             C  IFNB	<FUNC>   
                             C  	MOV	AH,LOW OFFSET FUNC 
                             C  ENDIF  
                             C  	INT	33D		;MSDOS system call 
                             C  ENDM  
                             C   
                             C  ROFFST	MACRO	NAME,SIZE	;define record macro 
                             C  	NAME=_OFFST 
                             C  	_OFFST=_OFFST+SIZE 
                             C  ENDM  
                             C   
                             C   
                             C  ; MSDOS System Call codes 
                             C  ; 
 = 0005                      C  	C_PRTO=5D		;Printer output 
 = 0006                      C  	C_DCIO=6D		;Direct console I/O 
 = 000D                      C  	C_REST=13D		;INITIALIZE BDOS 
 = 000E                      C  	C_SDRV=14D		;SET CURRENTLY SELECTED DRIVE 
 = 000F                      C  	C_OPEN=15D 
 = 0010                      C  	C_CLOS=16D 
 = 0011                      C  	C_SEAR=17D		;SEARCH FOR FILE 
 = 0013                      C  	C_DELE=19D 
 = 0014                      C  	C_READ=20D 
 = 0016                      C  	C_MAKE=22D 
 = 0017                      C  	C_RENA=23D 
 = 0019                      C  	C_GDRV=25D		;GET CURRENTLY SELECTED DRIVE 
 = 001A                      C  	C_BUFF=26D		;SET DMA ADDRESS 
 = 0021                      C  	C_RNDR=33D		;Random read 
 = 0022                      C  	C_RNDW=34D		;Random write 
 = 0027                      C  	C_RBR=39D		;Random Block Read 
 = 0029                      C  	C_PARS=41D		;Parse Filename 
                             C   
 = 000B                      C  	FNAML=11D		;number of bytes in Filename with extension 
 = 0080                      C  	DATPSC=128D		;bytes per sector 
 = 0026                      C  	FCBSIZ=38D		;File Control Block size 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:31:10
 
DSKCOM - - COMMON ROUTINES FOR DISK BASICS                  Page     1-12
MSDOSU - MS-DOS Constants and Data-Structure Definitions    

                             C   
                             C  ;MS-DOS FILE-DATA-BLOCK Record Definition 
                             C  ; 
 = 0000                      C  	_OFFST=0		;initialize count 
                             C  	ROFFST	F_NUL1,1	;not used by basic interpreter 
                             C  	ROFFST	F_NUM,1		;file number 0..255 
                             C  	ROFFST	F_NUL2,2	;not used by basic interpreter 
                             C  	ROFFST	F_NEXT,2	;thread for linked list, [MEMSIZ]=end 
                             C  	ROFFST	F_MODE,1	;file mode: 
 = 0001                      C  	MD_SQI=1D		;sequential input 
 = 0002                      C  	MD_SQO=2D		;sequential output 
 = 0004                      C  	MD_RND=4D		;random 
 = 0008                      C  	MD_APP=8D		;append 
                             C  	ROFFST	F_FCB,FCBSIZ	;File Control Block: used to communicate with OS 
                             C  	ROFFST	F_CLOC,2	;for seq files: num sectors read/written   (LOCOFS) 
                             C  				;for rnd files: last record number + 1 
                             C  	ROFFST	F_ORCT,1	;"Original Byte Count"                     (ORNOFS) 
                             C  				;for seq input: #bytes in sector when read 
                             C  				;for seq output: #bytes in output sector 
                             C  				;for random files: bytes per sector 
                             C  	ROFFST	F_BREM,1	;number of bytes till end-of-buffer        (NMLOFS) 
                             C  	ROFFST	F_CODE,1	;file encoding: 
 = 0000                      C  	FC_ASC=0		;Ascii SAVE, Data files 
 = 0001                      C  	FC_BIN=1		;binary file (BSAVE, binary SAVE) 
                             C  	ROFFST	F_BAKC,1	;holds next sequential input when F.FLBS.FL.BKC is true 
                             C  	ROFFST	F_NUL3,1	;not used by basic interpreter 
                             C  	ROFFST	F_DEV,1		;Device number                             (FL.DSK) 
                             C  	ROFFST	F_WID,1		;File width 
                             C  	ROFFST	F_NUL4,1	;not used by basic interpreter 
                             C  	ROFFST	F_FLGS,1	;flags 
 = 0080                      C  	FL_BKC=200O		;when true, F.BAKC contains next sequential input 
                             C  	ROFFST	F_POS,1		;Current column position                   (FL.OPS) 
                             C  	ROFFST	FDBSIZ,0	;size of device independent part of FDB 
                             C  				;device dependant FDB entries start here 
                             C   
                             C  	ROFFST	DATOFS,DATPSC	;Operating System interface buffer 
                             C  	ROFFST	FD_SIZ,2	;variable record length for random files 
                             C  	ROFFST	FD_PHY,2	;current physical record number 
                             C  	ROFFST	FD_LOG,2	;current logical record number 
                             C  	ROFFST	F_NUL5,1	;Future use 
                             C  	ROFFST	FD_OPS,2	;current output position for sequential I/O 
                             C  	ROFFST	FD_DAT,0	;field buffer of random file 
                             C   
                             C  ; OFFSETS INTO MSDOS FCB 
                             C  ; 
 = 0007                      C  	FCB_DV=F_FCB+0D		;DRIVE (0=default, 1=A:, 2=B:, ...) 
 = 0008                      C  	FCB_FN=F_FCB+1D		;FILE NAME 
 = 0010                      C  	FCB_FT=F_FCB+9D		;EXTENSION 
 = 0013                      C  	FCB_EX=F_FCB+12D	;FILE EXTENT (identifies block of 128 logical records) 
 = 0015                      C  	FCB_RC=F_FCB+14D	;RECORD SIZE 
 = 0017                      C  	FCB_FS=F_FCB+16D	;FILE SIZE IN BYTES 
 = 001B                      C  	FCB_DT=F_FCB+20D	;Date of last write to file 
 = 001D                      C  	FCB_DT=F_FCB+22D	;Time of last write to file 
 = 0027                      C  	FCB_NR=F_FCB+32D	;NEXT RECORD NUMBER 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:31:10
 
DSKCOM - - COMMON ROUTINES FOR DISK BASICS                  Page     1-13
MSDOSU - MS-DOS Constants and Data-Structure Definitions    

 = 0028                      C  	FCB_RN=F_FCB+33D	;CP/M 2.x Random Record Number 
                             C   
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:31:10
 
DSKCOM - - COMMON ROUTINES FOR DISK BASICS                  Page     1-14
MSDOSU - MS-DOS Constants and Data-Structure Definitions    

                             C          PAGE 
                                 
 = 0030                         	NMLOFS=F_BREM 
                                 
 000A                           	.RADIX	10 
                                COMMENT	% REVISION HISTORY 
                                4/23/78 PGA     ALLOW # ON CLOSE 
                                 
                                8/6/79  PGA     IF ^C ON MBASIC FOO, DONT RETURN TO SYSTEM. SEE 'NOTINI' 
                                6/27/80 PGA     FIX INPUT#1,D# SO IT USES FINDBL INSTEAD OF FIN 
                                				AND THUS AVOIDS LOSING SIGNIFICANCE. 
                                 
                                % 
                                 
                                	SUBTTL FILINP AND FILGET -- SCAN A FILE NUMBER AND SETUP PTRFIL 
                                 
                                	EXTRN	FILINP:NEAR,FILSCN:NEAR,FILSET:NEAR 
                                 
                                 
                                	SUBTTL FILSCN, FILFRM, AND FILIDX 
                                 
                                	SUBTTL  Conversion Routines 
 0000  B0 02                    MKI$:	MOV	AL,LOW 2	;VALUE TYPE FOR INTEGER AND NUMBER 
                                				;OF CHARACTERS RESULT WILL NEED 
 0002  B9                       	DB	271O	; SKIP	;SKIP NEXT TWO BYTES WITH "LXI  B," 
 0003  B0 04                    MKS$:	MOV	AL,LOW 4	;VALUE TYPE OF SINGLE PRECISION 
 0005  B9                       	DB	271O	; SKIP	;SKIP NEXT TWO BYTES 
 0006  B0 08                    MKD$:	MOV	AL,LOW 8	;VALUE TYPE OF DOUBLE-PRECISION 
 0008  50                       	PUSH	AX		;SAVE THE NUMBER OF BYTES OF 
                                				;STRING SPACE WE NEED 
 0009  E8 0000 E                	CALL	DOCNVF		;CONVERT FAC TO PROPER TYPE 
 000C  58                       	POP	AX		;GET THE NUMBER OF BYTES NEEDED 
 000D  E8 0000 E                	CALL	STRINI		;GET A PLACE FOR THE STRING DATA 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	DSCPTR:WORD 
 0000                           DSEG	ENDS 
 0010  8B 1E 0000 E             	MOV	BX,DSCPTR	;POINT TO THE PLACE TO STORE THE DATA 
 0014  E8 0000 E                	CALL	VMOVMF		;MOVE THE FAC VALUE INTO THE STRING CREATION 
 0017  E9 0000 E                	JMP	FINBCK 
                                 
 001A  B0 01                    CVI:	MOV	AL,LOW 1	;SET [A] TO BE VALTYP-1 
 001C  B9                       	DB	271O	; SKIP	;SKIP THE NEXT TWO BYTES WITH "LXI B," 
 001D  B0 03                    CVS:	MOV	AL,LOW 3	;ALSO SET [A] TO NUMBER OF CHARACTERS REQUIRED -1 
 001F  B9                       	DB	271O	; SKIP	;SKIP THE NEXT TWO BYTES 
 0020  B0 07                    CVD:	MOV	AL,LOW 7	;DOUBLE PRECISION VALUE TYPE -1 
 0022  50                       	PUSH	AX		;SAVE THE VALTYP 
 0023  E8 0000 E                	CALL	FRESTR		;MAKE SURE THE ARGUMENT IS A STRING 
                                				;AND GET A POINTER TO THE DESCRIPTOR 
 0026  58                       	POP	AX		;GET BACK NUMBER OF CHARACTERS REQUIRED-1 
 0027  3A 07                    	CMP	AL,BYTE PTR [BX]	;MAKE SURE THE STRING IS LONGER THAN THAT 
 0029  72 03                    	JNAE	SHORT ??L000 
 002B  E9 0000 E                	JMP	FCERR		;IF NOT, "ILLEGAL FUNCTION CALL" 
 002E                           ??L000: 
 002E  FE C0                    	INC	AL		;[A]=TRUE VALUE TYPE 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:31:10
 
DSKCOM - - COMMON ROUTINES FOR DISK BASICS                  Page     1-15
Conversion Routines                                         

 0030  A2 0000 E                	MOV	BYTE PTR VALTYP,AL	;SETUP VALUE TYPE FOR MOVE 
 0033  43                       	INC	BX 
 0034  8B 1F                    	MOV	BX,[BX]		;[H,L]=POINTER AT STRING DATA 
                                				;AND FOR IDENTIFICATION 
 0036  E9 0000 E                	JMP	VMOVFM 
                                 
                                 
                                	SUBTTL  Read Items From A Sequential File 
                                 
 0039                           FILIND: 
 0039  E8 0000 E                	CALL	GETYPR		;SEE IF INPUT IS STRING OR NUMBER 
 003C  B9 0000 E                	MOV	CX,OFFSET DOASIG	;RETURN ADDRESS TO SETUP [FAC] 
 = 2C20                         	CON1=0+(44*256)+32 
 003F  BA 2C20                  	MOV	DX,OFFSET CON1	;SETUP TERMINATORS SPACE AND COMMA 
 0042  75 1B                    	JNZ	SHORT INPDOR	;IF NUMERIC, GO READ THE FILE 
 0044  8A D6                    	MOV	DL,DH		;MAKE BOTH TERMINATORS COMMA 
 0046  EB 17                    	JMP	SHORT INPDOR	;GO READ THE FILE 
                                ; 
                                ; Entry for line input and read code for item fetching from 
                                ; sequential input files 
                                ; 
                                 
 0048                           DLINE: 
 0048  E8 0000 E                	CALL	FILINP		;GET FILE NUMBER SET UP 
 004B  E8 0000 E                	CALL	PTRGET		;READ STRING TO STORE INTO 
 004E  E8 0000 E                	CALL	FRCSTR		;MAKE SURE IT WAS A STRING 
 0051  B9 0000 E                	MOV	CX,OFFSET FINPRT	;RESET TO CONSOLE WHEN DONE READING 
 0054  51                       	PUSH	CX		;SAVE ON STACK 
 0055  52                       	PUSH	DX		;SAVE POINTER AT VARIABLE 
                                	EXTRN	LETCON:NEAR 
 0056  B9 0000 E                	MOV	CX,OFFSET LETCON	;GOOD RETURN ADDRESS FOR ASSIGNMENT 
 0059  32 C0                    	XOR	AL,AL		;SET A=0 FOR STRING VALUE TYPE 
 005B  8A F0                    	MOV	DH,AL		;ZERO OUT BOTH TERMINATORS 
 005D  8A D0                    	MOV	DL,AL 
 005F  50                       INPDOR:	PUSH	AX		;SAVE VALUE TYPE 
 0060  51                       	PUSH	CX		;SAVE RETURN ADDRESS 
 0061  53                       	PUSH	BX		;SAVE POINTER AT DATA COMING IN 
                                				;A DUMMY POINTER AT BUFMIN 
 0062                           NOTNWT: 
                                EXTRN	INCHR:NEAR 
 0062  E8 0000 E                	CALL	INCHR		;Read a character from file PTRFIL 
 0065  3C 20                    	CMP	AL,LOW " "	;SKIP LEADING SPACES 
 0067  75 06                    	JNZ	SHORT NOTSPC	;EXCEPT FOR LINE INPUT 
 0069  FE C6                    	INC	DH		;CHECK FOR LINEINPUT 
 006B  FE CE                    	DEC	DH 
 006D  75 F3                    	JNZ	SHORT NOTNWT	;SKIP ANY NUMBER 
 006F  3C 22                    NOTSPC:	CMP	AL,LOW 34	;QUOTED STRING COMING IN? 
 0071  75 11                    	JNZ	SHORT NOTQTE 
 0073  8A C2                    	MOV	AL,DL		;MUST BE INPUT OF A STRING 
 0075  3C 2C                    	CMP	AL,LOW 44D	;WHICH HAS [E]=44 (",") 
 0077  B0 22                    	MOV	AL,LOW 42O	;QUOTE BACK INTO [A] 
 0079  75 09                    	JNZ	SHORT NOTQTE 
 007B  8A F0                    	MOV	DH,AL		;TERMINATORS ARE QUOTES ONLY 
 007D  8A D0                    	MOV	DL,AL 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:31:10
 
DSKCOM - - COMMON ROUTINES FOR DISK BASICS                  Page     1-16
Read Items From A Sequential File                           

 007F  E8 0000 E                	CALL	INDSKC		;READ PAST QUOTATION 
 0082  72 53                    	JB	SHORT QUITSI	;IF EOF, ALL DONE 
 0084                           NOTQTE: 
 0084  BB 0000 E                	MOV	BX,OFFSET BUF	;BUFFER FOR DATA 
 0087  B5 FF                    	MOV	CH,LOW 255	;MAXIMUM NUMBER OF CHARACTERS (255) 
 0089  8A C8                    LOPCRS:	MOV	CL,AL		;SAVE CHARACTER IN [C] 
 008B  8A C6                    	MOV	AL,DH		;CHECK FOR QUOTED STRING 
 008D  3C 22                    	CMP	AL,LOW 42O 
 008F  8A C1                    	MOV	AL,CL		;RESTORE CHARACTER 
 0091  74 30                    	JZ	SHORT NOTQTL	;DON'T IGNORE CR OR STOP ON LF 
 0093  3C 0D                    	CMP	AL,LOW 13	;CR? 
 0095  53                       	PUSH	BX		;SAVE DEST PTR. ON STACK 
 0096  74 5C                    	JZ	SHORT ICASLF	;EAT LINE FEED IF ONE 
 0098  5B                       	POP	BX		;RESTORE DEST. PTR. 
 0099  3C 0A                    	CMP	AL,LOW 10	;LF? 
 009B  75 26                    	JNZ	SHORT NOTQTL	;NO, TEST OTHER TERMINATORS 
 009D                           LPISLF:				;** 5/14/82 BUG FIX(MULTIPLE LF FOR UNQUOTED STRING) 
 009D  8A C8                    	MOV	CL,AL		;SAVE CURRENT CHAR 
 009F  8A C2                    	MOV	AL,DL		;GET TERMINATOR 2 
 00A1  3C 2C                    	CMP	AL,LOW 54O	;CHECK FOR COMMA (UNQUOTED STRING) 
 00A3  8A C1                    	MOV	AL,CL		;RESTORE CHARACTER 
 00A5  74 03                    	JZ	SHORT ??L001 
 00A7  E8 013C R                	CALL	STRCHR		;IF NOT, STORE LF (?) 
 00AA                           ??L001: 
 00AA  E8 0000 E                	CALL	INDSKC		;GET NEXT CHAR 
 00AD  72 28                    	JB	SHORT QUITSI	;IF EOF, ALL DONE. 
 00AF  3C 0A                    	CMP	AL,LOW 10	;** 5/14/82 BUG FIX(MULTIPLE LF FOR UNQUOTED STRING) 
 00B1  74 EA                    	JZ	SHORT LPISLF	;** 5/14/82 BUG FIX(MULTIPLE LF FOR UNQUOTED STRING) 
 00B3  3C 0D                    	CMP	AL,LOW 13	;IS IT A CR? 
 00B5  75 0C                    	JNZ	SHORT NOTQTL	;IF NOT SEE IF STORE NORMALLY 
 00B7  8A C2                    	MOV	AL,DL		;GET TERMINATOR 
 00B9  3C 20                    	CMP	AL,LOW " "	;IS IT NUMERIC INPUT? 
 00BB  74 15                    	JZ	SHORT LPCRGT	;IF SO, IGNORE CR, DONT PUT IN BUFFER 
 00BD  3C 2C                    	CMP	AL,LOW 44	;IS IT NON-QUOTED STRING (TERM=,) 
 00BF  B0 0D                    	MOV	AL,LOW 13	;GET BACK CR. 
 00C1  74 0F                    	JZ	SHORT LPCRGT	;IF SO, IGNORE CR. 
 00C3  0A C0                    NOTQTL:	OR	AL,AL		;IS CHAR ZERO 
 00C5  74 0B                    	JZ	SHORT LPCRGT	;ALWAYS IGNORE, AS IT IS TERMINATOR 
                                				;FOR STRLIT (SEE QUIT2B) 
 00C7  3A C6                    	CMP	AL,DH		;TERMINATOR ONE? 
 00C9  74 0C                    	JZ	SHORT QUITSI	;STOP THEN 
 00CB  3A C2                    	CMP	AL,DL		;TERMINATOR TWO? 
 00CD  74 08                    	JZ	SHORT QUITSI 
 00CF  E8 013C R                	CALL	STRCHR		;SAVE THE CHAR 
 00D2  E8 0000 E                LPCRGT:	CALL	INDSKC		;READ ANOTHER CHARACTER 
 00D5  73 B2                    	JAE	SHORT LOPCRS	;IF NOT, CHECK AS TERMINATOR 
 00D7  53                       QUITSI:	PUSH	BX		;SAVE PLACE TO STUFF ZERO 
 00D8  3C 22                    	CMP	AL,LOW 34	;STOPPED ON QUOTE? 
 00DA  74 04                    	JZ	SHORT MORSPC	;DON'T SKIP SPACES THEN 
                                				;BUT DO SKIP FOLLOWING COMMA OR 
                                				;CRLF THOUGH 
 00DC  3C 20                    	CMP	AL,LOW " "	;STOPPED ON SPACE? 
 00DE  75 20                    	JNZ	SHORT NOSKCR	;NO, DON'T SKIP SPACES 
                                				;OR ANY FOLLOWING COMMAS OR CRLFS EITHER 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:31:10
 
DSKCOM - - COMMON ROUTINES FOR DISK BASICS                  Page     1-17
Read Items From A Sequential File                           

 00E0  E8 0000 E                MORSPC:	CALL	INDSKC		;READ SPACES 
 00E3  72 1B                    	JB	SHORT NOSKCR	;EOF, ALL DONE. 
 00E5  3C 20                    	CMP	AL,LOW " " 
 00E7  74 F7                    	JZ	SHORT MORSPC 
 00E9  3C 2C                    	CMP	AL,LOW 44	;COMMA? 
 00EB  75 03                    	JNZ	SHORT ??L002 
 00ED  EB 11 90                 	JMP	NOSKCR		;OK, SKIP IT 
 00F0                           ??L002: 
 00F0  3C 0D                    	CMP	AL,LOW 13	;CARRIAGE RETURN? 
 00F2  75 09                    	JNZ	SHORT BAKUPT	;BACK UP PAST THIS CHARACTER 
 00F4                           ICASLF: 
 00F4  E8 0000 E                	CALL	INDSKC		;READ ANOTHER 
 00F7  72 07                    	JB	SHORT NOSKCR	;EOF, ALL DONE. 
 00F9  3C 0A                    	CMP	AL,LOW 10	;LINE FEED? 
 00FB  74 03                    	JZ	SHORT NOSKCR	;OK, SKIP IT TOO 
 00FD                           BAKUPT: 
                                	EXTRN	BAKCHR:NEAR 
 00FD  E8 0000 E                	CALL	BAKCHR		;backup file PTRFIL 
 0100  5B                       NOSKCR:	POP	BX		;GET BACK PLACE TO STORE TERMINATOR 
 0101  C6 07 00                 QUIT2B:	MOV	BYTE PTR [BX],LOW 0	;STORE THE TERMINATOR 
 0104  BB FFFF E                	MOV	BX,OFFSET BUF-1	;ITEM IS NOW STORED AT THIS POINT +1 
 0107  8A C2                    	MOV	AL,DL		;WAS IT A NUMERIC INPUT? 
 0109  2C 20                    	SUB	AL,LOW " "	;IF SO, [E]=" " 
 010B  74 09                    	JZ	SHORT NUMIMK	;USE FIN TO SCAN IT 
                                	EXTRN	STRLT2:NEAR 
 010D  8A EE                    	MOV	CH,DH		;SET [B]=44 IF SCANNING UNQUOTED STRING 
 010F  B6 00                    	MOV	DH,LOW 0 
 0111  E8 0000 E                	CALL	STRLT2 
 0114  5B                       	POP	BX		;GET BACK [H,L] 
 0115  C3                       	RET			;DO ASSIGNMENT 
                                 
 0116                           NUMIMK: 
 0116  E8 0000 E                	CALL	GETYPR		;GET TYPE OF NUMERIC VARIABLE BEING READ 
 0119  9F                       	LAHF			; PUSH PSW 
 011A  86 C4                    	XCHG	AL,AH 
 011C  50                       	PUSH	AX 
 011D  86 C4                    	XCHG	AL,AH		;SAVE IT 
 011F  E8 0000 E                	CALL	CHRGTR		;READ FIRST CHARACTER 
 0122  58                       	POP	AX		; POP PSW 
 0123  86 C4                    	XCHG	AL,AH 
 0125  9E                       	SAHF			;RESTORE TYPE OF VARIABLE 
 0126  9F                       	LAHF			; PUSH PSW 
 0127  86 C4                    	XCHG	AL,AH 
 0129  50                       	PUSH	AX 
 012A  86 C4                    	XCHG	AL,AH		;SAVE BACK 
 012C  73 03                    	JNB	SHORT ??L003 
 012E  E8 0000 E                	CALL	FIN		;SINGLE PRECISION INPUT 
 0131                           ??L003: 
 0131  58                       	POP	AX		; POP PSW 
 0132  86 C4                    	XCHG	AL,AH 
 0134  9E                       	SAHF			;GET BACK TYPE OF VAR 
                                	EXTRN	FINDBL:NEAR 
 0135  72 03                    	JNAE	SHORT ??L004 
 0137  E8 0000 E                	CALL	FINDBL 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:31:10
 
DSKCOM - - COMMON ROUTINES FOR DISK BASICS                  Page     1-18
Read Items From A Sequential File                           

 013A                           ??L004:				;DOUBLE PRECISION INPUT 
 013A  5B                       	POP	BX		;GET [H,L] 
 013B  C3                       	RET			;DO THE ASSIGNMENT 
                                 
 013C  0A C0                    STRCHR:	OR	AL,AL		;TRYING TO STORE NULL BYTE 
 013E  75 01                    	JNZ	SHORT $+3 
 0140  C3                       	RET			;RETURN, DONT STORE IT 
 0141  88 07                    	MOV	BYTE PTR [BX],AL	;STORE THE CHARACTER 
 0143  43                       	INC	BX 
 0144  FE CD                    	DEC	CH		;128 YET? 
 0146  74 01                    	JZ	SHORT $+3 
 0148  C3                       	RET			;MORE SPACE IN BUFFER, RETURN 
 0149  59                       	POP	CX		;GET RID OF SUPERFLUOUS STACK ENTRY 
 014A  EB B5                    	JMP	SHORT QUIT2B	;SPECIAL QUIT 
                                 
                                	SUBTTL  LOAD and RUN routines 
                                 
 014C  B6 01                    PRGFLI:	MOV	DH,LOW OFFSET MD_SQI	;SEQUENTIAL INPUT MODE 
 014E  32 C0                    PRGFL2:	XOR	AL,AL		;INTERNAL FILE NUMBER IS ALWAYS ZERO 
 0150  E9 0000 E                	JMP	PRGFIL		;SCAN FILE NAME AND DISK NUMMER 
                                				;AND DO THE RIGHT THING USING MD.KIL 
                                				;AS A FLAG 
                                 
 0153                           LRUN: 
 0153  B0 01                    LRUN2:	MOV	AL,LOW 1 
 0155  EB 03 90                 	JMP	LRUN3		;1 INDICATES, CLOSE FILES, RUN 
 0158  32 C0                    LOAD:	XOR	AL,AL		;FLAG ZERO FOR "LOAD" 
 015A                           LRUN3:				;A=1 INDICATES CLOSE FILES, RUN 
                                				;A=0 INDICATES CLOSE FILES, NO RUN 
 015A  9F                       	LAHF			; PUSH PSW 
 015B  86 C4                    	XCHG	AL,AH 
 015D  50                       	PUSH	AX 
 015E  86 C4                    	XCHG	AL,AH		;SAVE "RUN"/"LOAD" FLAG 
 0160  E8 014C R                	CALL	PRGFLI		;FIND THAT FILE AND SETUP FOR 
                                				;USING INDSKC SUBROUTINE 
 0163  4B                       	DEC	BX		;SEE IF NO RUN OPTION 
 0164  E8 0000 E                	CALL	CHRGTR 
 0167  74 15                    	JZ	SHORT NOTRNL	;NO, JUST LOAD 
 0169  E8 0000 E                	CALL	SYNCHR 
 016C  2C                       	DB	OFFSET 44	;GOTTA HAVE A COMMA 
 016D  E8 0000 E                	CALL	SYNCHR 
 0170  52                       	DB	OFFSET "R"	;ONLY OPTION IS RUN 
 0171  74 03                    	JZ	SHORT ??L005 
 0173  E9 0000 E                	JMP	SNERR		;AND THAT BETTER BE THE END 
 0176                           ??L005: 
 0176  58                       	POP	AX		; POP PSW 
 0177  86 C4                    	XCHG	AL,AH 
 0179  9E                       	SAHF			;GET RID OF "RUN"/"LOAD" FLAG 
                                ; RUN fn closes all files, loads program, and executes program 
                                ; RUN fn,R loads program, and executes program 
                                ; LOAD fn closes all files, loads program 
                                ; LOAD fn,R loads program, and executes program 
                                ; MERGE fn merges an ASCII program 
                                ; CHAIN fn loads/merges a program, and executes program (leaving files opened) 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:31:10
 
DSKCOM - - COMMON ROUTINES FOR DISK BASICS                  Page     1-19
LOAD and RUN routines                                       

                                ; 
                                	PUBLIC	CHNENT 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	RUNFLG:WORD 
 0000                           DSEG	ENDS 
 017A                           CHNENT: 
 017A  B0 81                    	MOV	AL,LOW 201O	;A=LEAVE FILES OPEN, RUN 
 017C  EB 04                    	JMP	SHORT NOTRN1 
 017E  58                       NOTRNL:	POP	AX		; POP PSW 
 017F  86 C4                    	XCHG	AL,AH 
 0181  9E                       	SAHF			;restore [A]=1 for RUN, 0 for LOAD 
 0182                           NOTRN1: 
                                				;Variable  ",R"    CHAIN   LOAD   RUN 
 0182  A2 0000 E                	MOV	BYTE PTR RUNFLG,AL	;RUNFLG=  ^O201    ^O201      0     1 
 0185  0C 01                    	OR	AL,LOW 1	; 
 0187  A2 0000 E                	MOV	BYTE PTR NLONLY,AL	;NLONLY=  ^O201    ^O201      1     1 
                                				;If NLONLY and 200 <> 0, don't close any files 
                                				;If NLONLY and 001 <> 0, don't close file 0 
 018A  E8 0000 E                	CALL	SCRTCH		;Clear variables, close files 
                                ; BELOW IS FIX (TO LABEL NOTINI) SO THAT IF ^C DURING MBASIC FOO, WONT EXIT TO SYSTEM 
 018D  8B 1E 0000 E             	MOV	BX,CURLIN	;GET LINE NUMBER 
 0191  9F                       	LAHF 
 0192  43                       	INC	BX		;SEE IF IN INITIALIZATION 
 0193  9E                       	SAHF 
 0194  8A C7                    	MOV	AL,BH 
 0196  22 C3                    	AND	AL,BL 
 0198  FE C0                    	INC	AL 
 019A  75 04                    	JNZ	SHORT NOTINI	;NO 
 019C  89 1E 0000 E             	MOV	CURLIN,BX	;SAVE DIRECT LINE NUMBER 
 01A0                           NOTINI: 
 01A0  E8 0000 E                	CALL	INDSKC		;READ THE FIRST CHARACTER 
 01A3  73 03                    	JAE	SHORT ??L006 
 01A5  E9 0000 E                	JMP	MAIN		;ALL DONE IF NOTHING IN FILE 
 01A8                           ??L006: 
 01A8  3C FE                    	CMP	AL,LOW 254	;IS THIS A PROTECTED FILE? 
 01AA  75 05                    	JNZ	SHORT NTPROL	;NO 
 01AC  A2 0000 E                	MOV	BYTE PTR PROFLG,AL	;SET PROTECTED FILE 
 01AF  EB 07                    	JMP	SHORT BINLOD	;DO BINARY LOAD 
 01B1                           NTPROL: 
 01B1  FE C0                    	INC	AL		;IS IT A BINARY FILE? 
 01B3  74 03                    	JZ	SHORT ??L007 
 01B5  E9 0239 R                	JMP	MAINGO		;NO, SINCE PTRFIL IS NON-ZERO 
 01B8                           ??L007: 
                                				;INCHR WILL USE INDSKC INSTEAD OF POLLING 
                                				;THE TERMINAL 
                                				;WHEN EOF IS HIT PTRFIL WILL BE RESTORED 
                                				;AND LSTFRE WILL BE USED AS A FLAG 
                                				;TO INDICATE WHETHER TO RUN THE 
                                				;LOADED PROGRAM 
                                ; 
                                ; TIME FOR A BINARY LOAD. 
                                ; AFTER THE LOAD, THE FILE IS LINKED TOGETHER 
                                ; LSTFRE IS USED AS A FLAG WHETHER TO RUN OR NOT 
                                ; 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:31:10
 
DSKCOM - - COMMON ROUTINES FOR DISK BASICS                  Page     1-20
LOAD and RUN routines                                       

 01B8  8B 1E 0000 E             BINLOD:	MOV	BX,TXTTAB	;GET PLACE TO START STORING INTO 
                                 
                                EXTRN	FSTLOD:NEAR 
 01BC  E8 0000 E                	CALL	FSTLOD		;USE FAST LOAD CODE IN DCPM.MAC 
                                	EXTRN	PROLOD:NEAR 
 01BF  89 1E 0000 E             	MOV	VARTAB,BX	;SAVE END TEMP FOR DECODING 
 01C3  A0 0000 E                	MOV	AL,BYTE PTR PROFLG	;IS THIS A PROTECTED FILE? 
 01C6  0A C0                    	OR	AL,AL		;SET CC'S 
 01C8  74 03                    	JZ	SHORT ??L008 
 01CA  E8 0000 E                	CALL	PROLOD 
 01CD                           ??L008:				;TRANSLATE TO GOOD STUFF 
 01CD  E8 0000 E                	CALL	LINKER		;FIX THE LINKS 
 01D0  43                       	INC	BX		;WHEN LINKER RETURNS, [H,L] 
 01D1  43                       	INC	BX		;POINTS TO DOUBLE ZERO 
 01D2  89 1E 0000 E             	MOV	VARTAB,BX	;UPDATE [VARTAB] 
 01D6  E8 0000 E                	CALL	RUNC		;SETUP ARYTAB, STREND 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	CHNFLG:WORD 
 0000                           DSEG	ENDS 
                                	EXTRN	CHNRET:NEAR 
 01D9  A0 0000 E                	MOV	AL,BYTE PTR CHNFLG	;CHAIN IN PROGRESS 
 01DC  0A C0                    	OR	AL,AL		;TEST 
 01DE  74 03                    	JZ	SHORT ??L009 
 01E0  E9 0000 E                	JMP	CHNRET		;YES, GO BACK TO CHAIN CODE 
 01E3                           ??L009: 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	NLONLY:WORD 
 0000                           DSEG	ENDS 
 01E3  32 C0                    	XOR	AL,AL		; 
 01E5  A2 0000 E                	MOV	BYTE PTR NLONLY,AL	;allow all files to be closed 
 01E8  E8 0000 E                	CALL	FINPRT		;reset PTRFIL to 0 and close file 0 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	RUNFLG:WORD 
 0000                           DSEG	ENDS 
 01EB  A0 0000 E                	MOV	AL,BYTE PTR RUNFLG	;RUN OR NOT? 
 01EE  0A C0                    	OR	AL,AL 
 01F0  75 03                    	JNZ	SHORT ??L010 
 01F2  E9 0000 E                	JMP	READY 
 01F5                           ??L010: 
 01F5  E9 0000 E                	JMP	NEWSTT 
                                 
 01F8  E8 0000 E                PRGFIN:	CALL	FINPRT		;ZERO PTRFIL 
 01FB  E8 0000 E                	CALL	CLSFIL		;CLOSE FILE ZERO 
 01FE  E9 0000 E                	JMP	GTMPRT		;REFETCH TEXT POINTER 
                                PUBLIC	OUTLOD 
 0201  E8 0000 E                OUTLOD:	CALL	SCRTCH 
 0204  E9 0000 E                	JMP	OMERR 
                                 
                                ;MERGE filespec  Statement 
                                ; (OKGETM is called by CHAIN MERGE ... in FIVEO) 
                                ; 
 0207  59                       MERGE:	POP	CX		;ELIMINATE NEWSTT RETURN 
 0208  E8 014C R                	CALL	PRGFLI		;READ THE NAME AND DISK 
 020B  4B                       	DEC	BX		;MUST END THERE 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:31:10
 
DSKCOM - - COMMON ROUTINES FOR DISK BASICS                  Page     1-21
LOAD and RUN routines                                       

 020C  E8 0000 E                	CALL	CHRGTR 
 020F  74 06                    	JZ	SHORT OKGETM	;READ THE FILE 
 0211  E8 01F8 R                	CALL	PRGFIN		;CLOSE OUT TIME 
 0214  E9 0000 E                	JMP	SNERR		;AND "SYNTAX ERROR" 
 0217  32 C0                    OKGETM:	XOR	AL,AL		;NO RUN OPTION WITH "MERGE" 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	RUNFLG:WORD 
 0000                           DSEG	ENDS 
 0219  A2 0000 E                	MOV	BYTE PTR RUNFLG,AL	;SET UP THE RUN FLAG 
 021C  FE C0                    	INC	AL 
 021E  A2 0000 E                	MOV	BYTE PTR NLONLY,AL	;NLONLY=1, don't close file 0 
                                PUBLIC	OKGET2 
 0221                           OKGET2: 
 0221  E8 0000 E                	CALL	INDSKC		;READ FROM [PTRFIL] FILE 
 0224  73 03                    	JAE	SHORT ??L011 
 0226  E9 0000 E                	JMP	MAIN		;GO BACK IF EOF 
 0229                           ??L011: 
 0229  FE C0                    	INC	AL		;IS IT A BINARY FILE?? 
 022B  75 03                    	JNZ	SHORT ??L012 
 022D  E9 0000 E                	JMP	DERBFM		;BINARY IS WRONG FILE MODE 
 0230                           ??L012: 
 0230  FE C0                    	INC	AL		;OR PROTECTED BINARY FILE?? 
 0232  75 03                    	JNZ	SHORT ??L013 
 0234  E9 0000 E                	JMP	DERBFM		;ALSO GIVE BAD FILE MODE 
 0237                           ??L013: 
 0237  FE C8                    	DEC	AL		;adjust [A] for 1st INR A above 
                                				;so we can put it back (backup input file) 
 0239                           MAINGO: 
 0239  FE C8                    	DEC	AL		;[A]=character which was just read from file 
 023B  E8 0000 E                	CALL	BAKCHR		;backup file PTRFIL 
                                EXTRN	SCDASC:NEAR 
 023E  E8 0000 E                	CALL	SCDASC		;set File Code to ASCII overridding user setting) 
 0241  E9 0000 E                	JMP	MAIN 
                                 
                                 
                                	SUBTTL DISPATCH FOR DIRECT STATEMENT 
                                ; 
                                ; MAKE SURE WE'RE NOT READING A FILE IN 
                                ; 
                                 
                                	SUBTTL  SAVE COMMAND -- ASCII OR BINARY 
                                 
 0244                           SAVE: 
 0244  53                       	PUSH	BX		;save text pointer for rescan of filename 
 0245  E8 0000 E                	CALL	FRMEVL		;skip filename 
 0248  53                       	PUSH	BX 
 0249  E8 0000 E                	CALL	FRESTR		;release string temporary 
 024C  5B                       	POP	BX 
 024D  4B                       	DEC	BX 
 024E  E8 0000 E                	CALL	CHRGTR 
 0251  75 03                    	JNZ	SHORT ??L014 
 0253  EB 1F 90                 	JMP	ENDOFS		;branch if end-of-statement 
 0256                           ??L014: 
 0256  E8 0000 E                	CALL	SYNCHR 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:31:10
 
DSKCOM - - COMMON ROUTINES FOR DISK BASICS                  Page     1-22
SAVE COMMAND -- ASCII OR BINARY                             

 0259  2C                       	DB	OFFSET 54O	;eat comma 
 025A  3C 41                    	CMP	AL,LOW "A" 
 025C  75 03                    	JNZ	SHORT ??L015 
 025E  EB 08 90                 	JMP	GOODSV		;branch if got "A" 
 0261                           ??L015: 
 0261  3C 50                    	CMP	AL,LOW "P" 
 0263  74 03                    	JZ	SHORT ??L016 
 0265  E9 0000 E                	JMP	SNERR		;branch if not "A" or "P" 
 0268                           ??L016: 
 0268  53                       GOODSV:	PUSH	BX		;save text pointer 
 0269  50                       	PUSH	AX		;save "A" or "P" 
 026A  E8 0000 E                	CALL	CHRGTR		;check for end-of-statement 
 026D  74 03                    	JZ	SHORT ??L017 
 026F  E9 0000 E                	JMP	SNERR		;error if not end-of-statement 
 0272                           ??L017: 
 0272  58                       	POP	AX 
 0273  5B                       	POP	BX		;leave text pointer pointing at "A" or "P" 
 0274  5E                       ENDOFS:	POP	SI		;XTHL 
 0275  87 F3                    	XCHG	SI,BX 
 0277  56                       	PUSH	SI		;save End-Of-Statement text pointer 
                                				;HL = text pointer to filename 
 0278  50                       	PUSH	AX		;save "A", "P" or null option 
 0279  B6 02                    	MOV	DH,LOW OFFSET MD_SQO	;ELIMINATE EARLIER VERSION OF FILE 
                                				;AND CREATE EMPTY FILE 
 027B  E8 014E R                	CALL	PRGFL2		;parse file name and open it 
 027E  58                       	POP	AX		;[A]="A", "P" or null option 
 027F  5B                       	POP	BX		;restore End-Of-Statement text pointer 
                                	EXTRN	PROSAV:NEAR 
 0280  3C 50                    	CMP	AL,LOW "P"	;PROTECTED SAVE? 
 0282  75 03                    	JNZ	SHORT ??L018 
 0284  E9 0000 E                	JMP	PROSAV		;DO IT 
 0287                           ??L018: 
 0287  3C 41                    	CMP	AL,LOW "A"	;Ascii save? 
 0289  74 03                    	JZ	SHORT ??L019 
 028B  E9 0000 E                	JMP	BINSAV		;if not, must be Binary Save 
 028E                           ??L019: 
 028E  E8 0000 E                	CALL	CHRGTR		;skip "A" 
 0291  E8 0000 E                	CALL	SCDASC		;set File Code to ASCII (overridding user setting) 
 0294  E9 0000 E                	JMP	LIST		;USE THE LIST CODE TO DO THE OUTPUT 
                                				;CONTROL-CS ARE NOT ALLOWED 
                                				;AND AT THE END PTRFIL IS ZEROED 
                                	EXTRN	BINSAV:NEAR 
                                 
                                 
                                	SUBTTL  DRIVER CODE FOR CLOSE 
                                 
                                 
                                	SUBTTL "FIELD" STATEMENT FOR SETTING UP I/O STRINGS 
                                 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	TEMPA:WORD,TEMPB:WORD 
 0000                           DSEG	ENDS 
 0297                           FIELD: 
 0297  E8 0000 E                	CALL	FILSCN		;GET DATA BLOCK POINTER IN [B,C] 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:31:10
 
DSKCOM - - COMMON ROUTINES FOR DISK BASICS                  Page     1-23
"FIELD" STATEMENT FOR SETTING UP I/O STRINGS                

                                	EXTRN	DERFNO:NEAR 
 029A  75 03                    	JNZ	SHORT ??L020 
 029C  E9 0000 E                	JMP	DERFNO		;error if File Not Opened 
 029F                           ??L020: 
 029F  2C 04                    	SUB	AL,LOW OFFSET MD_RND	;MAKE SURE ITS A RANDOM FILE 
 02A1  74 03                    	JZ	SHORT ??L021 
 02A3  E9 0000 E                	JMP	DERBFM		;IF NOT, "BAD FILE MODE" 
 02A6                           ??L021: 
 02A6  87 DA                    	XCHG	BX,DX		;SAVE TEXT POINTER 
 02A8  BB 00B9                  	MOV	BX,OFFSET FD_SIZ	;POINT TO RECORD SIZE 
 02AB  03 D9                    	ADD	BX,CX 
 02AD  8B 1F                    	MOV	BX,[BX]		;GET IT 
 02AF  89 1E 0000 E             	MOV	TEMPA,BX	;STORE MAX ALLOWED 
 02B3  BB 0000                  	MOV	BX,0		;ZERO MAX # OF CHARS 
 02B6  89 1E 0000 E             	MOV	TEMPB,BX 
 02BA  8A C7                    	MOV	AL,BH		;MAKE [A]=0 
 02BC  87 DA                    	XCHG	BX,DX		;GET BACK TEXT POINTER 
 02BE  BA 00C2                  	MOV	DX,OFFSET FD_DAT	;POINT TO 5.0 FIELD BUFFER 
 02C1  87 DA                    LOPFLD:	XCHG	BX,DX		;SAVE TEXT POINTER IN [D,E] 
 02C3  03 D9                    	ADD	BX,CX		;ADD ON DATA POINTER SO [H,L] NOW POINTS 
                                				;AT THE START OF THE DATA 
 02C5  8A E8                    	MOV	CH,AL		;SETUP COUNT OF CHARACTERS PAST BY 
                                				;IN DATA AREA, SO TOTAL IS NEVER GREATER THAN 128 
 02C7  87 DA                    	XCHG	BX,DX		;TEXT POINTER BACK INTO [H,L] 
                                				;[D,E]=POINTER INTO DATA AREA 
 02C9  8A 07                    	MOV	AL,BYTE PTR [BX]	;MORE "AS"S TO SCAN? 
 02CB  3C 2C                    	CMP	AL,LOW 44	;COMMA STARTS THE CLAUSE 
 02CD  74 01                    	JZ	SHORT $+3 
 02CF  C3                       	RET			;BACK TO NEWSTT IF NOT 
 02D0  52                       	PUSH	DX		;SAVE THE POINTER INTO THE DATA BLOCK 
 02D1  51                       	PUSH	CX		;SAVE [B]=NUMBER OF CHARACTERS ALLOCATED 
 02D2  E8 0000 E                	CALL	GTBYTC		;READ NUMBER INTO [A] FROM TEXT 
 02D5  50                       	PUSH	AX		;SAVE THIS NUMBER 
 02D6  E8 0000 E                	CALL	SYNCHR 
 02D9  41                       	DB	OFFSET "A"	;SCAN THE "AS" 
 02DA  E8 0000 E                	CALL	SYNCHR 
 02DD  53                       	DB	OFFSET "S" 
 02DE  E8 0000 E                	CALL	PTRGET		;GET A POINTER AT THE STRING DESCRIPTOR 
 02E1  E8 0000 E                	CALL	FRCSTR		;INTO [D,E] 
 02E4  58                       	POP	AX		;GET THE NUMBER OF CHARACTERS 
 02E5  59                       	POP	CX		;GET THE NUMBER ALREADY USED 
 02E6  5E                       	POP	SI		;XTHL 
 02E7  87 F3                    	XCHG	SI,BX 
 02E9  56                       	PUSH	SI		;SAVE THE TEXT POINTER AND 
                                				;[H,L]=POINTER INTO DATA BLOCK 
 02EA  8A C8                    	MOV	CL,AL		;SAVE # OF CHARACTERS IN [C] 
 02EC  52                       	PUSH	DX		;SAVE [D,E] 
 02ED  53                       	PUSH	BX		;SAVE [H,L] 
 02EE  8B 1E 0000 E             	MOV	BX,TEMPB	;GET TOTAL SO FAR 
 02F2  B5 00                    	MOV	CH,LOW 0	;ACCUMULATE COUNT 
 02F4  03 D9                    	ADD	BX,CX		;Add in current field size 
 02F6  89 1E 0000 E             	MOV	TEMPB,BX	;SAVE TOTAL AGAIN 
 02FA  87 DA                    	XCHG	BX,DX		;TOTAL TO [D,E] 
 02FC  8B 1E 0000 E             	MOV	BX,TEMPA	;GET MAX ALLOWED 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:31:10
 
DSKCOM - - COMMON ROUTINES FOR DISK BASICS                  Page     1-24
"FIELD" STATEMENT FOR SETTING UP I/O STRINGS                

 0300  3B DA                    	CMP	BX,DX		;IN RANGE? 
 0302  73 03                    	JAE	SHORT ??L022 
 0304  E9 0000 E                	JMP	DERFOV		;NO, GIVE ERROR 
 0307                           ??L022: 
 0307  5B                       	POP	BX		;RESTORE [H,L] 
 0308  5A                       	POP	DX		;RESTORE [D,E] 
 0309  87 DA                    	XCHG	BX,DX		;[H,L] POINT AT STRING DESCRIPTOR 
 030B  88 0F                    	MOV	BYTE PTR [BX],CL	;STORE THE LENGTH 
 030D  43                       	INC	BX 
 030E  89 17                    	MOV	[BX],DX		;STORE THE POINTER INTO THE DATA BLOCK 
 0310  5B                       	POP	BX		;GET BACK THE TEXT POINTER 
 0311  EB AE                    	JMP	SHORT LOPFLD	;CONTINUE SCANNING "AS" CLAUSES IF MORE 
                                 
                                	SUBTTL  Random Non-I/O -- LSET/RSET/FIELD 
                                 
                                ;LSET/RSET stringvar = stringexp 
                                ; 
                                ; If stringvar points to an I/O buffer, use the string size to 
                                ;justify string. If stringvar is a literal, make new var with length 
                                ;of literal. If stringvar points to string space, use it. If the 
                                ;length of the variable is zero, return the null string. If a copy 
                                ;must be created, and stringexp is a temporary, use this space over 
                                ;unless length stringvar greater than stringexp. 
                                 
 0313  0C 00                    RSET:	OR	AL,LOW 0	;clear carry 
 0315  EB 01                    	JMP	SHORT LSETA 
 0317  F9                       LSET:	STC			;Set carry if lset 
 0318                           LSETA: 
 0318  9C                       	PUSHF			;Save LSET/RSET flag 
 0319  E8 0000 E                	CALL	PTRGET		;Get pointer to stringvar 
 031C  E8 0000 E                	CALL	FRCSTR		;Must be a string variable 
 031F  52                       	PUSH	DX		;Save pointer to descriptor 
 0320  E8 0000 E                	CALL	FRMEQL		;EAT "=" AND EVALUATE STRINGEXP 
 0323  59                       	POP	CX		; [B,C] = ptr to descr. 
 0324  5E                       	POP	SI		;XTHL 
 0325  87 F3                    	XCHG	SI,BX 
 0327  56                       	PUSH	SI		;Text ptr on bottom of stack 
 0328  53                       	PUSH	BX		;LSET/RSET flag next 
 0329  51                       	PUSH	CX		;Put descr. ptr back on 
 032A  E8 0000 E                	CALL	FRESTR		;Error if not string, free temp. 
 032D  8A 2F                    	MOV	CH,BYTE PTR [BX]	;Get length of stringexp 
 032F  5E                       	POP	SI		;XTHL 
 0330  87 F3                    	XCHG	SI,BX 
 0332  56                       	PUSH	SI		; [H,L] = descr. of var,save othr 
 0333  8A 07                    	MOV	AL,BYTE PTR [BX]	;Get length of stringvar 
 0335  8A C8                    	MOV	CL,AL		;Save in [C] 
 0337  51                       	PUSH	CX		;Save lengths of both 
 0338  53                       	PUSH	BX		;Save descriptor pointer 
 0339  9C                       	PUSHF			;PSW zero if was temp. 
 033A  43                       	INC	BX 
 033B  8B 17                    	MOV	DX,[BX]		;get point to stringvar text 
 033D  0A C0                    	OR	AL,AL		;stringvar null? 
 033F  74 6C                    	JZ	SHORT RETCUR	;Yes, don't change 
 0341  8B 1E 0000 E             	MOV	BX,TXTTAB 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:31:10
 
DSKCOM - - COMMON ROUTINES FOR DISK BASICS                  Page     1-25
Random Non-I/O -- LSET/RSET/FIELD                           

 0345  3B DA                    	CMP	BX,DX		;Stringvar in disk buffer? 
 0347  73 39                    	JAE	SHORT OLDSTR	;Yes, use it 
 0349  8B 1E 0000 E             	MOV	BX,VARTAB 
 034D  3B DA                    	CMP	BX,DX		;stringvar in program(literal)? 
 034F  72 31                    	JB	SHORT OLDSTR	;No, in string space so use it 
                                ;Need to make new string for result since stringvar points to a literal. 
                                ;If stringexp was a temporary, it has been freed. If the length of 
                                ;stringexp is greater than or equal to the length of stringvar, GETSPA 
                                ;can be called and no garbage collection can occur so temp. can be reused. 
                                ;If stringvar is greater, must get a temp. to point to stringexp if it 
                                ;was a temp. , then call GETSPA which in this case can garbage collect. 
 0351  8A D1                    	MOV	DL,CL 
 0353  B6 00                    	MOV	DH,LOW 0	;# BYTES TO ALLOCATE FOR RESULT 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	STREND:WORD 
 0000                           DSEG	ENDS 
 0355  8B 1E 0000 E             	MOV	BX,STREND 
 0359  03 DA                    	ADD	BX,DX 
 035B  87 DA                    	XCHG	BX,DX 
 035D  8B 1E 0000 E             	MOV	BX,FRETOP 
 0361  3B DA                    	CMP	BX,DX		;will GETSPA garbage collect? 
 0363  72 63                    	JB	SHORT MAKDSC	;Yes, better have stringexp temp. 
 0365  9D                       	POPF			;get rid of temp indicator 
 0366  8A C1                    MADESC:	MOV	AL,CL		;Get length of stringvar 
 0368  E8 0000 E                	CALL	GETSPA		;Get space for result 
 036B  5B                       	POP	BX		;Get stringvar descr. 
 036C  59                       	POP	CX		;Get lengths off stack 
 036D  5E                       	POP	SI		;XTHL 
 036E  87 F3                    	XCHG	SI,BX 
 0370  56                       	PUSH	SI		;Get what we wanted, stringexp descr. 
 0371  52                       	PUSH	DX 
 0372  51                       	PUSH	CX 
 0373  E8 0000 E                	CALL	FRESTR		;Free temp if any 
 0376  59                       	POP	CX 
 0377  5A                       	POP	DX 
 0378  5E                       	POP	SI		;XTHL 
 0379  87 F3                    	XCHG	SI,BX 
 037B  56                       	PUSH	SI 
 037C  51                       	PUSH	CX		;Restore stack to previous state 
 037D  53                       	PUSH	BX 
 037E  43                       	INC	BX 
 037F  9C                       	PUSHF 
 0380  89 17                    	MOV	[BX],DX		;set pointer to stringvar copy 
 0382  9D                       OLDSTR:	POPF 
 0383  5B                       	POP	BX		;Get stringvar descr. 
 0384  43                       	INC	BX 
 0385  8B 17                    	MOV	DX,[BX]		;Get pointer to text area 
 0387  59                       	POP	CX		;Get lengths off stack 
 0388  5B                       	POP	BX		;Get pointer to stringexp descr. 
 0389  43                       	INC	BX		;point to address part 
 038A  8B 1F                    	MOV	BX,[BX]		;Get ptr to stringexp text 
 038C  8A C1                    	MOV	AL,CL		;Get length of field(stringvar) 
 038E  3A C5                    	CMP	AL,CH 
 0390  73 02                    	JAE	SHORT FILDOK	;Jump if field large enough for result 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:31:10
 
DSKCOM - - COMMON ROUTINES FOR DISK BASICS                  Page     1-26
Random Non-I/O -- LSET/RSET/FIELD                           

 0392  8A E8                    	MOV	CH,AL		;Save # of bytes to copy 
 0394  2A C5                    FILDOK:	SUB	AL,CH 
 0396  8A C8                    	MOV	CL,AL		;[C] = # blanks to fill 
 0398  9D                       	POPF			;Get LSET/RSET flag 
 0399  72 03                    	JNAE	SHORT ??L023 
 039B  E8 03B9 R                	CALL	BLKFIL		;Fill leading if RSET 
 039E                           ??L023: 
 039E  FE C5                    	INC	CH		;In case zero 
 03A0  FE CD                    COPLOP:	DEC	CH		;Decr. # to copy 
 03A2  74 0E                    	JZ	SHORT LRSTDN	;Done when all copied 
 03A4  8A 07                    	MOV	AL,BYTE PTR [BX]	;Get byte from stringexp 
 03A6  8B FA                    	MOV	DI,DX 
 03A8  AA                       	STOSB			;Copy to stringvar 
 03A9  43                       	INC	BX 
 03AA  42                       	INC	DX 
 03AB  EB F3                    	JMP	SHORT COPLOP 
                                 
 03AD  59                       RETCUR:	POP	CX 
 03AE  59                       	POP	CX 
 03AF  59                       	POP	CX 
 03B0  59                       	POP	CX 
 03B1  59                       	POP	CX		;Get garb off stack 
 03B2  73 03                    LRSTDN:	JNB	SHORT ??L024 
 03B4  E8 03B9 R                	CALL	BLKFIL		;Fill trailing if LSET 
 03B7                           ??L024: 
 03B7  5B                       	POP	BX		;Restore text pointer 
 03B8  C3                       	RET 
                                 
 03B9  B0 20                    BLKFIL:	MOV	AL,LOW " "	;Fill with spaces 
 03BB  FE C1                    	INC	CL		;In case zero 
 03BD  FE C9                    BLKFL1:	DEC	CL		;Decr. # to fill 
 03BF  75 01                    	JNZ	SHORT $+3 
 03C1  C3                       	RET			;Return when done 
 03C2  8B FA                    	MOV	DI,DX 
 03C4  AA                       	STOSB			;Store space 
 03C5  42                       	INC	DX 
 03C6  EB F5                    	JMP	SHORT BLKFL1 
                                 
                                ; If stringexp was a temporary, create a new temporary to point to 
                                ; stringexp since old one was freed. This must be done since GETSPA 
                                ; will be called and garbage collection might occur. If stringexp is 
                                ; not a temporary, return. 
                                 
 03C8  9D                       MAKDSC:	POPF			;Get temp flag 
 03C9  5B                       	POP	BX 
 03CA  59                       	POP	CX 
 03CB  5E                       	POP	SI		;XTHL 
 03CC  87 F3                    	XCHG	SI,BX 
 03CE  56                       	PUSH	SI		;Dig down to stringexp descr. 
 03CF  87 DA                    	XCHG	BX,DX		;FRETMS wants [D,E] 
 03D1  75 0A                    	JNZ	SHORT MAKDS1	;Not a temp, don't reallocate 
 03D3  51                       	PUSH	CX 
 03D4  8A C5                    	MOV	AL,CH 
 03D6  E8 0000 E                	CALL	STRINI		;Make a temp point to stringexp 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:31:10
 
DSKCOM - - COMMON ROUTINES FOR DISK BASICS                  Page     1-27
Random Non-I/O -- LSET/RSET/FIELD                           

 03D9  E8 0000 E                	CALL	PUTNEW		;Get a temp to point to it 
 03DC  59                       	POP	CX 
 03DD  5E                       MAKDS1:	POP	SI		;XTHL 
 03DE  87 F3                    	XCHG	SI,BX 
 03E0  56                       	PUSH	SI 
 03E1  51                       	PUSH	CX 
 03E2  53                       	PUSH	BX		;Restore stack to previous state 
 03E3  EB 81                    	JMP	MADESC 
                                 
                                	SUBTTL  Program I/O -- Fixed Length INPUT 
                                 
                                ; Format: 
                                ;               stringvar = INPUT$(#bytes[,[#] file#]) 
                                ;If no file # is given, characters will be read from the user's 
                                ; terminal. No echoing will be done and no editing will be allowed 
                                ; (i.e. rubout,@,_,^U are just input as characters). 
                                 
                                	PUBLIC	FIXINP 
 03E5  E8 0000 E                FIXINP:	CALL	CHRGTR 
 03E8  E8 0000 E                	CALL	SYNCHR 
 03EB  24                       	DB	OFFSET "$"	;STRING FUNCTION 
 03EC  E8 0000 E                	CALL	SYNCHR 
 03EF  28                       	DB	OFFSET "(" 
 03F0  53                       	PUSH	BX		;Preserve PTRFIL across INPUT$ so 
 03F1  8B 1E 0000 E             	MOV	BX,PTRFIL	;cases like PRINT #2,INPUT$(3,#1) 
 03F5  BA 0000                  	MOV	DX,0		;will work properly. 
 03F8  89 16 0000 E             	MOV	PTRFIL,DX	;(Clear PTRFIL in case no file number 
 03FC  5E                       	POP	SI		;XTHL 
 03FD  87 F3                    	XCHG	SI,BX 
 03FF  56                       	PUSH	SI		;is specified.) 
 0400  E8 0000 E                	CALL	GETBYT		;Get # of bytes to read 
 0403  52                       	PUSH	DX		;Save # of bytes to read 
 0404  8A 07                    	MOV	AL,BYTE PTR [BX] 
 0406  3C 2C                    	CMP	AL,LOW 54O	;Read from disk file? 
 0408  75 17                    	JNZ	SHORT REDTTY	;No, from user's terminal 
 040A  E8 0000 E                	CALL	CHRGTR 
 040D  E8 0000 E                	CALL	FILSCN		;Set up file # 
                                	EXTRN	DERFNO:NEAR 
 0410  75 03                    	JNZ	SHORT ??L025 
 0412  E9 0000 E                	JMP	DERFNO		;error if File Not Open 
 0415                           ??L025: 
 0415  3C 02                    	CMP	AL,LOW OFFSET MD_SQO	;SEQUENTIAL OUTPUT FILE? 
 0417  75 03                    	JNZ	SHORT ??L026 
 0419  E9 0000 E                	JMP	DERBFM 
 041C                           ??L026:				;THEN BAD FILE MODE 
 041C  E8 0000 E                	CALL	FILSET		;SET UP PTRFIL 
 041F  32 C0                    	XOR	AL,AL		;SET ZERO FOR FLAG 
 0421  9F                       REDTTY:	LAHF			; PUSH PSW 
 0422  86 C4                    	XCHG	AL,AH 
 0424  50                       	PUSH	AX 
 0425  86 C4                    	XCHG	AL,AH		;NON ZERO SET IF TERMINAL I/O 
 0427  E8 0000 E                	CALL	SYNCHR 
 042A  29                       	DB	OFFSET ")"	;Must have paren 
 042B  58                       	POP	AX		; POP PSW 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:31:10
 
DSKCOM - - COMMON ROUTINES FOR DISK BASICS                  Page     1-28
Program I/O -- Fixed Length INPUT                           

 042C  86 C4                    	XCHG	AL,AH 
 042E  9E                       	SAHF			;Get flag off stack 
 042F  5E                       	POP	SI		;XTHL 
 0430  87 F3                    	XCHG	SI,BX 
 0432  56                       	PUSH	SI		;Save text ptr, [L]=# to read 
 0433  9F                       	LAHF			; PUSH PSW 
 0434  86 C4                    	XCHG	AL,AH 
 0436  50                       	PUSH	AX 
 0437  86 C4                    	XCHG	AL,AH		;Save flag 
 0439  8A C3                    	MOV	AL,BL 
 043B  0A C0                    	OR	AL,AL		;Read no characters? 
 043D  75 03                    	JNZ	SHORT ??L027 
 043F  E9 0000 E                	JMP	FCERR		;Yes, error 
 0442                           ??L027: 
 0442  53                       	PUSH	BX		;Save # 
 0443  E8 0000 E                	CALL	STRINI		;Get space for string 
 0446  87 DA                    	XCHG	BX,DX 
 0448  59                       	POP	CX		;[C] = # to read 
 0449  58                       FIXLOP:	POP	AX		; POP PSW 
 044A  86 C4                    	XCHG	AL,AH 
 044C  9E                       	SAHF 
 044D  9F                       	LAHF			; PUSH PSW 
 044E  86 C4                    	XCHG	AL,AH 
 0450  50                       	PUSH	AX 
 0451  86 C4                    	XCHG	AL,AH		;NON-ZERO set if should read from TTY 
 0453  74 1D                    	JZ	SHORT DSKCHR	;Read from disk file 
 0455  E8 0000 E                	CALL	INCHRI		;Read a char from terminal 
 0458                           CHARCW: 
                                ;Note : will check flag on interrupt ^c 
 0458  88 07                    PUTCHR:	MOV	BYTE PTR [BX],AL	;Put char into string 
 045A  43                       	INC	BX 
 045B  FE C9                    	DEC	CL		;Read enough yet? 
 045D  75 EA                    	JNZ	SHORT FIXLOP	;No, read more 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	SAVKEY:WORD	;Second half of two-byte key 
 0000                           DSEG	ENDS 
 045F  32 C0                    	XOR	AL,AL 
 0461  A2 0000 E                	MOV	BYTE PTR SAVKEY,AL	;Clear saved second byte 
 0464  58                       	POP	AX		; POP PSW 
 0465  86 C4                    	XCHG	AL,AH 
 0467  9E                       	SAHF			;Get flag off stack 
 0468  59                       	POP	CX		;B:=text pointer. 
 0469  5B                       	POP	BX		;Restore PTRFIL. 
 046A  89 1E 0000 E             	MOV	PTRFIL,BX 
 046E  51                       	PUSH	CX		;Restack the text pointer. 
 046F  E9 0000 E                	JMP	PUTNEW		;Return string as result 
                                 
 0472  E8 0000 E                DSKCHR:	CALL	INDSKC		;Get char from file 
 0475  73 03                    	JAE	SHORT ??L028 
 0477  E9 0000 E                	JMP	DERRPE		;If carry, read past EOF 
 047A                           ??L028: 
 047A  EB DC                    	JMP	SHORT PUTCHR	;Put char in string 
 047C                           CSEG	ENDS 
                                	END 

Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:31:10
 
DSKCOM - - COMMON ROUTINES FOR DISK BASICS                  Symbols-1
                                                             

Macros:

		N a m e			Lines

ACRLF  . . . . . . . . . . . . .  	   2
ADR  . . . . . . . . . . . . . .  	   1
CALLOS . . . . . . . . . . . . .  	   4
CHRGET . . . . . . . . . . . . .  	   1
COMPAR . . . . . . . . . . . . .  	   2
DBGBRK . . . . . . . . . . . . .  	   1
DC . . . . . . . . . . . . . . .  	   6
DJNZ . . . . . . . . . . . . . .  	   2
FSIGN  . . . . . . . . . . . . .  	   1
GETYPE . . . . . . . . . . . . .  	   1
INS86  . . . . . . . . . . . . .  	  13
INST . . . . . . . . . . . . . .  	   1
LDDR . . . . . . . . . . . . . .  	   8
LDIR . . . . . . . . . . . . . .  	   8
MOVRI  . . . . . . . . . . . . .  	   6
OUTCHR . . . . . . . . . . . . .  	   1
POPR . . . . . . . . . . . . . .  	   2
PUSHM  . . . . . . . . . . . . .  	   5
PUSHR  . . . . . . . . . . . . .  	   2
ROFFST . . . . . . . . . . . . .  	   2
SYNCHK . . . . . . . . . . . . .  	   2

Segments and Groups:

                N a m e         	Size	Align	Combine Class

CSEG . . . . . . . . . . . . . .  	047C	PARA	PUBLIC	'CODESG'
DSEG . . . . . . . . . . . . . .  	0000	PARA	PUBLIC	'DATASG'

Symbols:            

                N a m e         	Type	Value	Attr         

ALPCPM . . . . . . . . . . . . .  	Number	0000	
ALTAIR . . . . . . . . . . . . .  	Number	0000	
ANSI . . . . . . . . . . . . . .  	Number	0001	
ASCBS  . . . . . . . . . . . . .  	Number	0008	
ASCCR  . . . . . . . . . . . . .  	Number	000D	
ASCCTC . . . . . . . . . . . . .  	Number	0003	
ASCCTS . . . . . . . . . . . . .  	Number	0013	
ASCCTZ . . . . . . . . . . . . .  	Number	001A	
ASCESC . . . . . . . . . . . . .  	Number	001B	
ASCLF  . . . . . . . . . . . . .  	Number	000A	
ASCSPC . . . . . . . . . . . . .  	Number	0020	
ASCTAB . . . . . . . . . . . . .  	Number	0009	

BAKCHR . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
BAKUPT . . . . . . . . . . . . .  	L NEAR	00FD	CSEG
BASDEB . . . . . . . . . . . . .  	Number	0000	
BEEPSW . . . . . . . . . . . . .  	Number	0001	
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:31:10
 
DSKCOM - - COMMON ROUTINES FOR DISK BASICS                  Symbols-2
                                                             

BINCSW . . . . . . . . . . . . .  	Number	0000	
BINFID . . . . . . . . . . . . .  	Number	00FF	
BINLOD . . . . . . . . . . . . .  	L NEAR	01B8	CSEG
BINSAV . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
BLKFIL . . . . . . . . . . . . .  	L NEAR	03B9	CSEG
BLKFL1 . . . . . . . . . . . . .  	L NEAR	03BD	CSEG
BLODSW . . . . . . . . . . . . .  	Number	0001	
BSVFID . . . . . . . . . . . . .  	Number	00FD	
BUF  . . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
BUFLEN . . . . . . . . . . . . .  	Number	00FF	

CASSW  . . . . . . . . . . . . .  	Number	0000	
CHARCW . . . . . . . . . . . . .  	L NEAR	0458	CSEG
CHNENT . . . . . . . . . . . . .  	L NEAR	017A	CSEG	Global
CHNFLG . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
CHNRET . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
CHRGTR . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
CHSEAT . . . . . . . . . . . . .  	Number	0001	
CLMWID . . . . . . . . . . . . .  	Number	000E	
CLSFIL . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
CMPUTN . . . . . . . . . . . . .  	Number	0000	
COMMNT . . . . . . . . . . . . .  	Number	0000	
CON1 . . . . . . . . . . . . . .  	Number	2C20	
CONINT . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
CONSSW . . . . . . . . . . . . .  	Number	0001	
CONTO  . . . . . . . . . . . . .  	Number	000F	
CONTRO . . . . . . . . . . . . .  	Number	0001	
COPLOP . . . . . . . . . . . . .  	L NEAR	03A0	CSEG
CPM  . . . . . . . . . . . . . .  	Number	0001	
CPM110 . . . . . . . . . . . . .  	Number	0000	
CPM2 . . . . . . . . . . . . . .  	Number	0001	
CPM86  . . . . . . . . . . . . .  	Number	0000	
CPMA75 . . . . . . . . . . . . .  	Number	0000	
CPMADD . . . . . . . . . . . . .  	Number	0000	
CPMCON . . . . . . . . . . . . .  	Number	0000	
CPMLIF . . . . . . . . . . . . .  	Number	0000	
CPMMDS . . . . . . . . . . . . .  	Number	0000	
CPMPER . . . . . . . . . . . . .  	Number	0000	
CPMRSH . . . . . . . . . . . . .  	Number	0000	
CPMSBC . . . . . . . . . . . . .  	Number	0000	
CPMSER . . . . . . . . . . . . .  	Number	0000	
CRONLY . . . . . . . . . . . . .  	Number	0000	
CURLIN . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
CVD  . . . . . . . . . . . . . .  	L NEAR	0020	CSEG	Global
CVI  . . . . . . . . . . . . . .  	L NEAR	001A	CSEG	Global
CVS  . . . . . . . . . . . . . .  	L NEAR	001D	CSEG	Global
C_BUFF . . . . . . . . . . . . .  	Number	001A	
C_CLOS . . . . . . . . . . . . .  	Number	0010	
C_DCIO . . . . . . . . . . . . .  	Number	0006	
C_DELE . . . . . . . . . . . . .  	Number	0013	
C_GDRV . . . . . . . . . . . . .  	Number	0019	
C_MAKE . . . . . . . . . . . . .  	Number	0016	
C_OPEN . . . . . . . . . . . . .  	Number	000F	
C_PARS . . . . . . . . . . . . .  	Number	0029	
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:31:10
 
DSKCOM - - COMMON ROUTINES FOR DISK BASICS                  Symbols-3
                                                             

C_PRTO . . . . . . . . . . . . .  	Number	0005	
C_RBR  . . . . . . . . . . . . .  	Number	0027	
C_READ . . . . . . . . . . . . .  	Number	0014	
C_RENA . . . . . . . . . . . . .  	Number	0017	
C_REST . . . . . . . . . . . . .  	Number	000D	
C_RNDR . . . . . . . . . . . . .  	Number	0021	
C_RNDW . . . . . . . . . . . . .  	Number	0022	
C_SDRV . . . . . . . . . . . . .  	Number	000E	
C_SEAR . . . . . . . . . . . . .  	Number	0011	

DATOFS . . . . . . . . . . . . .  	Number	0039	
DATPSC . . . . . . . . . . . . .  	Number	0080	
DBLCHR . . . . . . . . . . . . .  	Number	0000	
DBLTRN . . . . . . . . . . . . .  	Number	0000	
DCOMPR . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
DEBUG  . . . . . . . . . . . . .  	Text  		
DERBFM . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
DERBFN . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
DERFNO . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
DERFOV . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
DERRPE . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
DIRTMP . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
DISK . . . . . . . . . . . . . .  	Number	0001	
DLINE  . . . . . . . . . . . . .  	L NEAR	0048	CSEG	Global
DMC  . . . . . . . . . . . . . .  	Number	0000	
DOASIG . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
DOCNVF . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
DOS  . . . . . . . . . . . . . .  	Number	0000	
DRVPOS . . . . . . . . . . . . .  	Number	0000	
DSCPTR . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
DSCTMP . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
DSKCHR . . . . . . . . . . . . .  	L NEAR	0472	CSEG
DUPONT . . . . . . . . . . . . .  	Number	0000	
DYNCOM . . . . . . . . . . . . .  	Number	0001	

EDIT80 . . . . . . . . . . . . .  	Number	0000	
ENDCON . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ENDOFS . . . . . . . . . . . . .  	L NEAR	0274	CSEG
ERRFDR . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERROR  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ESCCTL . . . . . . . . . . . . .  	Number	0000	
EXIDY  . . . . . . . . . . . . .  	Number	0000	

FAST . . . . . . . . . . . . . .  	Number	0001	
FCBSIZ . . . . . . . . . . . . .  	Number	0026	
FCB_DT . . . . . . . . . . . . .  	Number	001D	
FCB_DV . . . . . . . . . . . . .  	Number	0007	
FCB_EX . . . . . . . . . . . . .  	Number	0013	
FCB_FN . . . . . . . . . . . . .  	Number	0008	
FCB_FS . . . . . . . . . . . . .  	Number	0017	
FCB_FT . . . . . . . . . . . . .  	Number	0010	
FCB_NR . . . . . . . . . . . . .  	Number	0027	
FCB_RC . . . . . . . . . . . . .  	Number	0015	
FCB_RN . . . . . . . . . . . . .  	Number	0028	
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:31:10
 
DSKCOM - - COMMON ROUTINES FOR DISK BASICS                  Symbols-4
                                                             

FCERR  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FC_ASC . . . . . . . . . . . . .  	Number	0000	
FC_BIN . . . . . . . . . . . . .  	Number	0001	
FDBSIZ . . . . . . . . . . . . .  	Number	0039	
FD_DAT . . . . . . . . . . . . .  	Number	00C2	
FD_LOG . . . . . . . . . . . . .  	Number	00BD	
FD_OPS . . . . . . . . . . . . .  	Number	00C0	
FD_PHY . . . . . . . . . . . . .  	Number	00BB	
FD_SIZ . . . . . . . . . . . . .  	Number	00B9	
FIELD  . . . . . . . . . . . . .  	L NEAR	0297	CSEG	Global
FILDOK . . . . . . . . . . . . .  	L NEAR	0394	CSEG
FILIND . . . . . . . . . . . . .  	L NEAR	0039	CSEG	Global
FILINP . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FILOU3 . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FILSCN . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FILSET . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FIN  . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FINBCK . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FINDBL . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FINPRT . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FIVDSK . . . . . . . . . . . . .  	Number	0001	
FIVEO  . . . . . . . . . . . . .  	Number	0001	
FIVLPT . . . . . . . . . . . . .  	Number	0001	
FIVMEM . . . . . . . . . . . . .  	Number	0001	
FIXINP . . . . . . . . . . . . .  	L NEAR	03E5	CSEG	Global
FIXLOP . . . . . . . . . . . . .  	L NEAR	0449	CSEG
FKEYON . . . . . . . . . . . . .  	Number	0001	
FL_BKC . . . . . . . . . . . . .  	Number	0080	
FNAML  . . . . . . . . . . . . .  	Number	000B	
FRCSTR . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FRESTR . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FRETOP . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
FRMEQL . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FRMEVL . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FSTLOD . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
F_BAKC . . . . . . . . . . . . .  	Number	0032	
F_BREM . . . . . . . . . . . . .  	Number	0030	
F_CLOC . . . . . . . . . . . . .  	Number	002D	
F_CODE . . . . . . . . . . . . .  	Number	0031	
F_DEV  . . . . . . . . . . . . .  	Number	0034	
F_FCB  . . . . . . . . . . . . .  	Number	0007	
F_FLGS . . . . . . . . . . . . .  	Number	0037	
F_MODE . . . . . . . . . . . . .  	Number	0006	
F_NEXT . . . . . . . . . . . . .  	Number	0004	
F_NUL1 . . . . . . . . . . . . .  	Number	0000	
F_NUL2 . . . . . . . . . . . . .  	Number	0002	
F_NUL3 . . . . . . . . . . . . .  	Number	0033	
F_NUL4 . . . . . . . . . . . . .  	Number	0036	
F_NUL5 . . . . . . . . . . . . .  	Number	00BF	
F_NUM  . . . . . . . . . . . . .  	Number	0001	
F_ORCT . . . . . . . . . . . . .  	Number	002F	
F_POS  . . . . . . . . . . . . .  	Number	0038	
F_WID  . . . . . . . . . . . . .  	Number	0035	

Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:31:10
 
DSKCOM - - COMMON ROUTINES FOR DISK BASICS                  Symbols-5
                                                             

GENBIN . . . . . . . . . . . . .  	Number	0001	
GENDSK . . . . . . . . . . . . .  	Number	0000	
GENIO  . . . . . . . . . . . . .  	Number	0001	
GESBC  . . . . . . . . . . . . .  	Number	0000	
GETBYT . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
GETSPA . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
GETYPR . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
GIO86  . . . . . . . . . . . . .  	Number	0001	
GONE . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
GOODSV . . . . . . . . . . . . .  	L NEAR	0268	CSEG
GTBYTC . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
GTMPRT . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
GW . . . . . . . . . . . . . . .  	Number	0001	
GWCASS . . . . . . . . . . . . .  	Number	0000	
GWDBUG . . . . . . . . . . . . .  	Number	0000	
G_BIN  . . . . . . . . . . . . .  	Number	001A	
G_BOT  . . . . . . . . . . . . .  	Number	001C	
G_CLS  . . . . . . . . . . . . .  	Number	0006	
G_EOF  . . . . . . . . . . . . .  	Number	0000	
G_GCW  . . . . . . . . . . . . .  	Number	0018	
G_GPS  . . . . . . . . . . . . .  	Number	0012	
G_GWD  . . . . . . . . . . . . .  	Number	0014	
G_LOC  . . . . . . . . . . . . .  	Number	0002	
G_LOF  . . . . . . . . . . . . .  	Number	0004	
G_OPN  . . . . . . . . . . . . .  	Number	000C	
G_RND  . . . . . . . . . . . . .  	Number	000A	
G_SCW  . . . . . . . . . . . . .  	Number	0016	
G_SIN  . . . . . . . . . . . . .  	Number	000E	
G_SOT  . . . . . . . . . . . . .  	Number	0010	
G_SWD  . . . . . . . . . . . . .  	Number	0008	

HEATH  . . . . . . . . . . . . .  	Number	0000	
HEXOCT . . . . . . . . . . . . .  	Number	0001	
HGHBIT . . . . . . . . . . . . .  	Number	0001	

I8086  . . . . . . . . . . . . .  	Number	0001	
I8251  . . . . . . . . . . . . .  	Number	0000	
IBMLIK . . . . . . . . . . . . .  	Number	0001	
IBMTOK . . . . . . . . . . . . .  	Number	0001	
ICASLF . . . . . . . . . . . . .  	L NEAR	00F4	CSEG
INCHR  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
INCHRI . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
INDSKC . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
INKEYF . . . . . . . . . . . . .  	Number	0001	
INLADD . . . . . . . . . . . . .  	Number	0000	
INPDOR . . . . . . . . . . . . .  	L NEAR	005F	CSEG
INSTSW . . . . . . . . . . . . .  	Number	0000	
INTEL  . . . . . . . . . . . . .  	Number	0000	
INTFHW . . . . . . . . . . . . .  	Number	0000	
INTFSW . . . . . . . . . . . . .  	Number	0000	
INTLEC . . . . . . . . . . . . .  	Number	0000	
INTROM . . . . . . . . . . . . .  	Number	0000	
ISC  . . . . . . . . . . . . . .  	Number	0000	
ISIS . . . . . . . . . . . . . .  	Number	0000	
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:31:10
 
DSKCOM - - COMMON ROUTINES FOR DISK BASICS                  Symbols-6
                                                             


JISKTN . . . . . . . . . . . . .  	Number	0000	

KANABS . . . . . . . . . . . . .  	Number	0000	
KANJFN . . . . . . . . . . . . .  	Number	0000	
KEYSTA . . . . . . . . . . . . .  	Number	0000	
KILLER . . . . . . . . . . . . .  	Number	0000	

LABKEY . . . . . . . . . . . . .  	Number	0001	
LEN2 . . . . . . . . . . . . . .  	Number	0001	
LEN3 . . . . . . . . . . . . . .  	Number	0001	
LENGTH . . . . . . . . . . . . .  	Number	0002	
LETCON . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
LINKER . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
LINLN  . . . . . . . . . . . . .  	Number	0050	
LIST . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
LISTEN . . . . . . . . . . . . .  	Number	0001	
LNGVAR . . . . . . . . . . . . .  	Number	0001	
LOAD . . . . . . . . . . . . . .  	L NEAR	0158	CSEG	Global
LOKHED . . . . . . . . . . . . .  	Number	0000	
LONGI  . . . . . . . . . . . . .  	Number	0000	
LOPCRS . . . . . . . . . . . . .  	L NEAR	0089	CSEG
LOPFLD . . . . . . . . . . . . .  	L NEAR	02C1	CSEG
LPCRGT . . . . . . . . . . . . .  	L NEAR	00D2	CSEG
LPISLF . . . . . . . . . . . . .  	L NEAR	009D	CSEG
LPT3 . . . . . . . . . . . . . .  	Number	0000	
LPTLEN . . . . . . . . . . . . .  	Number	0084	
LPTSW  . . . . . . . . . . . . .  	Number	0001	
LRSTDN . . . . . . . . . . . . .  	L NEAR	03B2	CSEG
LRUN . . . . . . . . . . . . . .  	L NEAR	0153	CSEG	Global
LRUN2  . . . . . . . . . . . . .  	L NEAR	0153	CSEG
LRUN3  . . . . . . . . . . . . .  	L NEAR	015A	CSEG
LSET . . . . . . . . . . . . . .  	L NEAR	0317	CSEG	Global
LSETA  . . . . . . . . . . . . .  	L NEAR	0318	CSEG

MADESC . . . . . . . . . . . . .  	L NEAR	0366	CSEG
MAIN . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
MAINGO . . . . . . . . . . . . .  	L NEAR	0239	CSEG
MAKDS1 . . . . . . . . . . . . .  	L NEAR	03DD	CSEG
MAKDSC . . . . . . . . . . . . .  	L NEAR	03C8	CSEG
MDS  . . . . . . . . . . . . . .  	Number	0000	
MDSISS . . . . . . . . . . . . .  	Number	0000	
MD_APP . . . . . . . . . . . . .  	Number	0008	
MD_RND . . . . . . . . . . . . .  	Number	0004	
MD_SQI . . . . . . . . . . . . .  	Number	0001	
MD_SQO . . . . . . . . . . . . .  	Number	0002	
MELCO  . . . . . . . . . . . . .  	Number	0000	
MEMIMG . . . . . . . . . . . . .  	Number	0001	
MERGE  . . . . . . . . . . . . .  	L NEAR	0207	CSEG	Global
MKD$ . . . . . . . . . . . . . .  	L NEAR	0006	CSEG	Global
MKI$ . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	Global
MKS$ . . . . . . . . . . . . . .  	L NEAR	0003	CSEG	Global
MODEL3 . . . . . . . . . . . . .  	Number	0000	
MORSPC . . . . . . . . . . . . .  	L NEAR	00E0	CSEG
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:31:10
 
DSKCOM - - COMMON ROUTINES FOR DISK BASICS                  Symbols-7
                                                             

MOSTEK . . . . . . . . . . . . .  	Number	0000	
MULSEG . . . . . . . . . . . . .  	Number	0001	

NAMLEN . . . . . . . . . . . . .  	Number	0028	
NASCOM . . . . . . . . . . . . .  	Number	0000	
NATROM . . . . . . . . . . . . .  	Number	0000	
NBANKS . . . . . . . . . . . . .  	Number	0001	
NCRBAS . . . . . . . . . . . . .  	Number	0000	
NCRCAS . . . . . . . . . . . . .  	Number	0000	
NCRDEB . . . . . . . . . . . . .  	Number	0000	
NCRELS . . . . . . . . . . . . .  	Number	0000	
NCRLPT . . . . . . . . . . . . .  	Number	0001	
NECBAS . . . . . . . . . . . . .  	Number	0000	
NEWSTT . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
NLONLY . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
NMCOMT . . . . . . . . . . . . .  	Number	0002	
NMKEYF . . . . . . . . . . . . .  	Number	000A	
NMKEYT . . . . . . . . . . . . .  	Number	000E	
NMLINE . . . . . . . . . . . . .  	Number	0019	
NMLOFS . . . . . . . . . . . . .  	Number	0030	
NMLPT  . . . . . . . . . . . . .  	Number	0003	
NMPENT . . . . . . . . . . . . .  	Number	0001	
NMSTRT . . . . . . . . . . . . .  	Number	0004	
NOATDL . . . . . . . . . . . . .  	Number	0000	
NOCTLA . . . . . . . . . . . . .  	Number	0000	
NODOT  . . . . . . . . . . . . .  	Number	0000	
NOEDIT . . . . . . . . . . . . .  	Number	0000	
NOIOS  . . . . . . . . . . . . .  	Number	0000	
NONULL . . . . . . . . . . . . .  	Number	0000	
NOPEKS . . . . . . . . . . . . .  	Number	0000	
NOROMP . . . . . . . . . . . . .  	Number	0000	
NORUBT . . . . . . . . . . . . .  	Number	0000	
NOSKCR . . . . . . . . . . . . .  	L NEAR	0100	CSEG
NOTINI . . . . . . . . . . . . .  	L NEAR	01A0	CSEG
NOTNWT . . . . . . . . . . . . .  	L NEAR	0062	CSEG
NOTQTE . . . . . . . . . . . . .  	L NEAR	0084	CSEG
NOTQTL . . . . . . . . . . . . .  	L NEAR	00C3	CSEG
NOTRN1 . . . . . . . . . . . . .  	L NEAR	0182	CSEG
NOTRNL . . . . . . . . . . . . .  	L NEAR	017E	CSEG
NOTSPC . . . . . . . . . . . . .  	L NEAR	006F	CSEG
NOUSR  . . . . . . . . . . . . .  	Number	0000	
NOVARP . . . . . . . . . . . . .  	Number	0000	
NTPROL . . . . . . . . . . . . .  	L NEAR	01B1	CSEG
NUMIMK . . . . . . . . . . . . .  	L NEAR	0116	CSEG
NUMLEV . . . . . . . . . . . . .  	Number	006E	
NUMTMP . . . . . . . . . . . . .  	Number	000A	
NUMTRP . . . . . . . . . . . . .  	Number	0015	

OEMRAM . . . . . . . . . . . . .  	Number	0000	
OKGET2 . . . . . . . . . . . . .  	L NEAR	0221	CSEG	Global
OKGETM . . . . . . . . . . . . .  	L NEAR	0217	CSEG	Global
OLDSTR . . . . . . . . . . . . .  	L NEAR	0382	CSEG
OMERR  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ONTEL  . . . . . . . . . . . . .  	Number	0000	
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:31:10
 
DSKCOM - - COMMON ROUTINES FOR DISK BASICS                  Symbols-8
                                                             

OUTLOD . . . . . . . . . . . . .  	L NEAR	0201	CSEG	Global

PALSIZ . . . . . . . . . . . . .  	Number	0000	
PANBAS . . . . . . . . . . . . .  	Number	0000	
PCS  . . . . . . . . . . . . . .  	Number	0000	
PLAYSW . . . . . . . . . . . . .  	Number	0001	
PRGFIL . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
PRGFIN . . . . . . . . . . . . .  	L NEAR	01F8	CSEG	Global
PRGFL2 . . . . . . . . . . . . .  	L NEAR	014E	CSEG	Global
PRGFLI . . . . . . . . . . . . .  	L NEAR	014C	CSEG	Global
PROFID . . . . . . . . . . . . .  	Number	00FE	
PROFLG . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
PROLOD . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
PROSAV . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
PTRFIL . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
PTRGET . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
PURE . . . . . . . . . . . . . .  	Number	0001	
PUTCHR . . . . . . . . . . . . .  	L NEAR	0458	CSEG
PUTNEW . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External

QUEUE  . . . . . . . . . . . . .  	Number	0001	
QUIT2B . . . . . . . . . . . . .  	L NEAR	0101	CSEG
QUITSI . . . . . . . . . . . . .  	L NEAR	00D7	CSEG

READY  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
REALIO . . . . . . . . . . . . .  	Number	0001	
REDTTY . . . . . . . . . . . . .  	L NEAR	0421	CSEG
RETCUR . . . . . . . . . . . . .  	L NEAR	03AD	CSEG
RMX  . . . . . . . . . . . . . .  	Number	0000	
RSET . . . . . . . . . . . . . .  	L NEAR	0313	CSEG	Global
RSHACK . . . . . . . . . . . . .  	Number	0000	
RSTLES . . . . . . . . . . . . .  	Number	0001	
RUNC . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
RUNFLG . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External

SAVE . . . . . . . . . . . . . .  	L NEAR	0244	CSEG	Global
SAVKEY . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
SAVSTK . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
SBC  . . . . . . . . . . . . . .  	Number	0000	
SBC86  . . . . . . . . . . . . .  	Number	0000	
SCCPTR . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
SCDASC . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
SCP  . . . . . . . . . . . . . .  	Number	0001	
SCRN86 . . . . . . . . . . . . .  	Number	0001	
SCRNIO . . . . . . . . . . . . .  	Number	0001	
SCROLT . . . . . . . . . . . . .  	Number	0001	
SCRTCH . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
SGSATS . . . . . . . . . . . . .  	Number	0000	
SHORTJ . . . . . . . . . . . . .  	Number	0001	
SHTCHN . . . . . . . . . . . . .  	Number	0000	
SHTERR . . . . . . . . . . . . .  	Number	0000	
SHTINS . . . . . . . . . . . . .  	Number	0000	
SHTLHM . . . . . . . . . . . . .  	Number	0000	
SHTLIN . . . . . . . . . . . . .  	Number	0000	
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:31:10
 
DSKCOM - - COMMON ROUTINES FOR DISK BASICS                  Symbols-9
                                                             

SHTPRO . . . . . . . . . . . . .  	Number	0000	
SHTREN . . . . . . . . . . . . .  	Number	0000	
SIXDIG . . . . . . . . . . . . .  	Number	0000	
SMALL  . . . . . . . . . . . . .  	Number	0000	
SNERR  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
SPCDSK . . . . . . . . . . . . .  	Number	0000	
SPCNDS . . . . . . . . . . . . .  	Number	0000	
STRCHR . . . . . . . . . . . . .  	L NEAR	013C	CSEG
STREND . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
STRING . . . . . . . . . . . . .  	Number	0001	
STRINI . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
STRLT2 . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
STRLT3 . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
STRSIZ . . . . . . . . . . . . .  	Number	0003	
SUPRSH . . . . . . . . . . . . .  	Number	0001	
SWAPSW . . . . . . . . . . . . .  	Number	0001	
SYNCHR . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External

TEK  . . . . . . . . . . . . . .  	Number	0000	
TEMPA  . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
TEMPB  . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
TIMSHR . . . . . . . . . . . . .  	Number	0000	
TRNCHR . . . . . . . . . . . . .  	Number	0000	
TRSER2 . . . . . . . . . . . . .  	Number	0000	
TRUANS . . . . . . . . . . . . .  	Number	0000	
TRUROM . . . . . . . . . . . . .  	Number	0001	
TSDISK . . . . . . . . . . . . .  	Number	0000	
TSLPT  . . . . . . . . . . . . .  	Number	0000	
TXTTAB . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External

VALTYP . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
VARTAB . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
VMOVFM . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
VMOVMF . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External

XTNSYS . . . . . . . . . . . . .  	Number	0000	

Z80  . . . . . . . . . . . . . .  	Number	0001	
Z80MAC . . . . . . . . . . . . .  	Number	0001	

??L000 . . . . . . . . . . . . .  	L NEAR	002E	CSEG
??L001 . . . . . . . . . . . . .  	L NEAR	00AA	CSEG
??L002 . . . . . . . . . . . . .  	L NEAR	00F0	CSEG
??L003 . . . . . . . . . . . . .  	L NEAR	0131	CSEG
??L004 . . . . . . . . . . . . .  	L NEAR	013A	CSEG
??L005 . . . . . . . . . . . . .  	L NEAR	0176	CSEG
??L006 . . . . . . . . . . . . .  	L NEAR	01A8	CSEG
??L007 . . . . . . . . . . . . .  	L NEAR	01B8	CSEG
??L008 . . . . . . . . . . . . .  	L NEAR	01CD	CSEG
??L009 . . . . . . . . . . . . .  	L NEAR	01E3	CSEG
??L010 . . . . . . . . . . . . .  	L NEAR	01F5	CSEG
??L011 . . . . . . . . . . . . .  	L NEAR	0229	CSEG
??L012 . . . . . . . . . . . . .  	L NEAR	0230	CSEG
??L013 . . . . . . . . . . . . .  	L NEAR	0237	CSEG
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:31:10
 
DSKCOM - - COMMON ROUTINES FOR DISK BASICS                  Symbols-10
                                                             

??L014 . . . . . . . . . . . . .  	L NEAR	0256	CSEG
??L015 . . . . . . . . . . . . .  	L NEAR	0261	CSEG
??L016 . . . . . . . . . . . . .  	L NEAR	0268	CSEG
??L017 . . . . . . . . . . . . .  	L NEAR	0272	CSEG
??L018 . . . . . . . . . . . . .  	L NEAR	0287	CSEG
??L019 . . . . . . . . . . . . .  	L NEAR	028E	CSEG
??L020 . . . . . . . . . . . . .  	L NEAR	029F	CSEG
??L021 . . . . . . . . . . . . .  	L NEAR	02A6	CSEG
??L022 . . . . . . . . . . . . .  	L NEAR	0307	CSEG
??L023 . . . . . . . . . . . . .  	L NEAR	039E	CSEG
??L024 . . . . . . . . . . . . .  	L NEAR	03B7	CSEG
??L025 . . . . . . . . . . . . .  	L NEAR	0415	CSEG
??L026 . . . . . . . . . . . . .  	L NEAR	041C	CSEG
??L027 . . . . . . . . . . . . .  	L NEAR	0442	CSEG
??L028 . . . . . . . . . . . . .  	L NEAR	047A	CSEG
_OFFST . . . . . . . . . . . . .  	Number	00C2	


   1394 Source  Lines
   1477 Total   Lines
    488 Symbols

  35286 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
