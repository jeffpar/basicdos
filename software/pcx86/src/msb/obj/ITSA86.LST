Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:51:16
 
ITSA86 - Resident Initialization for I8086                  Page     1-1
                                                            

                                ; [ This translation created 10-Feb-83 by Versi
				on 4.3 ] 
                                 
 0008                           	.RADIX  8		; To be safe 
                                 
 0000                           CSEG	SEGMENT PUBLIC 'CODESG' 
                                	ASSUME  CS:CSEG 
                                 
                             C  INCLUDE	OEM.INC 
                             C  ; [ This translation created 10-Feb-83 by Versi
				on 4.3 ] 
                             C   
                             C  	PAGE	,132D 
                             C  	SUBTTL  Common file to produce 2-segment 8086 GW-CPM BASIC 
                             C   
                             C  	.SALL 
                             C   
 000A                        C  	.RADIX	10 
 = 0000                      C  	OEMRAM=0D 
                             C  ;Pascal program HFILE searches for the following line - DO NOT MODIFY 
                             C  ;** (VERSION SPECIFIC VALUES) ************************************************ 
 = 0019                      C  	NMLINE=25		;Max screen display text lines 
 = 0001                      C  	NBANKS=1		;Number of graphic planes 
 = 0000                      C  	PALSIZ=0		;Size of OEM color palette 
 = 0000                      C  	DBLCHR=0		;Editor support for KANJI chars 
 = 0000                      C  	KANABS=0		;Kana BASIC (Japanese JIS codes) 
 = 0000                      C  	KANJFN=0		;KANJI String Functions KPOS, KLEN .. 
 = 0000                      C  	JISKTN=0		;&K, &J constants (KANJI) 
 = 0001                      C  	SUPRSH=1		;1=super shift key feature 
 = 000A                      C  	NMKEYF=10		;number of function keys 
 = 000E                      C  	NMKEYT=14		;number of function key traps 
 = 0001                      C  	FKEYON=1		;yes=display function keys 
 = 0001                      C  	SCROLT=1		;Line 25 allocated for status only 
 = 0001                      C  	PLAYSW=1		;for PLAY statement 
 = 0001                      C  	BEEPSW=1		;for SOUND, BEEP statements 
 = 0003                      C  	NMLPT=3			;number of line printers 
 = 0001                      C  	CONSSW=1		;Device CONS: 
 = 0002                      C  	NMCOMT=2		;number of COMmunications ports 
 = 0001                      C  	NMPENT=1		;number of light pens 
 = 0004                      C  	NMSTRT=4		;number of joysticks 
 = 0000                      C  	GWCASS=0		;Cassette switch (CSAVE,CLOAD,MOTOR) 
 = 0001                      C  	IBMLIK=1		;IBM compatibility package 
 = 0001                      C  	IBMTOK=1		;IBM token compatibility 
 = 0001                      C  	DYNCOM=1		;Dynamic communication buffers 
                             C  ;** (END OF VERSION SPECIFIC VALUES) ***************************************** 
                             C  ;Pascal program HFILE searches for the previous line - DO NOT MODIFY 
                             C  ; 
 = 0015                      C  	NUMTRP=NMKEYT+NMCOMT+NMPENT+NMSTRT 
 = 0001                      C  	GW=1			;GW BASIC 
 = 0000                      C  	ESCCTL=0		;Escape Sequence processing in SCROUT 
 = 0000                      C  	GWDBUG=0		;DEBUG statement (TEST VERSIONS ONLY) 
                             C  				; Support is in BINTRP.MAC and GWSTS.MAC 
 = 0000                      C  	SIXDIG=0		;# of digits of accuracy assumed when formatting 
                             C  				;single precision numbers for output. 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:51:16
 
ITSA86 - Resident Initialization for I8086                  Page     1-2
Common file to produce 2-segment 8086 GW-CPM BASIC          

                             C  				; 0 := 7 digits 
                             C  				; 1 := 6 digits 
 = 0000                      C  	CASSW=0			;CASSETTE SWITCH 
 = 0001                      C  	LABKEY=1		;^T (LABEL) key capability 
 = 0001                      C  	HGHBIT=1		;8-bit characters (ASCII & Graphics) 
 = 0001                      C  	QUEUE=1			;Queued painting algorithm (vs. stack) 
 = 0001                      C  	GIO86=1			;BASIC-86 Generalized I/O 
 = 0001                      C  	SCRNIO=1		;Screen editor 
 = 0001                      C  	SCRN86=1		;8086 Screen editor 
 = 0001                      C  	I8086=1			;CROSS ASSEMBLING FOR 8086 
 = 0001                      C  	MULSEG=1		;MULTI-SEGMENT 8086 BASIC 
 = 0000                      C  	SMALL=0			;"SMALL" VERSION OF 8086 BASIC IF SET 
 = 0001                      C  	TRUROM=1 
 = 0000                      C  	SBC86=0			;SBC 86/02 BOARD? 
 = 0001                      C  	SHORTJ=1		;USE INTRA-SEGMENT SHORT JUMPS 
                             C  				;IN 8086 CODE 
 = 0001                      C  	LNGVAR=1		;LONG VARIABLE NAME SUPPORT (EXTENDED ONLY) 
 = 0000                      C  	SHTERR=0		;SHORT (2 CHAR) ERROR MESSAGES 
 = 0000                      C  	SHTINS=0		;INSTR IN NON-FAST LEN2 VERSIONS 
 = 0000                      C  	SHTLHM=0		;LEFT HAND SIDE MID IN NON FAST LEN2 VERSIONS 
 = 0000                      C  	SHTCHN=0		;ALLOW CHAIN IN NON-5.0 
 = 0000                      C  	SHTPRO=0		;ALLOW PROTECTED FILES IN NON-FIVDSK 
 = 0000                      C  	SHTLIN=0		;ALLOW LINE INPUT IN NON-EXTENDED NON-FAST 
 = 0000                      C  	SHTREN=0		;ALLOW RENUM IN NON-FST VERSIONS 
 = 0001                      C  	INKEYF=1		;ADDS INKEY$ FUNCTION 
 = 0000                      C  	NOIOS=0			;NO I/O STATMENTS (INP,OUT, WAIT) 
 = 0000                      C  	NOPEKS=0		;NO PEEK, POKE 
 = 0000                      C  	NOUSR=0			;NO USR 
 = 0000                      C  	NOCTLA=0		;NO CONTROL-A IN EXTENDED 
 = 0000                      C  	NORUBT=0		;NO RUBOUT 
 = 0000                      C  	NOROMP=0		;NO ROM PROGRAM FEATURE 
 = 0000                      C  	NOATDL=0		;NO AUTO DELETE IN NON-FAST EXTENDED 
 = 0000                      C  	NODOT=0			;NO DOT IN LEN2 
 = 0000                      C  	NOEDIT=0		;NO EDIT COMMAND 
 = 0000                      C  	CRONLY=0		;ONLY PUT OUT CR, NOT CRLF TO TERMINAL 
                             C  				;AND FILES 
 = 0000                      C  	NONULL=0		;NO NULL COMMAND, PUT OUT NULLS IN CRDO & OUTCH1 
 = 0000                      C  	NOVARP=0		;NO VARPTR FUNCTION 
 = 0001                      C  	FIVEO=1			;GENERATE VERSION WITH RELEASE 5.0 FEATURES 
 = 0001                      C  	FIVMEM=1 
 = 0001                      C  	ANSI=1 
 = 0001                      C  	FIVDSK=1		;5.0 NEW DSK CODE 
 = 0001                      C  	FIVLPT=1		;WIDTH LPRINT AND 255 FEATURE 
 = 0001                      C  	HEXOCT=1		;&H..., HEX$, &O..., OCT$ 
 = 0000                      C  	BINCSW=0		;&B..., BIN$ 
 = 0001                      C  	BLODSW=1		;BLOAD, BSAVE COMMANDS 
 = 0001                      C  	MEMIMG=1		;MEMORY IMAGE FILES 
 = 0001                      C  	GENBIN=1 
                             C   
 = 0000                      C  	TRUANS=0		;TRUE ANSI VERSION (STATIC SCAN, ON ERROR) 
 = 0000                      C  	COMMNT=0		;DONT WANT BIG COMMENT 
 = 0000                      C  	INTEL=0			;INTEL PROPRIETARY 
 = 0000                      C  	INTFSW=0		;INTEL FLOATING POINT 
 = 0000                      C  	INTFHW=0 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:51:16
 
ITSA86 - Resident Initialization for I8086                  Page     1-3
Common file to produce 2-segment 8086 GW-CPM BASIC          

 = 0000                      C  	RMX=0			;INTEL RMX VERSION 
 = 0000                      C  	EDIT80=0		;FOR EDIT80 I/O ROUTINES 
 = 0000                      C  	RSHACK=0 
 = 0000                      C  	INTLEC=0 
 = 0002                      C  	LENGTH=2		;  1 MEANS 8K, 2 MEANS 12K 
 = 0000                      C  	BASDEB=0		;WHETHER DBG WILL BE LOADED WITH BASIC 
 = 0001                      C  	RSTLES=1		;WHETHER BASIC WILL USE RST LOCATIONS 
                             C  				;TO MAKE ITSELF SMALLER & QUICKER 
 = 0001                      C  	REALIO=1		;WHETHER SIMULATE (=0) OR ON MACHINE (=1) 
 = 0001                      C  	GENIO=1			;USE G/P ROUTINES 
 = 0001                      C  	CHSEAT=1		;CHSNS eats chars 
 = 0000                      C  	GENDSK=0		;USE G/P DSK CODE 
 = 0000                      C  	LONGI=0			;WHETHER WE ASK "TERMINAL WIDTH?" 
                             C  				;AND WANT SIN-TAN-COS-ATN? 
 = 0000                      C  	INSTSW=0		;FOR INSTR INSTRUCTION 
 = 0001                      C  	SWAPSW=1		;FOR SWAP STATEMENT 
 = 0000                      C  	MDS=0			;FOR INTEL MDS SYSTEMS 
 = 0000                      C  	SBC=0			;FOR INTEL SINGLE BOARD COMPUTER 
                             C  				;1=SBC 80/10, 2=SBC 80/20 
 = 0001                      C  	PURE=1			;ON FOR PURE CODE 
 = 0000                      C  	KILLER=0		;FOR ROM VERSION THAT WONT RUN IN RAM 
 = 0000                      C  	INTROM=0 
 = 0001                      C  	LPTSW=1 
 = 0001                      C  	NCRLPT=1 
 = 0000                      C  	NCRCAS=0 
 = 0000                      C  	ISC=0			;FOR ISC VERSION 
 = 0000                      C  	LPT3=0			;THREE LPT DRIVER VERSION(QUME,OKIA,CENT) 
 = 0000                      C  	TSLPT=0 
                             C   
 = 0000                      C  	DOS=0			;ON TO GEN ROUTINES FOR DOS 
 = 0001                      C  	DISK=1			;FILE I/O FEATURES 
 = 0000                      C  	TIMSHR=0		;NO TIME-SHARING DISK 
 = 0000                      C  	TSDISK=0		;NO TIME-SHARING DISK FOR US 
 = 0000                      C  	SPCDSK=0		;MAY HAVE MM'S DISK CODE 
 = 0000                      C  	SPCNDS=0 
 = 0001                      C  	FAST=1			;CONSTANT COMPRESSION, RENUM & FRIENDS 
 = 0000                      C  	KEYSTA=0 
 = 0000                      C  	ISIS=0			;FOR VERSION TO RUN UNDER INTEL'S ISIS II DOS 
 = 0000                      C  	MDSISS=0		;FOR MDS VERSION THAT RUNS UNDER ISIS-II 
 = 0001                      C  	CPM=1			;FOR CPM compatible operating systems 
 = 0001                      C  	CPM2=1			;VERSION 2. CPM 
 = 0000                      C  	CPM86=0			;FOR CP/M-86 operating system 
 = 0001                      C  	SCP=1			;MS-DOS operating system 
 = 0000                      C  	CPMCON=0 
 = 0000                      C  	CPMSER=0		;CHECK CPM SERIAL #'S 
 = 0000                      C  	CPMADD=0		;FOR VERSION TO RUN ON ADDS CPM 
 = 0000                      C  	CPMA75=0		;FOR VERSION TO RUN ON ADDS SYSTEM 75 
                             C  				;CP/M 
 = 0000                      C  	CPMRSH=0		;FOR RADIO SHACK CPM/M 
 = 0000                      C  	CPM110=0		;FOR CP/M @1100 HEX (INTERALIA) 
 = 0000                      C  	CPMSBC=0		;FOR VERSION TO RUN ON SBC CP/M AT 4100H 
 = 0000                      C  	CPMPER=0		;FOR PERTEC VERSION OF CPM 
 = 0000                      C  	CPMLIF=0		;LIFEBOAT CP/M AT 4200H 
 = 0000                      C  	CPMMDS=0		;MOHAWK DATA SYSTEMS CP/M 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:51:16
 
ITSA86 - Resident Initialization for I8086                  Page     1-4
Common file to produce 2-segment 8086 GW-CPM BASIC          

 = 0000                      C  	CPMCON=0 
 = 0000                      C  	Z80=0 
 = 0001                      C  	DISK=1 
 = 0001                      C  	NCRLPT=1 
 = 0001                      C  	RSTLES=1 
 = 0000                      C  	DRVPOS=CPMADD 
 = 0000                      C  	TRNCHR=CPMADD 
 = 0000                      C  	INLADD=CPMADD 
 = 0001                      C  	LISTEN=1		;ON MEANS LISTEN FOR ^C 
 = 0001                      C  	LISTEN=1 
 = 0000                      C  	LEN2=0 
 = 0001                      C  	LEN2=1 
 = 0001                      C  	HEXOCT=1 
 = 0002                      C  	LENGTH=2 
 = 0001                      C  	RSTLES=1 
 = 0001                      C  	FIVLPT=1 
 = 0000                      C  	I8251=0			;THIS SWITCH IS USED FOR ROSEMOUNT VERSION 
 = 0001                      C  	CONTRO=1		;ALLOW ^O 
 = 0001                      C  	LEN3=LEN2 OR CASSW 
                             C   
                             C   
                             C   
 = 0001                      C  	STRING=1 
 = 0001                      C  	NCRLPT=1 
                             C   
                             C  ; *** OEM Switches which need to be defaulted to 0 
                             C  ; 
 = 0000                      C  	CMPUTN=0 
 = 0000                      C  	DUPONT=0 
 = 0000                      C  	EXIDY=0 
 = 0000                      C  	GESBC=0 
 = 0000                      C  	HEATH=0 
 = 0000                      C  	LOKHED=0 
 = 0000                      C  	MOSTEK=0 
 = 0000                      C  	TEK=0 
 = 0000                      C  	TRSER2=0 
 = 0000                      C  	NASCOM=0 
 = 0000                      C  	NATROM=0 
 = 0000                      C  	NCRBAS=0 
 = 0000                      C  	NCRDEB=0 
 = 0000                      C  	NCRDEB=0 
 = 0000                      C  	NCRELS=0 
 = 0000                      C  	ONTEL=0 
 = 0000                      C  	PCS=0 
 = 0000                      C  	SGSATS=0 
 = 0000                      C  	ALTAIR=0 
 = 0000                      C  	DMC=0 
 = 0000                      C  	PANBAS=0 
 = 0000                      C  	XTNSYS=0 
 = 0000                      C  	NECBAS=0 
                             C  ;******************************************************************* 
                             C  ; Z80 related macros 
                             C  ;******************************************************************* 
 = 0001                      C  	Z80=1			;FOR VERSION THAT RUNS ON BOTH 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:51:16
 
ITSA86 - Resident Initialization for I8086                  Page     1-5
Common file to produce 2-segment 8086 GW-CPM BASIC          

                             C  				;8080'S AND ZILOG Z-80'S 
 = 0001                      C  	Z80MAC=1		;USE 8080 MACROS INSTEAD OF Z80 INSTRUCTIONS 
 = 0000                      C  	Z80=0 
 = 0001                      C  	Z80=1 
                             C  LDIR	MACRO 
                             C  	MOV	WORD PTR A,WORD PTR M 
                             C  	STAX	D 
                             C  	INXF	H 
                             C  	INXF	D 
                             C  	DCXF	B 
                             C  	MOV	WORD PTR A,WORD PTR B 
                             C  	ORA	C 
                             C  	JNZ	_-8D 
                             C  ENDM 
                             C  LDDR	MACRO 
                             C  	MOV	WORD PTR A,WORD PTR M 
                             C  	STAX	D 
                             C  	DCXF	H 
                             C  	DCXF	D 
                             C  	DCXF	B 
                             C  	MOV	WORD PTR A,WORD PTR B 
                             C  	ORA	C 
                             C  	JNZ	_-8D 
                             C  ENDM 
                             C  DJNZ	MACRO	    DEST 
                             C  	DCR	B 
                             C  	JNZ	DEST 
                             C  ENDM 
                             C  ;******************************************************************* 
                             C  ; Define reset routines. 
                             C  ;******************************************************************* 
                             C  FSIGN	MACRO 
                             C  	CALL	SIGN 
                             C  ENDM 
                             C  PUSHM	MACRO 
                             C  	MOV	WORD PTR C,WORD PTR M 
                             C  	INX	H 
                             C  	MOV	WORD PTR B,WORD PTR M 
                             C  	INX	H 
                             C  	PUSH	WORD PTR B 
                             C  ENDM 
                             C  SYNCHK	MACRO	X 
                             C  	CALL	SYNCHR 
                             C  	DB	OFFSET X 
                             C  ENDM 
                             C  OUTCHR	MACRO 
                             C  	CALL	OUTDO 
                             C  ENDM 
                             C  CHRGET	MACRO 
                             C  	CALL	CHRGTR 
                             C  ENDM 
                             C  COMPAR	MACRO 
                             C  	CALL	DCOMPR 
                             C  ENDM 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:51:16
 
ITSA86 - Resident Initialization for I8086                  Page     1-6
Common file to produce 2-segment 8086 GW-CPM BASIC          

                             C  GETYPE	MACRO 
                             C  	CALL	GETYPR 
                             C  ENDM 
                             C  COMPAR	MACRO 
                             C  	DB	73O 
                             C  	DB	332O 
                             C   ENDM 
                             C  ACRLF	MACRO 
                             C  	DB	13D 
                             C  	DB	10D 
                             C  ENDM 
                             C  PUSHR	MACRO 
                             C  	PUSH	WORD PTR D 
                             C  	PUSH	WORD PTR B 
                             C  ENDM 
                             C  POPR	MACRO 
                             C  	POP	WORD PTR B 
                             C  	POP	WORD PTR D 
                             C  ENDM 
                             C  MOVRI	MACRO	B,C,D,E 
                             C  	DB	1O		; "LXI  B" 
                             C  	DB	OFFSET C 
                             C  	DB	OFFSET B 
                             C  	DB	21O		; "LXI  D" 
                             C  	DB	OFFSET E 
                             C  	DB	OFFSET D 
                             C  ENDM 
                             C  INST	MACRO	X 
                             C  	DB	OX 
                             C  ENDM 
                             C   
                             C   
 = 000F                      C  	CONTO=15		;CHARACTER TO SUPRESS OUTPUT (USUALLY CONTROL-O) 
 = 0000                      C  	DBLTRN=0		;FOR DOUBLE PRECISION TRANSCENDENTALS 
                             C   
 = 000E                      C  	CLMWID=14D		;MAKE COMMA COLUMNS FOURTEEN CHARACTERS 
 = 0080                      C  	DATPSC=128D		;NUMBER OF DATA BYTES IN DISK SECTOR 
 = 0050                      C  	LINLN=80D		;TERMINAL LINE LENGTH 
 = 0084                      C  	LPTLEN=132D 
 = 00FF                      C  	BUFLEN=255		;LONG LINES 
 = 0028                      C  	NAMLEN=40D		;MAXIMUM LENGTH NAME -- 3 TO 127 
                             C   
 = 006E                      C  	NUMLEV=110D		;NUMBER OF STACK LEVELS RESERVED 
                             C  				;BY AN EXPLICIT CALL TO GETSTK 
 = 0004                      C  	STRSIZ=4 
 = 0003                      C  	STRSIZ=3 
 = 0003                      C  	NUMTMP=3		;NUMBER OF STRING TEMPORARIES 
 = 000A                      C  	NUMTMP=10 
                             C   
 0008                        C  	.RADIX	8 
                             C  ; 
                             C  ; Useful macros 
                             C  ; 
                             C   
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:51:16
 
ITSA86 - Resident Initialization for I8086                  Page     1-7
Common file to produce 2-segment 8086 GW-CPM BASIC          

                             C  ACRLF   MACRO 
                             C          DB      13D 
                             C          DB      10D 
                             C  ENDM 
                             C   
                             C  INS86   MACRO   A,B,C,D 
                             C          DB      A&O 
                             C  IFNB    <B> 
                             C          DB      B&O 
                             C  ENDIF 
                             C  IFNB    <D> 
                             C          DB      C&O 
                             C          DB      D&O 
                             C  ENDIF 
                             C  IFB     <D> 
                             C   IFNB   <C> 
                             C          DW      C 
                             C    ENDIF 
                             C   ENDIF 
                             C  ENDM 
                             C   
                             C  CALLOS  MACRO 
                             C          CALL    CPMENT 
                             C  ENDM 
                             C   
                             C  POPR    MACRO 
                             C          POP     CX 
                             C          POP     DX 
                             C  ENDM 
                             C   
                             C  ADR     MACRO   X 
                             C          DW      X 
                             C  ENDM 
                             C   
                             C  DC      MACRO   ARG 
                             C          IRPC    ZZ,<ARG> 
                             C              IFDIF       <ZZ>,<">
                             C                  DB      "&ZZ&" 
                             C                  _A="&ZZ&" 
                             C              ENDIF 
                             C          ENDM 
                             C  ENDM 
                             C  ; 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:51:16
 
ITSA86 - Resident Initialization for I8086                  Page     1-8
Common file to produce 2-segment 8086 GW-CPM BASIC          

                             C          PAGE 
                             C   
                             C  DBGBRK	MACRO 
                             C  	DB	0CDh,06h,0CCh 
                             C  	ENDM 
                                 
                                 
                                	TITLE   ITSA86 - Resident Initialization for I8086 
                                 
                                COMMENT	* 
                                 
                                --------- --- ---- -- --------- ----------- 
                                COPYRIGHT (C) 1982 BY MICROSOFT CORPORATION 
                                --------- --- ---- -- --------- ----------- 
                                 
                                        by Len Oorthuys Microsoft Corp. 
                                        * 
                                 
                                ;************************************************************************ 
                                ;*                                                                      * 
                                ;*  NOTE: Any code linked after this module is discarded after          * 
                                ;*        Initialization of BASIC.                                      * 
                                ;*                                                                      * 
                                ;************************************************************************ 
                                 
                             C  	INCLUDE	GIO86U.INC 
                             C  ; [ This translation created 12-Jan-83 by Version 4.3 ] 
                             C   
                             C  	SUBTTL GIO86U - Device Independent I/O Constants and Macros 
                             C   
                             C  COMMENT	* 
                             C   
                             C  --------- --- ---- -- --------- 
                             C  COPYRIGHT (C) 1982 BY MICROSOFT 
                             C  --------- --- ---- -- --------- 
                             C   
                             C          Programmer: Tom Corbett,  Microsoft Inc. 
                             C   
                             C          * 
                             C   
                             C  ROFFST	MACRO	NAME,SIZE	;define record macro 
                             C  	NAME=_OFFST 
                             C  	_OFFST=_OFFST+SIZE 
                             C  ENDM  
                             C   
                             C   
                             C  ;ASCII character definitions 
                             C  ; 
 = 0003                      C  	ASCCTC=3D		;CTL-C 
 = 0008                      C  	ASCBS=8D		;backspace 
 = 0009                      C  	ASCTAB=9D		;Tab 
 = 000A                      C  	ASCLF=10D		;Line Feed 
 = 000D                      C  	ASCCR=13D		;Carriage Return 
 = 0013                      C  	ASCCTS=19D		;CTL-S 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:51:16
 
ITSA86 - Resident Initialization for I8086                  Page     1-9
GIO86U - Device Independent I/O Constants and Macros        

 = 001A                      C  	ASCCTZ=26D		;Control Z (End-of-file for some devices) 
 = 001B                      C  	ASCESC=27D		;Escape 
 = 0020                      C  	ASCSPC=32D		;Space 
                             C   
                             C  ;Special File ID's (identified by 1st byte of file) 
                             C  ; 
 = 00FF                      C  	BINFID=255D		;files created by SAVE "fn" 
 = 00FE                      C  	PROFID=254D		;files created by SAVE "fn",P 
 = 00FD                      C  	BSVFID=253D		;files created by BSAVE "fn" 
                             C   
                             C  ;Generalized I/O Function Codes: 
                             C  ; 
 = 0000                      C  	_OFFST=0		;initialize count 
                             C  	ROFFST	G_EOF,2		;test EOF for file opened to this device 
                             C  	ROFFST	G_LOC,2		;LOC 
                             C  	ROFFST	G_LOF,2		;LOF 
                             C  	ROFFST	G_CLS,2		;perform special CLOSE functions for this device 
                             C  	ROFFST	G_SWD,2		;set device width 
                             C  	ROFFST	G_RND,2		;GET/PUT random record from/to this device 
                             C  	ROFFST	G_OPN,2		;perform special OPEN functions for this device 
                             C  	ROFFST	G_SIN,2		;input 1 byte from file opened on this device 
                             C  	ROFFST	G_SOT,2		;output 1 byte to file opened on this device 
                             C  	ROFFST	G_GPS,2		;POS 
                             C  	ROFFST	G_GWD,2		;get device width 
                             C  	ROFFST	G_SCW,2		;set device column width 
                             C  	ROFFST	G_GCW,2		;get device column width 
                             C  	ROFFST	G_BIN,2		;block input from file opened on this device 
                             C  	ROFFST	G_BOT,2		;block output to file opened on this device 
                             C   
                             C   
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:51:16
 
ITSA86 - Resident Initialization for I8086                  Page     1-10
GIO86U - Device Independent I/O Constants and Macros        

                             C          PAGE 
                                 
                                	.SALL 
                                 
 = 0000                         CPM86=0 
 = 0000                         TETRA=0				;Save DS in DATSEG(defined in CS and 
                                				;   used by interrupt routine). 
                                 
                             C  	INCLUDE	MSDOSU.INC 
                             C  ; [ This translation created 12-Jan-83 by Version 4.3 ] 
                             C   
                             C  	SUBTTL    MSDOSU - MS-DOS Constants and Data-Structure Definitions 
                             C   
                             C  COMMENT	* 
                             C   
                             C  --------- --- ---- -- --------- 
                             C  COPYRIGHT (C) 1982 BY MICROSOFT 
                             C  --------- --- ---- -- --------- 
                             C   
                             C  	Programmer: Tom Corbett,  Microsoft Inc. 
                             C   
                             C  	* 
                             C   
                             C  CALLOS	MACRO	FUNC 
                             C  IFNB	<FUNC>   
                             C  	MOV	AH,LOW OFFSET FUNC 
                             C  ENDIF  
                             C  	INT	33D		;MSDOS system call 
                             C  ENDM  
                             C   
                             C  ROFFST	MACRO	NAME,SIZE	;define record macro 
                             C  	NAME=_OFFST 
                             C  	_OFFST=_OFFST+SIZE 
                             C  ENDM  
                             C   
                             C   
                             C  ; MSDOS System Call codes 
                             C  ; 
 = 0005                      C  	C_PRTO=5D		;Printer output 
 = 0006                      C  	C_DCIO=6D		;Direct console I/O 
 = 000D                      C  	C_REST=13D		;INITIALIZE BDOS 
 = 000E                      C  	C_SDRV=14D		;SET CURRENTLY SELECTED DRIVE 
 = 000F                      C  	C_OPEN=15D 
 = 0010                      C  	C_CLOS=16D 
 = 0011                      C  	C_SEAR=17D		;SEARCH FOR FILE 
 = 0013                      C  	C_DELE=19D 
 = 0014                      C  	C_READ=20D 
 = 0016                      C  	C_MAKE=22D 
 = 0017                      C  	C_RENA=23D 
 = 0019                      C  	C_GDRV=25D		;GET CURRENTLY SELECTED DRIVE 
 = 001A                      C  	C_BUFF=26D		;SET DMA ADDRESS 
 = 0021                      C  	C_RNDR=33D		;Random read 
 = 0022                      C  	C_RNDW=34D		;Random write 
 = 0027                      C  	C_RBR=39D		;Random Block Read 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:51:16
 
ITSA86 - Resident Initialization for I8086                  Page     1-11
MSDOSU - MS-DOS Constants and Data-Structure Definitions    

 = 0029                      C  	C_PARS=41D		;Parse Filename 
                             C   
 = 000B                      C  	FNAML=11D		;number of bytes in Filename with extension 
 = 0080                      C  	DATPSC=128D		;bytes per sector 
 = 0026                      C  	FCBSIZ=38D		;File Control Block size 
                             C   
                             C  ;MS-DOS FILE-DATA-BLOCK Record Definition 
                             C  ; 
 = 0000                      C  	_OFFST=0		;initialize count 
                             C  	ROFFST	F_NUL1,1	;not used by basic interpreter 
                             C  	ROFFST	F_NUM,1		;file number 0..255 
                             C  	ROFFST	F_NUL2,2	;not used by basic interpreter 
                             C  	ROFFST	F_NEXT,2	;thread for linked list, [MEMSIZ]=end 
                             C  	ROFFST	F_MODE,1	;file mode: 
 = 0001                      C  	MD_SQI=1D		;sequential input 
 = 0002                      C  	MD_SQO=2D		;sequential output 
 = 0004                      C  	MD_RND=4D		;random 
 = 0008                      C  	MD_APP=8D		;append 
                             C  	ROFFST	F_FCB,FCBSIZ	;File Control Block: used to communicate with OS 
                             C  	ROFFST	F_CLOC,2	;for seq files: num sectors read/written   (LOCOFS) 
                             C  				;for rnd files: last record number + 1 
                             C  	ROFFST	F_ORCT,1	;"Original Byte Count"                     (ORNOFS) 
                             C  				;for seq input: #bytes in sector when read 
                             C  				;for seq output: #bytes in output sector 
                             C  				;for random files: bytes per sector 
                             C  	ROFFST	F_BREM,1	;number of bytes till end-of-buffer        (NMLOFS) 
                             C  	ROFFST	F_CODE,1	;file encoding: 
 = 0000                      C  	FC_ASC=0		;Ascii SAVE, Data files 
 = 0001                      C  	FC_BIN=1		;binary file (BSAVE, binary SAVE) 
                             C  	ROFFST	F_BAKC,1	;holds next sequential input when F.FLBS.FL.BKC is true 
                             C  	ROFFST	F_NUL3,1	;not used by basic interpreter 
                             C  	ROFFST	F_DEV,1		;Device number                             (FL.DSK) 
                             C  	ROFFST	F_WID,1		;File width 
                             C  	ROFFST	F_NUL4,1	;not used by basic interpreter 
                             C  	ROFFST	F_FLGS,1	;flags 
 = 0080                      C  	FL_BKC=200O		;when true, F.BAKC contains next sequential input 
                             C  	ROFFST	F_POS,1		;Current column position                   (FL.OPS) 
                             C  	ROFFST	FDBSIZ,0	;size of device independent part of FDB 
                             C  				;device dependant FDB entries start here 
                             C   
                             C  	ROFFST	DATOFS,DATPSC	;Operating System interface buffer 
                             C  	ROFFST	FD_SIZ,2	;variable record length for random files 
                             C  	ROFFST	FD_PHY,2	;current physical record number 
                             C  	ROFFST	FD_LOG,2	;current logical record number 
                             C  	ROFFST	F_NUL5,1	;Future use 
                             C  	ROFFST	FD_OPS,2	;current output position for sequential I/O 
                             C  	ROFFST	FD_DAT,0	;field buffer of random file 
                             C   
                             C  ; OFFSETS INTO MSDOS FCB 
                             C  ; 
 = 0007                      C  	FCB_DV=F_FCB+0D		;DRIVE (0=default, 1=A:, 2=B:, ...) 
 = 0008                      C  	FCB_FN=F_FCB+1D		;FILE NAME 
 = 0010                      C  	FCB_FT=F_FCB+9D		;EXTENSION 
 = 0013                      C  	FCB_EX=F_FCB+12D	;FILE EXTENT (identifies block of 128 logical records) 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:51:16
 
ITSA86 - Resident Initialization for I8086                  Page     1-12
MSDOSU - MS-DOS Constants and Data-Structure Definitions    

 = 0015                      C  	FCB_RC=F_FCB+14D	;RECORD SIZE 
 = 0017                      C  	FCB_FS=F_FCB+16D	;FILE SIZE IN BYTES 
 = 001B                      C  	FCB_DT=F_FCB+20D	;Date of last write to file 
 = 001D                      C  	FCB_DT=F_FCB+22D	;Time of last write to file 
 = 0027                      C  	FCB_NR=F_FCB+32D	;NEXT RECORD NUMBER 
 = 0028                      C  	FCB_RN=F_FCB+33D	;CP/M 2.x Random Record Number 
                             C   
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:51:16
 
ITSA86 - Resident Initialization for I8086                  Page     1-13
MSDOSU - MS-DOS Constants and Data-Structure Definitions    

                             C          PAGE 
                                 
                                 
                                 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	ASSUME DS:DSEG 
                                	EXTRN	TEMP8:WORD,TXTTAB:WORD 
 0000                           DSEG	ENDS 
                                 
                                	EXTRN	NODSKS:NEAR,LRUN:NEAR,READY:NEAR 
                                 
                                	PUBLIC	WORDS 
 0000  20 42 79 74 65 73 20     WORDS:	DB	" Bytes free"	;WORDS 
       66 72 65 65              
 000B  00                       	DB	0 
                                 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:51:16
 
ITSA86 - Resident Initialization for I8086                  Page     1-14
MSDOSU - MS-DOS Constants and Data-Structure Definitions    

                                	PAGE 
                                	SUBTTL  INITSA 
                                	PUBLIC	INITSA 
 000C                           INITSA: 
 000C  E8 0000 E                	CALL	NODSKS 
 000F  E8 0043 R                	CALL	MAPINI		;Init the new memory map 
 0012  8B 1E 0000 E             	MOV	BX,WORD PTR TXTTAB 
 0016  4B                       	DEC	BX 
 0017  C7 07 0000               	MOV	WORD PTR 0[BX],0D 
 001B  8B 1E 0000 E             	MOV	BX,WORD PTR TEMP8	;POINT TO START OF COMMAND LINE 
 001F  8A 07                    	MOV	AL,BYTE PTR 0[BX]	;GET BYTE POINTED TO 
 0021  0A C0                    	OR	AL,AL		;IF ZERO, NO FILE SEEN 
 0023  74 03                    	JZ	GREADY 
 0025  E9 0000 E                	JMP	LRUN		;TRY TO RUN FILE 
 0028  E9 0000 E                GREADY:	JMP	READY 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:51:16
 
ITSA86 - Resident Initialization for I8086                  Page     1-15
INITSA                                                      

                                	PAGE 
                                ;BASVAR - Retrieve or Modify BASIC Internal Data Locations 
                                ;This routine provides a method to retrieve or modify certain BASIC internal 
                                ;data locations.  This routine is provided as support for PEEK and 
                                ;POKE filsters.  These data items have been documented to IBM GW BASIC users 
                                ;in the IBM Technical Reference Manual. 
                                ; 
                                ;Entry - AX = Value to set (if PSW.C set) 
                                ;        BX = 0 for current program line number 
                                ;             1 for last program line containing an error 
                                ;             2 for address of user program text 
                                ;             3 for address of user variable table 
                                ;        PSW.C set indicates to write the variable 
                                ;        PSW.C reset indicates to read the variable 
                                ;Exit  - AX = value of appropriate variable 
                                ;        BX modified 
                                ; 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	CURLIN:WORD,ERRLIN:WORD,TXTTAB:WORD,VARTAB:WORD 
 0000                           DSEG	ENDS 
                                	PUBLIC	BASVAR 
 002B  0000 E                   BVTAB:	DW	OFFSET CURLIN 
 002D  0000 E                   	DW	OFFSET ERRLIN 
 002F  0000 E                   	DW	OFFSET TXTTAB 
 0031  0000 E                   	DW	OFFSET VARTAB 
                                 
 0033                           BASVAR: 
 0033  9C                       	PUSHF 
 0034  D1 E3                    	SHL	BX,1		;make word offset 
 0036  9D                       	POPF			;preserve PSW.C (input parameter) 
 0037  2E: 8B 9F 002B R         	MOV	BX,WORD PTR BVTAB[BX]	;Get address of appropriate variable 
 003C  73 02                    	JNB	BASVRD		;Performing read function 
 003E  89 07                    	MOV	WORD PTR 0[BX],AX	;Perform write function 
 0040  8B 07                    BASVRD:	MOV	AX,WORD PTR 0[BX]	;Perform read function 
 0042  C3                       	RET 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:51:16
 
ITSA86 - Resident Initialization for I8086                  Page     1-16
INITSA                                                      

                                	PAGE 
                                	SUBTTL  Initialization Support Routines 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	CSWFLG:WORD,CSWSIZ:WORD,MSWFLG:WORD,MSWSIZ:WORD,NEWDS:WORD 
                                	EXTRN	STKLOW:WORD,MEMSIZ:WORD,TOPMEM:WORD,SAVSEG:WORD,MAXMEM:WORD 
                                	EXTRN	FILTAB:WORD 
                                	EXTRN	FREFLG:WORD	;BYTES FREE message flag 
 0000                           DSEG	ENDS 
                                 
                                	EXTRN	CLEARC:NEAR,OMERR:NEAR 
                                	EXTRN	SETCBF:NEAR	;OEM Set COM Buf (size & location) 
                                	EXTRN	LINPRT:NEAR,STROUT:NEAR,CRDO:NEAR	;COM 
                                	EXTRN	CPMMEM:NEAR 
                                 
                                 
                                	PUBLIC	MAPCLC,MAPINI 
                                 
                                ;MAPINI - Set up the final memory map. 
                                ;Entry  - NEWDS  = final DS: 
                                ;         MSWSIZ = final MAXMEM 
                                ;Exit   - DS: and stack moved. 
                                ; 
 0043                           MAPINI: 
                                ;Move the stack to the end of the new memory map 
 0043  5B                       	POP	BX		;Return address 
 0044  FA                       	CLI			;disable external interrupts 
                                				; while changing memory map 
 0045  A1 0000 E                	MOV	AX,WORD PTR NEWDS 
 0048  8E D0                    	MOV	SS,AX 
 004A  8B 26 0000 E             	MOV	SP,WORD PTR MSWSIZ	; 
 004E  53                       	PUSH	BX		;Return address 
                                 
                                ;Move the data segment 
 004F  8E C0                    	MOV	ES,AX		;NEWDS 
 0051  33 F6                    	XOR	SI,SI 
 0053  8B 0E 0000 E             	MOV	CX,WORD PTR TXTTAB	;Amount of memory to move 
 0057  D1 E9                    	SHR	CX,1		;In words 
 0059  FC                       	CLD 
 005A  8C DB                    	MOV	BX,DS 
 005C  3B C3                    	CMP	AX,BX		;Test for direction of copy 
 005E  72 05                    	JB	BLKCPY		;brif destination is below source 
 0060  FD                       	STD			;Copy up 
 0061  8B 36 0000 E             	MOV	SI,WORD PTR TXTTAB	;starting from top 
 0065                           BLKCPY: 
 0065  8B FE                    	MOV	DI,SI 
 0067  F3/ A5                    REP	MOVSW 
                                 
                                ;Set new data segment 
 0069  8E D8                    	MOV	DS,AX		;NEWDS 
                                	EXTRN	SEGINI:NEAR 
 006B  E8 0000 E                	CALL	SEGINI 
 006E  8C D8                    	MOV	AX,DS 
 0070  A3 0000 E                	MOV	WORD PTR SAVSEG,AX	;For PEEK/POKE 
 0073  FB                       	STI			;enable external interrupts 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:51:16
 
ITSA86 - Resident Initialization for I8086                  Page     1-17
Initialization Support Routines                             

                                 
                                ;Insure zeros at TXTTAB 
 0074  8B 1E 0000 E             	MOV	BX,WORD PTR TXTTAB 
 0078  C7 07 0000               	MOV	WORD PTR 0[BX],0D 
 007C  C6 47 02 00              	MOV	BYTE PTR 2[BX],LOW 0D	;Three zeros necessary 
                                 
                                ;Call CLEARC to set up stack and finalize the memory map 
 0080  A1 0000 E                	MOV	AX,WORD PTR MSWSIZ 
                                ;Make sure that [TXTTAB]+<stack size>+32 does not overflow memory 
 0083  8B 1E 0000 E             	MOV	BX,WORD PTR TOPMEM 
 0087  2B 1E 0000 E             	SUB	BX,WORD PTR STKLOW	;BX=stack size 
 008B  76 53                    	JBE	GOMERR		;BRIF illegal stack(0 or less bytes) 
 008D  F7 DB                    	NEG	BX 
 008F  03 D8                    	ADD	BX,AX		;BX=new stack bottom 
 0091  73 4D                    	JNB	GOMERR		;BRIF MSWSIZ is less than stack size 
 0093  83 EB 20                 	SUB	BX,32D		;Leave a little room for a program 
 0096  72 48                    	JB	GOMERR		;BRIF no room left 
 0098  3B 1E 0000 E             	CMP	BX,WORD PTR TXTTAB	;Is new MAXMEM big enough? 
 009C  76 42                    	JBE	GOMERR		;BRIF new MAXMEM smaller than data area 
 009E  8B D8                    MAXRQ1:	MOV	BX,AX 
 00A0  2B 1E 0000 E             	SUB	BX,WORD PTR MAXMEM	;Calc. seg. size difference 
 00A4  A3 0000 E                	MOV	WORD PTR MAXMEM,AX	;Memory request 
 00A7  01 1E 0000 E             	ADD	WORD PTR TOPMEM,BX 
 00AB  01 1E 0000 E             	ADD	WORD PTR STKLOW,BX 
 00AF  01 1E 0000 E             	ADD	WORD PTR FILTAB,BX 
 00B3  01 1E 0000 E             	ADD	WORD PTR MEMSIZ,BX 
 00B7  5B                       	POP	BX		;Return address (BX saved by CLEARC) 
 00B8  E8 0000 E                	CALL	CLEARC 
 00BB  53                       	PUSH	BX		;Return address (BX saved by CLEARC) 
                                 
                                ;Set up program segment prefix 
 00BC  8C DA                    	MOV	DX,DS 
 00BE  B4 26                    	MOV	AH,LOW 38D	;Function ^H26 
 00C0  CD 21                    	INT	33D		;MSDOS function request 
                                 
                                ;Print free bytes message 
 00C2  F6 06 0000 E FF          	TEST	BYTE PTR FREFLG,LOW 255D	;BYTES FREE message flag 
 00C7  75 16                    	JNZ	MAPINX		;Exit - message not to be printed 
 00C9  8B 1E 0000 E             	MOV	BX,WORD PTR MEMSIZ 
 00CD  2B 1E 0000 E             	SUB	BX,WORD PTR TXTTAB 
 00D1  4B                       	DEC	BX 
 00D2  4B                       	DEC	BX 
 00D3  E8 0000 E                	CALL	LINPRT		;PRINT # OF BYTES FREE 
 00D6  BB 0000 R                	MOV	BX,OFFSET WORDS	;TYPE THE HEADING 
 00D9  E8 0000 E                	CALL	STROUT		;"BYTES FREE" 
 00DC  E8 0000 E                	CALL	CRDO		;PRINT CARRIAGE RETURN 
 00DF  C3                       MAPINX:	RET 
                                 
 00E0  E9 0000 E                GOMERR:	JMP	OMERR 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:51:16
 
ITSA86 - Resident Initialization for I8086                  Page     1-18
Initialization Support Routines                             

                                	PAGE 
                                	SUBTTL  End of the New CS: 
                                 
                                ;All code loaded after this label is resident only until routine MAPINI 
                                ;initializes the new memory map. 
                                 
 00E3                           CSEND: 
                                 
                                ;MAPCLC - Calculate the final memory map limits. 
                                ;Entry  - CSWFLG = Flag nonzero when /C: option exists 
                                ;         CSWSIZ = /C: option size 
                                ;         MSWFLG = Flag nonzero when /M: option exists 
                                ;         MSWSIZ = /C: option size 
                                ;Exit   - NEWDS  = Final DS: address 
                                ;         MSWSIZ = Highest memory address (future MAXMEM) 
                                ; 
 00E3                           MAPCLC: 
                                ;Validate/get COM buffer size 
 00E3  BA 00E3 R                	MOV	DX,OFFSET CSEND	;Location of COM buffer (New end of CS:) 
 00E6  83 C2 0F                 	ADD	DX,15D		;Round to next higher paragraph 
 00E9  B1 04                    	MOV	CL,LOW 4D 
 00EB  D3 EA                    	SHR	DX,CL 
 00ED  8C C9                    	MOV	CX,CS 
 00EF  03 CA                    	ADD	CX,DX		;Segment offset of COM buffer 
 00F1  8B 16 0000 E             	MOV	DX,WORD PTR CSWSIZ	;Segment size request 
 00F5  F6 06 0000 E FF          	TEST	BYTE PTR CSWFLG,LOW 255D	;Was there a /C: opt - PSW.Z for SETCBF 
 00FA  E8 0000 E                	CALL	SETCBF		;Report buffer size/loc 
 00FD  72 E1                    	JB	GOMERR		; & validate size 
 00FF  89 16 0000 E             	MOV	WORD PTR CSWSIZ,DX	;COM buffer size 
                                 
                                ;Calculate NEWDS (New DS:) 
                                ; DX  - COM buffer size 
                                ; NEWDS = (D+15/16) + DS: 
 0103  83 C2 0F                 	ADD	DX,15D		;Round off to paragraph 
 0106  D1 EA                    	SHR	DX,1 
 0108  D1 EA                    	SHR	DX,1 
 010A  D1 EA                    	SHR	DX,1 
 010C  D1 EA                    	SHR	DX,1 
 010E  03 D1                    	ADD	DX,CX		;Skip COM buffer 
 0110  70 CE                    	JO	GOMERR 
 0112  89 16 0000 E             	MOV	WORD PTR NEWDS,DX 
                                 
                                ;Validate the /M option or calculate the maximum possible MAXMEM 
                                ;1. Calcualte maximum MAXMEM based on the NEWDS 
                                ;2. If there was no /M option then goto 4 
                                ;3. Compare /M to the maximum and declare an error if /M is larger 
                                ;4. Save the new memory size as MSWSIZ 
 0116  53                       	PUSH	BX		;Save text pointer 
 0117  2E: 8B 1E 0000 E         	MOV	BX,WORD PTR CPMMEM 
 011C  2B DA                    	SUB	BX,DX		;Avail paragraphs 
 011E  72 C0                    	JB	GOMERR 
 0120  BA 0FFF                  	MOV	DX,OFFSET 65535D/16D	;Max usable paragraphs 
 0123  3B DA                    	CMP	BX,DX 
 0125  72 02                    	JB	MAXREQ		;More than enough 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:51:16
 
ITSA86 - Resident Initialization for I8086                  Page     1-19
End of the New CS:                                          

 0127  8B DA                    	MOV	BX,DX 
 0129  B1 04                    MAXREQ:	MOV	CL,LOW 4D 
 012B  D3 E3                    	SHL	BX,CL		;DX has valid maximum bytes 
 012D  F6 06 0000 E FF          	TEST	BYTE PTR MSWFLG,LOW 255D 
 0132  74 0A                    	JZ	NOMOPT		;No memory option 
 0134  8B 16 0000 E             	MOV	DX,WORD PTR MSWSIZ	;Get /M: size 
 0138  3B DA                    	CMP	BX,DX 
 013A  72 A4                    	JB	GOMERR		;Not enough for request 
 013C  8B DA                    	MOV	BX,DX 
 013E  89 1E 0000 E             NOMOPT:	MOV	WORD PTR MSWSIZ,BX	;New MAXMEM 
                                ;       ADDI    BX,^D256 
                                ;       JB      MAXRQ1                  ;BRIF very large MAXMEM, value OK 
                                ;       CMP     BX,TXTTAB               ;Is new MAXMEM big enough? 
                                ;       JBE     GOMERR                  ;BRIF new MAXMEM smaller than data area 
 0142  5B                       	POP	BX 
 0143  C3                       	RET 
                                 
                                ;SEGOFF     Convert end of memory segment to offset from current DS 
                                ; 
                                ;   On entry:   BX=last segment in memory 
                                ;               DS=current data segment 
                                ; 
                                ;   On exit:    BX=offset from current segment to paragraph specified by BX 
                                ;               Other registers unchanged, flags modified 
                                ; 
                                	PUBLIC	SEGOFF 
                                	EXTRN	OMERR:NEAR 
                                 
 0144  51                       SEGOFF:	PUSH	CX 
 0145  8C D9                    	MOV	CX,DS 
 0147  2B D9                    	SUB	BX,CX		;[BX]=number of paragraphs free for DSEG 
 0149  76 0F                    	JBE	SGOFER		;BRIF last segment is less than current 
 014B  B9 0FFF                  	MOV	CX,7777O	;[CX]=max num of paragraphs BASIC could use 
 014E  3B D9                    	CMP	BX,CX 
 0150  76 02                    	JBE	LESS64		;Brif less than 64k bytes available 
 0152  8B D9                    	MOV	BX,CX		;don't need more than 64k bytes 
 0154                           LESS64: 
 0154  B1 04                    	MOV	CL,LOW 4 
 0156  D3 E3                    	SHL	BX,CL		;convert paragraphs to bytes 
 0158  59                       	POP	CX		;restore caller's CX 
 0159  C3                       	RET 
 015A  E9 0000 E                SGOFER:	JMP	OMERR 
                                 
 015D                           CSEG	ENDS 
                                	END 

Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:51:16
 
ITSA86 - Resident Initialization for I8086                  Symbols-1
                                                             

Macros:

		N a m e			Lines

ACRLF  . . . . . . . . . . . . .  	   2
ADR  . . . . . . . . . . . . . .  	   1
CALLOS . . . . . . . . . . . . .  	   4
CHRGET . . . . . . . . . . . . .  	   1
COMPAR . . . . . . . . . . . . .  	   2
DBGBRK . . . . . . . . . . . . .  	   1
DC . . . . . . . . . . . . . . .  	   6
DJNZ . . . . . . . . . . . . . .  	   2
FSIGN  . . . . . . . . . . . . .  	   1
GETYPE . . . . . . . . . . . . .  	   1
INS86  . . . . . . . . . . . . .  	  13
INST . . . . . . . . . . . . . .  	   1
LDDR . . . . . . . . . . . . . .  	   8
LDIR . . . . . . . . . . . . . .  	   8
MOVRI  . . . . . . . . . . . . .  	   6
OUTCHR . . . . . . . . . . . . .  	   1
POPR . . . . . . . . . . . . . .  	   2
PUSHM  . . . . . . . . . . . . .  	   5
PUSHR  . . . . . . . . . . . . .  	   2
ROFFST . . . . . . . . . . . . .  	   2
SYNCHK . . . . . . . . . . . . .  	   2

Segments and Groups:

                N a m e         	Size	Align	Combine Class

CSEG . . . . . . . . . . . . . .  	015D	PARA	PUBLIC	'CODESG'
DSEG . . . . . . . . . . . . . .  	0000	PARA	PUBLIC	'DATASG'

Symbols:            

                N a m e         	Type	Value	Attr         

ALTAIR . . . . . . . . . . . . .  	Number	0000	
ANSI . . . . . . . . . . . . . .  	Number	0001	
ASCBS  . . . . . . . . . . . . .  	Number	0008	
ASCCR  . . . . . . . . . . . . .  	Number	000D	
ASCCTC . . . . . . . . . . . . .  	Number	0003	
ASCCTS . . . . . . . . . . . . .  	Number	0013	
ASCCTZ . . . . . . . . . . . . .  	Number	001A	
ASCESC . . . . . . . . . . . . .  	Number	001B	
ASCLF  . . . . . . . . . . . . .  	Number	000A	
ASCSPC . . . . . . . . . . . . .  	Number	0020	
ASCTAB . . . . . . . . . . . . .  	Number	0009	

BASDEB . . . . . . . . . . . . .  	Number	0000	
BASVAR . . . . . . . . . . . . .  	L NEAR	0033	CSEG	Global
BASVRD . . . . . . . . . . . . .  	L NEAR	0040	CSEG
BEEPSW . . . . . . . . . . . . .  	Number	0001	
BINCSW . . . . . . . . . . . . .  	Number	0000	
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:51:16
 
ITSA86 - Resident Initialization for I8086                  Symbols-2
                                                             

BINFID . . . . . . . . . . . . .  	Number	00FF	
BLKCPY . . . . . . . . . . . . .  	L NEAR	0065	CSEG
BLODSW . . . . . . . . . . . . .  	Number	0001	
BSVFID . . . . . . . . . . . . .  	Number	00FD	
BUFLEN . . . . . . . . . . . . .  	Number	00FF	
BVTAB  . . . . . . . . . . . . .  	L NEAR	002B	CSEG

CASSW  . . . . . . . . . . . . .  	Number	0000	
CHSEAT . . . . . . . . . . . . .  	Number	0001	
CLEARC . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
CLMWID . . . . . . . . . . . . .  	Number	000E	
CMPUTN . . . . . . . . . . . . .  	Number	0000	
COMMNT . . . . . . . . . . . . .  	Number	0000	
CONSSW . . . . . . . . . . . . .  	Number	0001	
CONTO  . . . . . . . . . . . . .  	Number	000F	
CONTRO . . . . . . . . . . . . .  	Number	0001	
CPM  . . . . . . . . . . . . . .  	Number	0001	
CPM110 . . . . . . . . . . . . .  	Number	0000	
CPM2 . . . . . . . . . . . . . .  	Number	0001	
CPM86  . . . . . . . . . . . . .  	Number	0000	
CPMA75 . . . . . . . . . . . . .  	Number	0000	
CPMADD . . . . . . . . . . . . .  	Number	0000	
CPMCON . . . . . . . . . . . . .  	Number	0000	
CPMLIF . . . . . . . . . . . . .  	Number	0000	
CPMMDS . . . . . . . . . . . . .  	Number	0000	
CPMMEM . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
CPMPER . . . . . . . . . . . . .  	Number	0000	
CPMRSH . . . . . . . . . . . . .  	Number	0000	
CPMSBC . . . . . . . . . . . . .  	Number	0000	
CPMSER . . . . . . . . . . . . .  	Number	0000	
CRDO . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
CRONLY . . . . . . . . . . . . .  	Number	0000	
CSEND  . . . . . . . . . . . . .  	L NEAR	00E3	CSEG
CSWFLG . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
CSWSIZ . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
CURLIN . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
C_BUFF . . . . . . . . . . . . .  	Number	001A	
C_CLOS . . . . . . . . . . . . .  	Number	0010	
C_DCIO . . . . . . . . . . . . .  	Number	0006	
C_DELE . . . . . . . . . . . . .  	Number	0013	
C_GDRV . . . . . . . . . . . . .  	Number	0019	
C_MAKE . . . . . . . . . . . . .  	Number	0016	
C_OPEN . . . . . . . . . . . . .  	Number	000F	
C_PARS . . . . . . . . . . . . .  	Number	0029	
C_PRTO . . . . . . . . . . . . .  	Number	0005	
C_RBR  . . . . . . . . . . . . .  	Number	0027	
C_READ . . . . . . . . . . . . .  	Number	0014	
C_RENA . . . . . . . . . . . . .  	Number	0017	
C_REST . . . . . . . . . . . . .  	Number	000D	
C_RNDR . . . . . . . . . . . . .  	Number	0021	
C_RNDW . . . . . . . . . . . . .  	Number	0022	
C_SDRV . . . . . . . . . . . . .  	Number	000E	
C_SEAR . . . . . . . . . . . . .  	Number	0011	

Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:51:16
 
ITSA86 - Resident Initialization for I8086                  Symbols-3
                                                             

DATOFS . . . . . . . . . . . . .  	Number	0039	
DATPSC . . . . . . . . . . . . .  	Number	0080	
DBLCHR . . . . . . . . . . . . .  	Number	0000	
DBLTRN . . . . . . . . . . . . .  	Number	0000	
DEBUG  . . . . . . . . . . . . .  	Text  		
DISK . . . . . . . . . . . . . .  	Number	0001	
DMC  . . . . . . . . . . . . . .  	Number	0000	
DOS  . . . . . . . . . . . . . .  	Number	0000	
DRVPOS . . . . . . . . . . . . .  	Number	0000	
DUPONT . . . . . . . . . . . . .  	Number	0000	
DYNCOM . . . . . . . . . . . . .  	Number	0001	

EDIT80 . . . . . . . . . . . . .  	Number	0000	
ERRLIN . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
ESCCTL . . . . . . . . . . . . .  	Number	0000	
EXIDY  . . . . . . . . . . . . .  	Number	0000	

FAST . . . . . . . . . . . . . .  	Number	0001	
FCBSIZ . . . . . . . . . . . . .  	Number	0026	
FCB_DT . . . . . . . . . . . . .  	Number	001D	
FCB_DV . . . . . . . . . . . . .  	Number	0007	
FCB_EX . . . . . . . . . . . . .  	Number	0013	
FCB_FN . . . . . . . . . . . . .  	Number	0008	
FCB_FS . . . . . . . . . . . . .  	Number	0017	
FCB_FT . . . . . . . . . . . . .  	Number	0010	
FCB_NR . . . . . . . . . . . . .  	Number	0027	
FCB_RC . . . . . . . . . . . . .  	Number	0015	
FCB_RN . . . . . . . . . . . . .  	Number	0028	
FC_ASC . . . . . . . . . . . . .  	Number	0000	
FC_BIN . . . . . . . . . . . . .  	Number	0001	
FDBSIZ . . . . . . . . . . . . .  	Number	0039	
FD_DAT . . . . . . . . . . . . .  	Number	00C2	
FD_LOG . . . . . . . . . . . . .  	Number	00BD	
FD_OPS . . . . . . . . . . . . .  	Number	00C0	
FD_PHY . . . . . . . . . . . . .  	Number	00BB	
FD_SIZ . . . . . . . . . . . . .  	Number	00B9	
FILTAB . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
FIVDSK . . . . . . . . . . . . .  	Number	0001	
FIVEO  . . . . . . . . . . . . .  	Number	0001	
FIVLPT . . . . . . . . . . . . .  	Number	0001	
FIVMEM . . . . . . . . . . . . .  	Number	0001	
FKEYON . . . . . . . . . . . . .  	Number	0001	
FL_BKC . . . . . . . . . . . . .  	Number	0080	
FNAML  . . . . . . . . . . . . .  	Number	000B	
FREFLG . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
F_BAKC . . . . . . . . . . . . .  	Number	0032	
F_BREM . . . . . . . . . . . . .  	Number	0030	
F_CLOC . . . . . . . . . . . . .  	Number	002D	
F_CODE . . . . . . . . . . . . .  	Number	0031	
F_DEV  . . . . . . . . . . . . .  	Number	0034	
F_FCB  . . . . . . . . . . . . .  	Number	0007	
F_FLGS . . . . . . . . . . . . .  	Number	0037	
F_MODE . . . . . . . . . . . . .  	Number	0006	
F_NEXT . . . . . . . . . . . . .  	Number	0004	
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:51:16
 
ITSA86 - Resident Initialization for I8086                  Symbols-4
                                                             

F_NUL1 . . . . . . . . . . . . .  	Number	0000	
F_NUL2 . . . . . . . . . . . . .  	Number	0002	
F_NUL3 . . . . . . . . . . . . .  	Number	0033	
F_NUL4 . . . . . . . . . . . . .  	Number	0036	
F_NUL5 . . . . . . . . . . . . .  	Number	00BF	
F_NUM  . . . . . . . . . . . . .  	Number	0001	
F_ORCT . . . . . . . . . . . . .  	Number	002F	
F_POS  . . . . . . . . . . . . .  	Number	0038	
F_WID  . . . . . . . . . . . . .  	Number	0035	

GENBIN . . . . . . . . . . . . .  	Number	0001	
GENDSK . . . . . . . . . . . . .  	Number	0000	
GENIO  . . . . . . . . . . . . .  	Number	0001	
GESBC  . . . . . . . . . . . . .  	Number	0000	
GIO86  . . . . . . . . . . . . .  	Number	0001	
GOMERR . . . . . . . . . . . . .  	L NEAR	00E0	CSEG
GREADY . . . . . . . . . . . . .  	L NEAR	0028	CSEG
GW . . . . . . . . . . . . . . .  	Number	0001	
GWCASS . . . . . . . . . . . . .  	Number	0000	
GWDBUG . . . . . . . . . . . . .  	Number	0000	
G_BIN  . . . . . . . . . . . . .  	Number	001A	
G_BOT  . . . . . . . . . . . . .  	Number	001C	
G_CLS  . . . . . . . . . . . . .  	Number	0006	
G_EOF  . . . . . . . . . . . . .  	Number	0000	
G_GCW  . . . . . . . . . . . . .  	Number	0018	
G_GPS  . . . . . . . . . . . . .  	Number	0012	
G_GWD  . . . . . . . . . . . . .  	Number	0014	
G_LOC  . . . . . . . . . . . . .  	Number	0002	
G_LOF  . . . . . . . . . . . . .  	Number	0004	
G_OPN  . . . . . . . . . . . . .  	Number	000C	
G_RND  . . . . . . . . . . . . .  	Number	000A	
G_SCW  . . . . . . . . . . . . .  	Number	0016	
G_SIN  . . . . . . . . . . . . .  	Number	000E	
G_SOT  . . . . . . . . . . . . .  	Number	0010	
G_SWD  . . . . . . . . . . . . .  	Number	0008	

HEATH  . . . . . . . . . . . . .  	Number	0000	
HEXOCT . . . . . . . . . . . . .  	Number	0001	
HGHBIT . . . . . . . . . . . . .  	Number	0001	

I8086  . . . . . . . . . . . . .  	Number	0001	
I8251  . . . . . . . . . . . . .  	Number	0000	
IBMLIK . . . . . . . . . . . . .  	Number	0001	
IBMTOK . . . . . . . . . . . . .  	Number	0001	
INITSA . . . . . . . . . . . . .  	L NEAR	000C	CSEG	Global
INKEYF . . . . . . . . . . . . .  	Number	0001	
INLADD . . . . . . . . . . . . .  	Number	0000	
INSTSW . . . . . . . . . . . . .  	Number	0000	
INTEL  . . . . . . . . . . . . .  	Number	0000	
INTFHW . . . . . . . . . . . . .  	Number	0000	
INTFSW . . . . . . . . . . . . .  	Number	0000	
INTLEC . . . . . . . . . . . . .  	Number	0000	
INTROM . . . . . . . . . . . . .  	Number	0000	
ISC  . . . . . . . . . . . . . .  	Number	0000	
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:51:16
 
ITSA86 - Resident Initialization for I8086                  Symbols-5
                                                             

ISIS . . . . . . . . . . . . . .  	Number	0000	

JISKTN . . . . . . . . . . . . .  	Number	0000	

KANABS . . . . . . . . . . . . .  	Number	0000	
KANJFN . . . . . . . . . . . . .  	Number	0000	
KEYSTA . . . . . . . . . . . . .  	Number	0000	
KILLER . . . . . . . . . . . . .  	Number	0000	

LABKEY . . . . . . . . . . . . .  	Number	0001	
LEN2 . . . . . . . . . . . . . .  	Number	0001	
LEN3 . . . . . . . . . . . . . .  	Number	0001	
LENGTH . . . . . . . . . . . . .  	Number	0002	
LESS64 . . . . . . . . . . . . .  	L NEAR	0154	CSEG
LINLN  . . . . . . . . . . . . .  	Number	0050	
LINPRT . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
LISTEN . . . . . . . . . . . . .  	Number	0001	
LNGVAR . . . . . . . . . . . . .  	Number	0001	
LOKHED . . . . . . . . . . . . .  	Number	0000	
LONGI  . . . . . . . . . . . . .  	Number	0000	
LPT3 . . . . . . . . . . . . . .  	Number	0000	
LPTLEN . . . . . . . . . . . . .  	Number	0084	
LPTSW  . . . . . . . . . . . . .  	Number	0001	
LRUN . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External

MAPCLC . . . . . . . . . . . . .  	L NEAR	00E3	CSEG	Global
MAPINI . . . . . . . . . . . . .  	L NEAR	0043	CSEG	Global
MAPINX . . . . . . . . . . . . .  	L NEAR	00DF	CSEG
MAXMEM . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
MAXREQ . . . . . . . . . . . . .  	L NEAR	0129	CSEG
MAXRQ1 . . . . . . . . . . . . .  	L NEAR	009E	CSEG
MDS  . . . . . . . . . . . . . .  	Number	0000	
MDSISS . . . . . . . . . . . . .  	Number	0000	
MD_APP . . . . . . . . . . . . .  	Number	0008	
MD_RND . . . . . . . . . . . . .  	Number	0004	
MD_SQI . . . . . . . . . . . . .  	Number	0001	
MD_SQO . . . . . . . . . . . . .  	Number	0002	
MEMIMG . . . . . . . . . . . . .  	Number	0001	
MEMSIZ . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
MOSTEK . . . . . . . . . . . . .  	Number	0000	
MSWFLG . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
MSWSIZ . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
MULSEG . . . . . . . . . . . . .  	Number	0001	

NAMLEN . . . . . . . . . . . . .  	Number	0028	
NASCOM . . . . . . . . . . . . .  	Number	0000	
NATROM . . . . . . . . . . . . .  	Number	0000	
NBANKS . . . . . . . . . . . . .  	Number	0001	
NCRBAS . . . . . . . . . . . . .  	Number	0000	
NCRCAS . . . . . . . . . . . . .  	Number	0000	
NCRDEB . . . . . . . . . . . . .  	Number	0000	
NCRELS . . . . . . . . . . . . .  	Number	0000	
NCRLPT . . . . . . . . . . . . .  	Number	0001	
NECBAS . . . . . . . . . . . . .  	Number	0000	
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:51:16
 
ITSA86 - Resident Initialization for I8086                  Symbols-6
                                                             

NEWDS  . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
NMCOMT . . . . . . . . . . . . .  	Number	0002	
NMKEYF . . . . . . . . . . . . .  	Number	000A	
NMKEYT . . . . . . . . . . . . .  	Number	000E	
NMLINE . . . . . . . . . . . . .  	Number	0019	
NMLPT  . . . . . . . . . . . . .  	Number	0003	
NMPENT . . . . . . . . . . . . .  	Number	0001	
NMSTRT . . . . . . . . . . . . .  	Number	0004	
NOATDL . . . . . . . . . . . . .  	Number	0000	
NOCTLA . . . . . . . . . . . . .  	Number	0000	
NODOT  . . . . . . . . . . . . .  	Number	0000	
NODSKS . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
NOEDIT . . . . . . . . . . . . .  	Number	0000	
NOIOS  . . . . . . . . . . . . .  	Number	0000	
NOMOPT . . . . . . . . . . . . .  	L NEAR	013E	CSEG
NONULL . . . . . . . . . . . . .  	Number	0000	
NOPEKS . . . . . . . . . . . . .  	Number	0000	
NOROMP . . . . . . . . . . . . .  	Number	0000	
NORUBT . . . . . . . . . . . . .  	Number	0000	
NOUSR  . . . . . . . . . . . . .  	Number	0000	
NOVARP . . . . . . . . . . . . .  	Number	0000	
NUMLEV . . . . . . . . . . . . .  	Number	006E	
NUMTMP . . . . . . . . . . . . .  	Number	000A	
NUMTRP . . . . . . . . . . . . .  	Number	0015	

OEMRAM . . . . . . . . . . . . .  	Number	0000	
OMERR  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ONTEL  . . . . . . . . . . . . .  	Number	0000	

PALSIZ . . . . . . . . . . . . .  	Number	0000	
PANBAS . . . . . . . . . . . . .  	Number	0000	
PCS  . . . . . . . . . . . . . .  	Number	0000	
PLAYSW . . . . . . . . . . . . .  	Number	0001	
PROFID . . . . . . . . . . . . .  	Number	00FE	
PURE . . . . . . . . . . . . . .  	Number	0001	

QUEUE  . . . . . . . . . . . . .  	Number	0001	

READY  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
REALIO . . . . . . . . . . . . .  	Number	0001	
RMX  . . . . . . . . . . . . . .  	Number	0000	
RSHACK . . . . . . . . . . . . .  	Number	0000	
RSTLES . . . . . . . . . . . . .  	Number	0001	

SAVSEG . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
SBC  . . . . . . . . . . . . . .  	Number	0000	
SBC86  . . . . . . . . . . . . .  	Number	0000	
SCP  . . . . . . . . . . . . . .  	Number	0001	
SCRN86 . . . . . . . . . . . . .  	Number	0001	
SCRNIO . . . . . . . . . . . . .  	Number	0001	
SCROLT . . . . . . . . . . . . .  	Number	0001	
SEGINI . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
SEGOFF . . . . . . . . . . . . .  	L NEAR	0144	CSEG	Global
SETCBF . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:51:16
 
ITSA86 - Resident Initialization for I8086                  Symbols-7
                                                             

SGOFER . . . . . . . . . . . . .  	L NEAR	015A	CSEG
SGSATS . . . . . . . . . . . . .  	Number	0000	
SHORTJ . . . . . . . . . . . . .  	Number	0001	
SHTCHN . . . . . . . . . . . . .  	Number	0000	
SHTERR . . . . . . . . . . . . .  	Number	0000	
SHTINS . . . . . . . . . . . . .  	Number	0000	
SHTLHM . . . . . . . . . . . . .  	Number	0000	
SHTLIN . . . . . . . . . . . . .  	Number	0000	
SHTPRO . . . . . . . . . . . . .  	Number	0000	
SHTREN . . . . . . . . . . . . .  	Number	0000	
SIXDIG . . . . . . . . . . . . .  	Number	0000	
SMALL  . . . . . . . . . . . . .  	Number	0000	
SPCDSK . . . . . . . . . . . . .  	Number	0000	
SPCNDS . . . . . . . . . . . . .  	Number	0000	
STKLOW . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
STRING . . . . . . . . . . . . .  	Number	0001	
STROUT . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
STRSIZ . . . . . . . . . . . . .  	Number	0003	
SUPRSH . . . . . . . . . . . . .  	Number	0001	
SWAPSW . . . . . . . . . . . . .  	Number	0001	

TEK  . . . . . . . . . . . . . .  	Number	0000	
TEMP8  . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
TETRA  . . . . . . . . . . . . .  	Number	0000	
TIMSHR . . . . . . . . . . . . .  	Number	0000	
TOPMEM . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
TRNCHR . . . . . . . . . . . . .  	Number	0000	
TRSER2 . . . . . . . . . . . . .  	Number	0000	
TRUANS . . . . . . . . . . . . .  	Number	0000	
TRUROM . . . . . . . . . . . . .  	Number	0001	
TSDISK . . . . . . . . . . . . .  	Number	0000	
TSLPT  . . . . . . . . . . . . .  	Number	0000	
TXTTAB . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External

VARTAB . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External

WORDS  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	Global

XTNSYS . . . . . . . . . . . . .  	Number	0000	

Z80  . . . . . . . . . . . . . .  	Number	0001	
Z80MAC . . . . . . . . . . . . .  	Number	0001	

_OFFST . . . . . . . . . . . . .  	Number	00C2	


    828 Source  Lines
    911 Total   Lines
    353 Symbols

  39264 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
