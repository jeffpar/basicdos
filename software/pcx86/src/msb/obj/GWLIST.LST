Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Page     1-1
                                                            

                                ; [ This translation created 10-Feb-83 by Versi
				on 4.3 ] 
                                 
 0008                           	.RADIX  8		; To be safe 
                                 
 0000                           CSEG	SEGMENT PUBLIC 'CODESG' 
                                	ASSUME  CS:CSEG 
                                 
                             C  INCLUDE	BINTRP.INC 
                             C  ; 
                             C  ;               Include file for BINTRP.ASM 
                             C  ; 
                             C   
                             C  INCLUDE OEM.INC                   ; General def
				initions 
                             C  ; [ This translation created 10-Feb-83 by Versi
				on 4.3 ] 
                             C   
                             C  	PAGE	,132D 
                             C  	SUBTTL  Common file to produce 2-segment 8086 GW-CPM BASIC 
                             C   
                             C  	.SALL 
                             C   
 000A                        C  	.RADIX	10 
 = 0000                      C  	OEMRAM=0D 
                             C  ;Pascal program HFILE searches for the following line - DO NOT MODIFY 
                             C  ;** (VERSION SPECIFIC VALUES) ************************************************ 
 = 0019                      C  	NMLINE=25		;Max screen display text lines 
 = 0001                      C  	NBANKS=1		;Number of graphic planes 
 = 0000                      C  	PALSIZ=0		;Size of OEM color palette 
 = 0000                      C  	DBLCHR=0		;Editor support for KANJI chars 
 = 0000                      C  	KANABS=0		;Kana BASIC (Japanese JIS codes) 
 = 0000                      C  	KANJFN=0		;KANJI String Functions KPOS, KLEN .. 
 = 0000                      C  	JISKTN=0		;&K, &J constants (KANJI) 
 = 0001                      C  	SUPRSH=1		;1=super shift key feature 
 = 000A                      C  	NMKEYF=10		;number of function keys 
 = 000E                      C  	NMKEYT=14		;number of function key traps 
 = 0001                      C  	FKEYON=1		;yes=display function keys 
 = 0001                      C  	SCROLT=1		;Line 25 allocated for status only 
 = 0001                      C  	PLAYSW=1		;for PLAY statement 
 = 0001                      C  	BEEPSW=1		;for SOUND, BEEP statements 
 = 0003                      C  	NMLPT=3			;number of line printers 
 = 0001                      C  	CONSSW=1		;Device CONS: 
 = 0002                      C  	NMCOMT=2		;number of COMmunications ports 
 = 0001                      C  	NMPENT=1		;number of light pens 
 = 0004                      C  	NMSTRT=4		;number of joysticks 
 = 0000                      C  	GWCASS=0		;Cassette switch (CSAVE,CLOAD,MOTOR) 
 = 0001                      C  	IBMLIK=1		;IBM compatibility package 
 = 0001                      C  	IBMTOK=1		;IBM token compatibility 
 = 0001                      C  	DYNCOM=1		;Dynamic communication buffers 
                             C  ;** (END OF VERSION SPECIFIC VALUES) ***************************************** 
                             C  ;Pascal program HFILE searches for the previous line - DO NOT MODIFY 
                             C  ; 
 = 0015                      C  	NUMTRP=NMKEYT+NMCOMT+NMPENT+NMSTRT 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Page     1-2
Common file to produce 2-segment 8086 GW-CPM BASIC          

 = 0001                      C  	GW=1			;GW BASIC 
 = 0000                      C  	ESCCTL=0		;Escape Sequence processing in SCROUT 
 = 0000                      C  	GWDBUG=0		;DEBUG statement (TEST VERSIONS ONLY) 
                             C  				; Support is in BINTRP.MAC and GWSTS.MAC 
 = 0000                      C  	SIXDIG=0		;# of digits of accuracy assumed when formatting 
                             C  				;single precision numbers for output. 
                             C  				; 0 := 7 digits 
                             C  				; 1 := 6 digits 
 = 0000                      C  	CASSW=0			;CASSETTE SWITCH 
 = 0001                      C  	LABKEY=1		;^T (LABEL) key capability 
 = 0001                      C  	HGHBIT=1		;8-bit characters (ASCII & Graphics) 
 = 0001                      C  	QUEUE=1			;Queued painting algorithm (vs. stack) 
 = 0001                      C  	GIO86=1			;BASIC-86 Generalized I/O 
 = 0001                      C  	SCRNIO=1		;Screen editor 
 = 0001                      C  	SCRN86=1		;8086 Screen editor 
 = 0001                      C  	I8086=1			;CROSS ASSEMBLING FOR 8086 
 = 0001                      C  	MULSEG=1		;MULTI-SEGMENT 8086 BASIC 
 = 0000                      C  	SMALL=0			;"SMALL" VERSION OF 8086 BASIC IF SET 
 = 0001                      C  	TRUROM=1 
 = 0000                      C  	SBC86=0			;SBC 86/02 BOARD? 
 = 0001                      C  	SHORTJ=1		;USE INTRA-SEGMENT SHORT JUMPS 
                             C  				;IN 8086 CODE 
 = 0001                      C  	LNGVAR=1		;LONG VARIABLE NAME SUPPORT (EXTENDED ONLY) 
 = 0000                      C  	SHTERR=0		;SHORT (2 CHAR) ERROR MESSAGES 
 = 0000                      C  	SHTINS=0		;INSTR IN NON-FAST LEN2 VERSIONS 
 = 0000                      C  	SHTLHM=0		;LEFT HAND SIDE MID IN NON FAST LEN2 VERSIONS 
 = 0000                      C  	SHTCHN=0		;ALLOW CHAIN IN NON-5.0 
 = 0000                      C  	SHTPRO=0		;ALLOW PROTECTED FILES IN NON-FIVDSK 
 = 0000                      C  	SHTLIN=0		;ALLOW LINE INPUT IN NON-EXTENDED NON-FAST 
 = 0000                      C  	SHTREN=0		;ALLOW RENUM IN NON-FST VERSIONS 
 = 0001                      C  	INKEYF=1		;ADDS INKEY$ FUNCTION 
 = 0000                      C  	NOIOS=0			;NO I/O STATMENTS (INP,OUT, WAIT) 
 = 0000                      C  	NOPEKS=0		;NO PEEK, POKE 
 = 0000                      C  	NOUSR=0			;NO USR 
 = 0000                      C  	NOCTLA=0		;NO CONTROL-A IN EXTENDED 
 = 0000                      C  	NORUBT=0		;NO RUBOUT 
 = 0000                      C  	NOROMP=0		;NO ROM PROGRAM FEATURE 
 = 0000                      C  	NOATDL=0		;NO AUTO DELETE IN NON-FAST EXTENDED 
 = 0000                      C  	NODOT=0			;NO DOT IN LEN2 
 = 0000                      C  	NOEDIT=0		;NO EDIT COMMAND 
 = 0000                      C  	CRONLY=0		;ONLY PUT OUT CR, NOT CRLF TO TERMINAL 
                             C  				;AND FILES 
 = 0000                      C  	NONULL=0		;NO NULL COMMAND, PUT OUT NULLS IN CRDO & OUTCH1 
 = 0000                      C  	NOVARP=0		;NO VARPTR FUNCTION 
 = 0001                      C  	FIVEO=1			;GENERATE VERSION WITH RELEASE 5.0 FEATURES 
 = 0001                      C  	FIVMEM=1 
 = 0001                      C  	ANSI=1 
 = 0001                      C  	FIVDSK=1		;5.0 NEW DSK CODE 
 = 0001                      C  	FIVLPT=1		;WIDTH LPRINT AND 255 FEATURE 
 = 0001                      C  	HEXOCT=1		;&H..., HEX$, &O..., OCT$ 
 = 0000                      C  	BINCSW=0		;&B..., BIN$ 
 = 0001                      C  	BLODSW=1		;BLOAD, BSAVE COMMANDS 
 = 0001                      C  	MEMIMG=1		;MEMORY IMAGE FILES 
 = 0001                      C  	GENBIN=1 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Page     1-3
Common file to produce 2-segment 8086 GW-CPM BASIC          

                             C   
 = 0000                      C  	TRUANS=0		;TRUE ANSI VERSION (STATIC SCAN, ON ERROR) 
 = 0000                      C  	COMMNT=0		;DONT WANT BIG COMMENT 
 = 0000                      C  	INTEL=0			;INTEL PROPRIETARY 
 = 0000                      C  	INTFSW=0		;INTEL FLOATING POINT 
 = 0000                      C  	INTFHW=0 
 = 0000                      C  	RMX=0			;INTEL RMX VERSION 
 = 0000                      C  	EDIT80=0		;FOR EDIT80 I/O ROUTINES 
 = 0000                      C  	RSHACK=0 
 = 0000                      C  	INTLEC=0 
 = 0002                      C  	LENGTH=2		;  1 MEANS 8K, 2 MEANS 12K 
 = 0000                      C  	BASDEB=0		;WHETHER DBG WILL BE LOADED WITH BASIC 
 = 0001                      C  	RSTLES=1		;WHETHER BASIC WILL USE RST LOCATIONS 
                             C  				;TO MAKE ITSELF SMALLER & QUICKER 
 = 0001                      C  	REALIO=1		;WHETHER SIMULATE (=0) OR ON MACHINE (=1) 
 = 0001                      C  	GENIO=1			;USE G/P ROUTINES 
 = 0001                      C  	CHSEAT=1		;CHSNS eats chars 
 = 0000                      C  	GENDSK=0		;USE G/P DSK CODE 
 = 0000                      C  	LONGI=0			;WHETHER WE ASK "TERMINAL WIDTH?" 
                             C  				;AND WANT SIN-TAN-COS-ATN? 
 = 0000                      C  	INSTSW=0		;FOR INSTR INSTRUCTION 
 = 0001                      C  	SWAPSW=1		;FOR SWAP STATEMENT 
 = 0000                      C  	MDS=0			;FOR INTEL MDS SYSTEMS 
 = 0000                      C  	SBC=0			;FOR INTEL SINGLE BOARD COMPUTER 
                             C  				;1=SBC 80/10, 2=SBC 80/20 
 = 0001                      C  	PURE=1			;ON FOR PURE CODE 
 = 0000                      C  	KILLER=0		;FOR ROM VERSION THAT WONT RUN IN RAM 
 = 0000                      C  	INTROM=0 
 = 0001                      C  	LPTSW=1 
 = 0001                      C  	NCRLPT=1 
 = 0000                      C  	NCRCAS=0 
 = 0000                      C  	ISC=0			;FOR ISC VERSION 
 = 0000                      C  	LPT3=0			;THREE LPT DRIVER VERSION(QUME,OKIA,CENT) 
 = 0000                      C  	TSLPT=0 
                             C   
 = 0000                      C  	DOS=0			;ON TO GEN ROUTINES FOR DOS 
 = 0001                      C  	DISK=1			;FILE I/O FEATURES 
 = 0000                      C  	TIMSHR=0		;NO TIME-SHARING DISK 
 = 0000                      C  	TSDISK=0		;NO TIME-SHARING DISK FOR US 
 = 0000                      C  	SPCDSK=0		;MAY HAVE MM'S DISK CODE 
 = 0000                      C  	SPCNDS=0 
 = 0001                      C  	FAST=1			;CONSTANT COMPRESSION, RENUM & FRIENDS 
 = 0000                      C  	KEYSTA=0 
 = 0000                      C  	ISIS=0			;FOR VERSION TO RUN UNDER INTEL'S ISIS II DOS 
 = 0000                      C  	MDSISS=0		;FOR MDS VERSION THAT RUNS UNDER ISIS-II 
 = 0001                      C  	CPM=1			;FOR CPM compatible operating systems 
 = 0001                      C  	CPM2=1			;VERSION 2. CPM 
 = 0000                      C  	CPM86=0			;FOR CP/M-86 operating system 
 = 0001                      C  	SCP=1			;MS-DOS operating system 
 = 0000                      C  	CPMCON=0 
 = 0000                      C  	CPMSER=0		;CHECK CPM SERIAL #'S 
 = 0000                      C  	CPMADD=0		;FOR VERSION TO RUN ON ADDS CPM 
 = 0000                      C  	CPMA75=0		;FOR VERSION TO RUN ON ADDS SYSTEM 75 
                             C  				;CP/M 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Page     1-4
Common file to produce 2-segment 8086 GW-CPM BASIC          

 = 0000                      C  	CPMRSH=0		;FOR RADIO SHACK CPM/M 
 = 0000                      C  	CPM110=0		;FOR CP/M @1100 HEX (INTERALIA) 
 = 0000                      C  	CPMSBC=0		;FOR VERSION TO RUN ON SBC CP/M AT 4100H 
 = 0000                      C  	CPMPER=0		;FOR PERTEC VERSION OF CPM 
 = 0000                      C  	CPMLIF=0		;LIFEBOAT CP/M AT 4200H 
 = 0000                      C  	CPMMDS=0		;MOHAWK DATA SYSTEMS CP/M 
 = 0000                      C  	CPMCON=0 
 = 0000                      C  	Z80=0 
 = 0001                      C  	DISK=1 
 = 0001                      C  	NCRLPT=1 
 = 0001                      C  	RSTLES=1 
 = 0000                      C  	DRVPOS=CPMADD 
 = 0000                      C  	TRNCHR=CPMADD 
 = 0000                      C  	INLADD=CPMADD 
 = 0001                      C  	LISTEN=1		;ON MEANS LISTEN FOR ^C 
 = 0001                      C  	LISTEN=1 
 = 0000                      C  	LEN2=0 
 = 0001                      C  	LEN2=1 
 = 0001                      C  	HEXOCT=1 
 = 0002                      C  	LENGTH=2 
 = 0001                      C  	RSTLES=1 
 = 0001                      C  	FIVLPT=1 
 = 0000                      C  	I8251=0			;THIS SWITCH IS USED FOR ROSEMOUNT VERSION 
 = 0001                      C  	CONTRO=1		;ALLOW ^O 
 = 0001                      C  	LEN3=LEN2 OR CASSW 
                             C   
                             C   
                             C   
 = 0001                      C  	STRING=1 
 = 0001                      C  	NCRLPT=1 
                             C   
                             C  ; *** OEM Switches which need to be defaulted to 0 
                             C  ; 
 = 0000                      C  	CMPUTN=0 
 = 0000                      C  	DUPONT=0 
 = 0000                      C  	EXIDY=0 
 = 0000                      C  	GESBC=0 
 = 0000                      C  	HEATH=0 
 = 0000                      C  	LOKHED=0 
 = 0000                      C  	MOSTEK=0 
 = 0000                      C  	TEK=0 
 = 0000                      C  	TRSER2=0 
 = 0000                      C  	NASCOM=0 
 = 0000                      C  	NATROM=0 
 = 0000                      C  	NCRBAS=0 
 = 0000                      C  	NCRDEB=0 
 = 0000                      C  	NCRDEB=0 
 = 0000                      C  	NCRELS=0 
 = 0000                      C  	ONTEL=0 
 = 0000                      C  	PCS=0 
 = 0000                      C  	SGSATS=0 
 = 0000                      C  	ALTAIR=0 
 = 0000                      C  	DMC=0 
 = 0000                      C  	PANBAS=0 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Page     1-5
Common file to produce 2-segment 8086 GW-CPM BASIC          

 = 0000                      C  	XTNSYS=0 
 = 0000                      C  	NECBAS=0 
                             C  ;******************************************************************* 
                             C  ; Z80 related macros 
                             C  ;******************************************************************* 
 = 0001                      C  	Z80=1			;FOR VERSION THAT RUNS ON BOTH 
                             C  				;8080'S AND ZILOG Z-80'S 
 = 0001                      C  	Z80MAC=1		;USE 8080 MACROS INSTEAD OF Z80 INSTRUCTIONS 
 = 0000                      C  	Z80=0 
 = 0001                      C  	Z80=1 
                             C  LDIR	MACRO 
                             C  	MOV	WORD PTR A,WORD PTR M 
                             C  	STAX	D 
                             C  	INXF	H 
                             C  	INXF	D 
                             C  	DCXF	B 
                             C  	MOV	WORD PTR A,WORD PTR B 
                             C  	ORA	C 
                             C  	JNZ	_-8D 
                             C  ENDM 
                             C  LDDR	MACRO 
                             C  	MOV	WORD PTR A,WORD PTR M 
                             C  	STAX	D 
                             C  	DCXF	H 
                             C  	DCXF	D 
                             C  	DCXF	B 
                             C  	MOV	WORD PTR A,WORD PTR B 
                             C  	ORA	C 
                             C  	JNZ	_-8D 
                             C  ENDM 
                             C  DJNZ	MACRO	    DEST 
                             C  	DCR	B 
                             C  	JNZ	DEST 
                             C  ENDM 
                             C  ;******************************************************************* 
                             C  ; Define reset routines. 
                             C  ;******************************************************************* 
                             C  FSIGN	MACRO 
                             C  	CALL	SIGN 
                             C  ENDM 
                             C  PUSHM	MACRO 
                             C  	MOV	WORD PTR C,WORD PTR M 
                             C  	INX	H 
                             C  	MOV	WORD PTR B,WORD PTR M 
                             C  	INX	H 
                             C  	PUSH	WORD PTR B 
                             C  ENDM 
                             C  SYNCHK	MACRO	X 
                             C  	CALL	SYNCHR 
                             C  	DB	OFFSET X 
                             C  ENDM 
                             C  OUTCHR	MACRO 
                             C  	CALL	OUTDO 
                             C  ENDM 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Page     1-6
Common file to produce 2-segment 8086 GW-CPM BASIC          

                             C  CHRGET	MACRO 
                             C  	CALL	CHRGTR 
                             C  ENDM 
                             C  COMPAR	MACRO 
                             C  	CALL	DCOMPR 
                             C  ENDM 
                             C  GETYPE	MACRO 
                             C  	CALL	GETYPR 
                             C  ENDM 
                             C  COMPAR	MACRO 
                             C  	DB	73O 
                             C  	DB	332O 
                             C   ENDM 
                             C  ACRLF	MACRO 
                             C  	DB	13D 
                             C  	DB	10D 
                             C  ENDM 
                             C  PUSHR	MACRO 
                             C  	PUSH	WORD PTR D 
                             C  	PUSH	WORD PTR B 
                             C  ENDM 
                             C  POPR	MACRO 
                             C  	POP	WORD PTR B 
                             C  	POP	WORD PTR D 
                             C  ENDM 
                             C  MOVRI	MACRO	B,C,D,E 
                             C  	DB	1O		; "LXI  B" 
                             C  	DB	OFFSET C 
                             C  	DB	OFFSET B 
                             C  	DB	21O		; "LXI  D" 
                             C  	DB	OFFSET E 
                             C  	DB	OFFSET D 
                             C  ENDM 
                             C  INST	MACRO	X 
                             C  	DB	OX 
                             C  ENDM 
                             C   
                             C   
 = 000F                      C  	CONTO=15		;CHARACTER TO SUPRESS OUTPUT (USUALLY CONTROL-O) 
 = 0000                      C  	DBLTRN=0		;FOR DOUBLE PRECISION TRANSCENDENTALS 
                             C   
 = 000E                      C  	CLMWID=14D		;MAKE COMMA COLUMNS FOURTEEN CHARACTERS 
 = 0080                      C  	DATPSC=128D		;NUMBER OF DATA BYTES IN DISK SECTOR 
 = 0050                      C  	LINLN=80D		;TERMINAL LINE LENGTH 
 = 0084                      C  	LPTLEN=132D 
 = 00FF                      C  	BUFLEN=255		;LONG LINES 
 = 0028                      C  	NAMLEN=40D		;MAXIMUM LENGTH NAME -- 3 TO 127 
                             C   
 = 006E                      C  	NUMLEV=110D		;NUMBER OF STACK LEVELS RESERVED 
                             C  				;BY AN EXPLICIT CALL TO GETSTK 
 = 0004                      C  	STRSIZ=4 
 = 0003                      C  	STRSIZ=3 
 = 0003                      C  	NUMTMP=3		;NUMBER OF STRING TEMPORARIES 
 = 000A                      C  	NUMTMP=10 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Page     1-7
Common file to produce 2-segment 8086 GW-CPM BASIC          

                             C   
 0008                        C  	.RADIX	8 
                             C  ; 
                             C  ; Useful macros 
                             C  ; 
                             C   
                             C  ACRLF   MACRO 
                             C          DB      13D 
                             C          DB      10D 
                             C  ENDM 
                             C   
                             C  INS86   MACRO   A,B,C,D 
                             C          DB      A&O 
                             C  IFNB    <B> 
                             C          DB      B&O 
                             C  ENDIF 
                             C  IFNB    <D> 
                             C          DB      C&O 
                             C          DB      D&O 
                             C  ENDIF 
                             C  IFB     <D> 
                             C   IFNB   <C> 
                             C          DW      C 
                             C    ENDIF 
                             C   ENDIF 
                             C  ENDM 
                             C   
                             C  CALLOS  MACRO 
                             C          CALL    CPMENT 
                             C  ENDM 
                             C   
                             C  POPR    MACRO 
                             C          POP     CX 
                             C          POP     DX 
                             C  ENDM 
                             C   
                             C  ADR     MACRO   X 
                             C          DW      X 
                             C  ENDM 
                             C   
                             C  DC      MACRO   ARG 
                             C          IRPC    ZZ,<ARG> 
                             C              IFDIF       <ZZ>,<">
                             C                  DB      "&ZZ&" 
                             C                  _A="&ZZ&" 
                             C              ENDIF 
                             C          ENDM 
                             C  ENDM 
                             C  ; 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Page     1-8
Common file to produce 2-segment 8086 GW-CPM BASIC          

                             C          PAGE 
                             C   
                             C  DBGBRK	MACRO 
                             C  	DB	0CDh,06h,0CCh 
                             C  	ENDM 
                             C   
                             C   
                             C  MOVRI   MACRO   B,C,D,E 
                             C          DB      271O            ; "LXI  B" 
                             C          DB      C 
                             C          DB      B 
                             C          DB      272O            ; "LXI  D" 
                             C          DB      E 
                             C          DB      D 
                             C  ENDM 
                             C   
                             C  ; 
                             C  ; Reserve word table generating Macros 
                             C  ; 
                             C  un_def  MACRO   RESWRD 
                             C          %OUT +++ Undefined reserved word - &RESWRD 
                             C  ENDM 
                             C   
                             C  T       MACRO   RESWRD 
                             C          QQ=QQ+1 
                             C          $&RESWRD=QQ 
                             C  ENDM 
                             C   
                             C  Q       MACRO   RESWRD 
                             C   IFDEF  $&RESWRD 
                             C          $F=0 
                             C    IRPC  XX,<RESWRD> 
                             C     IF   $F 
                             C          $Q="&XX&" 
                             C          DB      "&XX&" 
                             C     ENDIF 
                             C     IFE  $F-1 
                             C          .XLIST 
                             C     ENDIF 
                             C          $F=$F+1 
                             C    ENDM 
                             C          .LIST 
                             C          ORG     $-1 
                             C          DB      $Q+128D 
                             C          DB      $&RESWRD 
                             C   ELSE 
                             C          un_def  RESWRD 
                             C   ENDIF 
                             C  ENDM 
                             C   
                             C  QF      MACRO   RESWRD 
                             C   IFDEF  $&RESWRD 
                             C          $F=0 
                             C    IRPC  XX,<RESWRD> 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Page     1-9
Common file to produce 2-segment 8086 GW-CPM BASIC          

                             C     IF   $F 
                             C          $Q="&XX&" 
                             C          DB      "&XX&" 
                             C     ENDIF 
                             C     IFE  $F-1 
                             C          .XLIST 
                             C     ENDIF 
                             C          $F=$F+1 
                             C    ENDM 
                             C          .LIST 
                             C          ORG     $-1 
                             C          DB      $Q+128D 
                             C          DB      $&RESWRD-128D 
                             C   ELSE 
                             C          un_def  RESWRD 
                             C   ENDIF 
                             C  ENDM 
                             C   
                             C  DERMAK  MACRO   X 
                             C          PUBLIC  DER&X 
                             C  DER&X:  MOV     DL,OFFSET ERR&X 
                             C          DB      271O                    ; LXI B over next error 
                             C  ENDM 
                             C  ; 
                             C  ; Dispatch table generating Macros.  We have to play games with the 
                             C  ; external declarations as ASM86 won't allow something to be declared 
                             C  ; external during pass 2.  Instead we build a chain of dummy macros 
                             C  ; that could generate the declaration for all potentially external 
                             C  ; reserve word dispatch addresses. 
                             C  ; 
                             C   
                             C  ; 
                             C  ; play games with a possible external.  Create a new 
                             C  ; macro for the symbol and text, and string it together 
                             C  ; with a central invoker 
                             C  ; 
                             C  ENDIF 
                             C   
                             C  ?z0 macro               ; Bottom of the chain 
                             C  endm 
                             C   
                             C  ; 
                             C  ; add an external declaration to S with type NEAR if it is not defined 
                             C  ; 
                             C  add_ext macro   s 
                             C      IFNDEF   ?&s 
                             C          ?i = ?i + 1 
                             C          def_mac     ?z&%?i,?z&%(?i-1),s 
                             C      ENDIF 
                             C  endm 
                             C   
                             C  ; 
                             C  ; define a macro called that possibly externals S:NEAR and then calls macro n 
                             C  ; 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Page     1-10
Common file to produce 2-segment 8086 GW-CPM BASIC          

                             C  def_mac macro   m,n,s 
                             C  m   macro 
                             C      ifndef s 
                             C          extrn s:NEAR 
                             C      endif 
                             C      purge m 
                             C      n 
                             C  endm 
                             C  ?&s macro 
                             C  &endm 
                             C  endm 
                             C   
                             C  ; 
                             C  ; call the macro chain 
                             C  ; 
                             C  do_ext  macro 
                             C      expand_mac  ?z%?i 
                             C  endm 
                             C   
                             C  expand_mac macro m 
                             C      m 
                             C  endm 
                             C  ; 
                             C  R       MACRO   RESWRD 
                             C   IFNDEF RESWRD 
                             C          add_ext RESWRD 
                             C   ENDIF 
                             C          DW      RESWRD 
                             C          QQ=QQ+1 
                             C          $&RESWRD=QQ 
                             C  ENDM 
                             C   
                             C  R2      MACRO   RESWRD,RESDSP 
                             C   IFNDEF RESDSP 
                             C          add_ext RESDSP 
                             C   ENDIF 
                             C          DW      RESDSP 
                             C          QQ=QQ+1 
                             C          $&RESWRD=QQ 
                             C  ENDM 
                             C  ; 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Page     1-11
Common file to produce 2-segment 8086 GW-CPM BASIC          

                             C  PAGE 
                             C   
                                 
                                 
                                	TITLE   GWLIST Copied from BINTRP.MAC 
                                 
 000A                           	.RADIX	10 
                                 
                                	.LIST 
                                 
                                ;Local Switches 
                                ; 
 = 0000                         	LTRACE=ALPCPM		;trace output selectable 
 = 0000                         	LABEL=PC8A 
 = 0000                         	HLPEDT=PC8A 
 = 0000                         	UCEMSG=NNECBS		;Upper case error messages. 
 = 0000                         	OLD86=MELCO AND CPM86	;For "old" 8086 error messages (prior 
                                				;to alignment for IBM compatibility). 
                                 
 = 0001                         	OLDBLD=ALPCPM OR ALPS OR OKI OR HAL OR PC8A OR BUBL OR GW OR TSHIBA 
                                 
                             C  	INCLUDE	GIO86U.INC 
                             C  ; [ This translation created 12-Jan-83 by Version 4.3 ] 
                             C   
                             C  	SUBTTL GIO86U - Device Independent I/O Constants and Macros 
                             C   
                             C  COMMENT	* 
                             C   
                             C  --------- --- ---- -- --------- 
                             C  COPYRIGHT (C) 1982 BY MICROSOFT 
                             C  --------- --- ---- -- --------- 
                             C   
                             C          Programmer: Tom Corbett,  Microsoft Inc. 
                             C   
                             C          * 
                             C   
                             C  ROFFST	MACRO	NAME,SIZE	;define record macro 
                             C  	NAME=_OFFST 
                             C  	_OFFST=_OFFST+SIZE 
                             C  ENDM  
                             C   
                             C   
                             C  ;ASCII character definitions 
                             C  ; 
 = 0003                      C  	ASCCTC=3D		;CTL-C 
 = 0008                      C  	ASCBS=8D		;backspace 
 = 0009                      C  	ASCTAB=9D		;Tab 
 = 000A                      C  	ASCLF=10D		;Line Feed 
 = 000D                      C  	ASCCR=13D		;Carriage Return 
 = 0013                      C  	ASCCTS=19D		;CTL-S 
 = 001A                      C  	ASCCTZ=26D		;Control Z (End-of-file for some devices) 
 = 001B                      C  	ASCESC=27D		;Escape 
 = 0020                      C  	ASCSPC=32D		;Space 
                             C   
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Page     1-12
GIO86U - Device Independent I/O Constants and Macros        

                             C  ;Special File ID's (identified by 1st byte of file) 
                             C  ; 
 = 00FF                      C  	BINFID=255D		;files created by SAVE "fn" 
 = 00FE                      C  	PROFID=254D		;files created by SAVE "fn",P 
 = 00FD                      C  	BSVFID=253D		;files created by BSAVE "fn" 
                             C   
                             C  ;Generalized I/O Function Codes: 
                             C  ; 
 = 0000                      C  	_OFFST=0		;initialize count 
                             C  	ROFFST	G_EOF,2		;test EOF for file opened to this device 
                             C  	ROFFST	G_LOC,2		;LOC 
                             C  	ROFFST	G_LOF,2		;LOF 
                             C  	ROFFST	G_CLS,2		;perform special CLOSE functions for this device 
                             C  	ROFFST	G_SWD,2		;set device width 
                             C  	ROFFST	G_RND,2		;GET/PUT random record from/to this device 
                             C  	ROFFST	G_OPN,2		;perform special OPEN functions for this device 
                             C  	ROFFST	G_SIN,2		;input 1 byte from file opened on this device 
                             C  	ROFFST	G_SOT,2		;output 1 byte to file opened on this device 
                             C  	ROFFST	G_GPS,2		;POS 
                             C  	ROFFST	G_GWD,2		;get device width 
                             C  	ROFFST	G_SCW,2		;set device column width 
                             C  	ROFFST	G_GCW,2		;get device column width 
                             C  	ROFFST	G_BIN,2		;block input from file opened on this device 
                             C  	ROFFST	G_BOT,2		;block output to file opened on this device 
                             C   
                             C   
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Page     1-13
GIO86U - Device Independent I/O Constants and Macros        

                             C          PAGE 
                                 
                             C  	INCLUDE	MSDOSU.INC	;MSDOS constants 
                             C  ; [ This translation created 12-Jan-83 by Version 4.3 ] 
                             C   
                             C  	SUBTTL    MSDOSU - MS-DOS Constants and Data-Structure Definitions 
                             C   
                             C  COMMENT	* 
                             C   
                             C  --------- --- ---- -- --------- 
                             C  COPYRIGHT (C) 1982 BY MICROSOFT 
                             C  --------- --- ---- -- --------- 
                             C   
                             C  	Programmer: Tom Corbett,  Microsoft Inc. 
                             C   
                             C  	* 
                             C   
                             C  CALLOS	MACRO	FUNC 
                             C  IFNB	<FUNC>   
                             C  	MOV	AH,LOW OFFSET FUNC 
                             C  ENDIF  
                             C  	INT	33D		;MSDOS system call 
                             C  ENDM  
                             C   
                             C  ROFFST	MACRO	NAME,SIZE	;define record macro 
                             C  	NAME=_OFFST 
                             C  	_OFFST=_OFFST+SIZE 
                             C  ENDM  
                             C   
                             C   
                             C  ; MSDOS System Call codes 
                             C  ; 
 = 0005                      C  	C_PRTO=5D		;Printer output 
 = 0006                      C  	C_DCIO=6D		;Direct console I/O 
 = 000D                      C  	C_REST=13D		;INITIALIZE BDOS 
 = 000E                      C  	C_SDRV=14D		;SET CURRENTLY SELECTED DRIVE 
 = 000F                      C  	C_OPEN=15D 
 = 0010                      C  	C_CLOS=16D 
 = 0011                      C  	C_SEAR=17D		;SEARCH FOR FILE 
 = 0013                      C  	C_DELE=19D 
 = 0014                      C  	C_READ=20D 
 = 0016                      C  	C_MAKE=22D 
 = 0017                      C  	C_RENA=23D 
 = 0019                      C  	C_GDRV=25D		;GET CURRENTLY SELECTED DRIVE 
 = 001A                      C  	C_BUFF=26D		;SET DMA ADDRESS 
 = 0021                      C  	C_RNDR=33D		;Random read 
 = 0022                      C  	C_RNDW=34D		;Random write 
 = 0027                      C  	C_RBR=39D		;Random Block Read 
 = 0029                      C  	C_PARS=41D		;Parse Filename 
                             C   
 = 000B                      C  	FNAML=11D		;number of bytes in Filename with extension 
 = 0080                      C  	DATPSC=128D		;bytes per sector 
 = 0026                      C  	FCBSIZ=38D		;File Control Block size 
                             C   
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Page     1-14
MSDOSU - MS-DOS Constants and Data-Structure Definitions    

                             C  ;MS-DOS FILE-DATA-BLOCK Record Definition 
                             C  ; 
 = 0000                      C  	_OFFST=0		;initialize count 
                             C  	ROFFST	F_NUL1,1	;not used by basic interpreter 
                             C  	ROFFST	F_NUM,1		;file number 0..255 
                             C  	ROFFST	F_NUL2,2	;not used by basic interpreter 
                             C  	ROFFST	F_NEXT,2	;thread for linked list, [MEMSIZ]=end 
                             C  	ROFFST	F_MODE,1	;file mode: 
 = 0001                      C  	MD_SQI=1D		;sequential input 
 = 0002                      C  	MD_SQO=2D		;sequential output 
 = 0004                      C  	MD_RND=4D		;random 
 = 0008                      C  	MD_APP=8D		;append 
                             C  	ROFFST	F_FCB,FCBSIZ	;File Control Block: used to communicate with OS 
                             C  	ROFFST	F_CLOC,2	;for seq files: num sectors read/written   (LOCOFS) 
                             C  				;for rnd files: last record number + 1 
                             C  	ROFFST	F_ORCT,1	;"Original Byte Count"                     (ORNOFS) 
                             C  				;for seq input: #bytes in sector when read 
                             C  				;for seq output: #bytes in output sector 
                             C  				;for random files: bytes per sector 
                             C  	ROFFST	F_BREM,1	;number of bytes till end-of-buffer        (NMLOFS) 
                             C  	ROFFST	F_CODE,1	;file encoding: 
 = 0000                      C  	FC_ASC=0		;Ascii SAVE, Data files 
 = 0001                      C  	FC_BIN=1		;binary file (BSAVE, binary SAVE) 
                             C  	ROFFST	F_BAKC,1	;holds next sequential input when F.FLBS.FL.BKC is true 
                             C  	ROFFST	F_NUL3,1	;not used by basic interpreter 
                             C  	ROFFST	F_DEV,1		;Device number                             (FL.DSK) 
                             C  	ROFFST	F_WID,1		;File width 
                             C  	ROFFST	F_NUL4,1	;not used by basic interpreter 
                             C  	ROFFST	F_FLGS,1	;flags 
 = 0080                      C  	FL_BKC=200O		;when true, F.BAKC contains next sequential input 
                             C  	ROFFST	F_POS,1		;Current column position                   (FL.OPS) 
                             C  	ROFFST	FDBSIZ,0	;size of device independent part of FDB 
                             C  				;device dependant FDB entries start here 
                             C   
                             C  	ROFFST	DATOFS,DATPSC	;Operating System interface buffer 
                             C  	ROFFST	FD_SIZ,2	;variable record length for random files 
                             C  	ROFFST	FD_PHY,2	;current physical record number 
                             C  	ROFFST	FD_LOG,2	;current logical record number 
                             C  	ROFFST	F_NUL5,1	;Future use 
                             C  	ROFFST	FD_OPS,2	;current output position for sequential I/O 
                             C  	ROFFST	FD_DAT,0	;field buffer of random file 
                             C   
                             C  ; OFFSETS INTO MSDOS FCB 
                             C  ; 
 = 0007                      C  	FCB_DV=F_FCB+0D		;DRIVE (0=default, 1=A:, 2=B:, ...) 
 = 0008                      C  	FCB_FN=F_FCB+1D		;FILE NAME 
 = 0010                      C  	FCB_FT=F_FCB+9D		;EXTENSION 
 = 0013                      C  	FCB_EX=F_FCB+12D	;FILE EXTENT (identifies block of 128 logical records) 
 = 0015                      C  	FCB_RC=F_FCB+14D	;RECORD SIZE 
 = 0017                      C  	FCB_FS=F_FCB+16D	;FILE SIZE IN BYTES 
 = 001B                      C  	FCB_DT=F_FCB+20D	;Date of last write to file 
 = 001D                      C  	FCB_DT=F_FCB+22D	;Time of last write to file 
 = 0027                      C  	FCB_NR=F_FCB+32D	;NEXT RECORD NUMBER 
 = 0028                      C  	FCB_RN=F_FCB+33D	;CP/M 2.x Random Record Number 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Page     1-15
MSDOSU - MS-DOS Constants and Data-Structure Definitions    

                             C   
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Page     1-16
MSDOSU - MS-DOS Constants and Data-Structure Definitions    

                             C          PAGE 
                                 
                                 
                                 
                                 
                                 
                                	EXTRN	INIT:NEAR 
                                 
                                 
                                 
                                	EXTRN	SETGSB:NEAR 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	ASSUME DS:DSEG 
                                	EXTRN	ONGSBF:WORD 
 0000                           DSEG	ENDS 
                                 
                                 
 = 0000                         	BUFOFS=0 
                                 
 = 0002                         	BUFOFS=2		;MUST CRUNCH INTO ERALIER PLACE FOR 
                                				; SINGLE QUOTE 
                                 
 = 013E                         	KBFLEN=BUFLEN+(BUFLEN/4)	;MAKE KRUNCH BUFFER SOMEWHAT 
                                				; LARGER THAN SOURCE BUFFER (BUF) 
                                 
                                 
                                 
                                 
                                	EXTRN	NAME:NEAR 
                                	EXTRN	INLIN:NEAR,CRDO:NEAR,CRDONZ:NEAR,STRCMP:NEAR,PPSWRT:NEAR 
                                 
                                	EXTRN	OUTDO:NEAR 
                                 
                                	EXTRN	BLTU:NEAR,CLEARC:NEAR,GTMPRT:NEAR,ISLET:NEAR,ISLET2:NEAR 
                                	EXTRN	PTRGET:NEAR 
                                	EXTRN	QINLIN:NEAR,SCRTCH:NEAR,STKINI:NEAR,RUNC:NEAR,RESFIN:NEAR 
                                	EXTRN	PTRGT2:NEAR,STPEND:NEAR 
                                 
                                	EXTRN	SYNCHR:NEAR 
                                 
                                	EXTRN	SIGN:NEAR 
                                 
                                	EXTRN	PRGFIN:NEAR,FILIND:NEAR 
                                 
                                	EXTRN	FILINP:NEAR,INDSKC:NEAR 
                                 
                                 
                                	EXTRN	LRUN:NEAR 
                                 
                                 
                                	EXTRN	INXHRT:NEAR 
                                	EXTRN	ZERO:NEAR,MOVE:NEAR,FOUT:NEAR,FIN:NEAR,PUSHF:NEAR 
                                	EXTRN	MOVFR:NEAR,MOVRF:NEAR,MOVRM:NEAR,INPRT:NEAR,LINPRT:NEAR 
                                	EXTRN	MOVFM:NEAR,MOVMF:NEAR 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Page     1-17
MSDOSU - MS-DOS Constants and Data-Structure Definitions    

                                	EXTRN	INRART:NEAR,NEG:NEAR 
                                	EXTRN	FREFAC:NEAR,FRETMS:NEAR,STRCPY:NEAR,GETSTK:NEAR 
                                	EXTRN	STRLIT:NEAR,STRLT2:NEAR,STRLT3:NEAR,STRLTI:NEAR,STROUT:NEAR 
                                	EXTRN	STRPRT:NEAR,STROUI:NEAR 
                                	EXTRN	GETSPA:NEAR,PUTNEW:NEAR,STOP:NEAR,OMERR:NEAR,REASON:NEAR 
                                 
                                 
                                	EXTRN	INSTR:NEAR 
                                 
                                	EXTRN	PRINUS:NEAR,PUTTMP:NEAR 
                                 
                                	EXTRN	FOUTH:NEAR,FOUTO:NEAR,STRO$:NEAR,STRH$:NEAR 
                                 
                                 
                                	EXTRN	STRNG$:NEAR 
                                	EXTRN	TON:NEAR,TOFF:NEAR 
                                	EXTRN	SPACE$:NEAR 
                                 
                                	EXTRN	SIGNS:NEAR 
                                 
                                 
                                 
                                 
                                	EXTRN	UMULT:NEAR 
                                 
                                	EXTRN	SIGNC:NEAR,POPHRT:NEAR 
                                 
                                	EXTRN	FINLPT:NEAR 
                                 
                                	EXTRN	VMOVFA:NEAR,VMOVAF:NEAR,ISIGN:NEAR,VSIGN:NEAR,VDFACS:NEAR 
                                	EXTRN	VMOVMF:NEAR,VMOVFM:NEAR,FRCINT:NEAR,FRCDBL:NEAR,FRCSNG:NEAR 
                                	EXTRN	VNEG:NEAR,PUFOUT:NEAR,DCXBRT:NEAR,IADD:NEAR 
                                	EXTRN	FINDBL:NEAR 
                                	EXTRN	VMOVE:NEAR,VALINT:NEAR,VALSNG:NEAR,FRCSTR:NEAR,CHKSTR:NEAR 
                                	EXTRN	MAKINT:NEAR 
                                	EXTRN	MOVE1:NEAR 
                                 
                                	EXTRN	SCNSEM:NEAR 
                                	EXTRN	WHILE:NEAR,WEND:NEAR 
                                	EXTRN	CALLS:NEAR 
                                	EXTRN	PROCHK:NEAR 
                                	EXTRN	WRITE:NEAR 
                                ;The following block of externals was added on Dec 19, 1982 when BINTRP was 
                                ; Split up after the freeze of GW-BASIC Version 1.0 
                                ; This Split-up was not reflected in the PS1:<BASIC>BINTRP.MAC source. 
                                ; See Tom Corbett if you have any questions. 
                                ; 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	MEMSIZ:WORD,FRETOP:WORD,VARTAB:WORD,STREND:WORD,TXTTAB:WORD 
                                	EXTRN	ARYTAB:WORD 
                                	EXTRN	CURLIN:WORD,DOT:WORD,DATLIN:WORD,NLONLY:WORD,ERRLIN:WORD 
                                	EXTRN	ERRTXT:WORD 
                                	EXTRN	MRGFLG:WORD,CHNFLG:WORD 
                                	EXTRN	SAVSTK:WORD,SAVTXT:WORD,OLDLIN:WORD,NXTLIN:WORD,OLDTXT:WORD 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Page     1-18
MSDOSU - MS-DOS Constants and Data-Structure Definitions    

                                	EXTRN	ONELIN:WORD,ONEFLG:WORD 
                                	EXTRN	CNTOFL:WORD,TRCFLG:WORD,CONSAV:WORD,CONTXT:WORD,CONTYP:WORD 
                                	EXTRN	NUMCON:WORD,CONLO:WORD 
                                	EXTRN	AUTFLG:WORD,AUTLIN:WORD,AUTINC:WORD 
                                	EXTRN	KBUF:WORD,BUFMIN:WORD,BUF:WORD 
                                	EXTRN	PTRFIL:WORD,PTRFLG:WORD,DORES:WORD,VALTYP:WORD,FACLO:WORD 
                                	EXTRN	DFACLO:WORD,FAC:WORD 
                                	EXTRN	TEMP:WORD,TEMP2:WORD,TEMP3:WORD,TEMPA:WORD 
                                	EXTRN	DSCTMP:WORD,TEMPST:WORD 
                                	EXTRN	OPRTYP:WORD 
                                	EXTRN	SUBFLG:WORD,FVALSV:WORD,DEFTBL:WORD,FLGINP:WORD,FLGSCN:WORD 
                                	EXTRN	OVCSTR:WORD,INPPAS:WORD 
                                	EXTRN	USRTAB:WORD,DONUM:WORD,ENDPRG:WORD,ENDFOR:WORD,DATPTR:WORD 
                                	EXTRN	FLGOVC:WORD 
                                	EXTRN	ERRFLG:WORD,SAVSEG:WORD,PRMLN2:WORD,PRMSIZ:WORD,PARM2:WORD 
                                	EXTRN	PRMLEN:WORD,PRMSTK:WORD,PARM1:WORD 
                                	EXTRN	FUNACT:WORD,NOFUNS:WORD,OPTVAL:WORD,OPTFLG:WORD,RNDX:WORD 
 0000                           DSEG	ENDS 
                                 
                                	EXTRN	INEG2:NEAR,FADD:NEAR 
                                	EXTRN	$OVMSG:NEAR,ERRTAB:NEAR,LSTERR:NEAR,DSKERR:NEAR,NONDSK:NEAR 
                                	EXTRN	REDDY:NEAR 
                                	EXTRN	ERRSN:NEAR,ERRDV0:NEAR,ERRRE:NEAR,ERROV:NEAR,ERRMO:NEAR 
                                	EXTRN	ERRTM:NEAR,ERRNF:NEAR 
                                	EXTRN	ERRNR:NEAR,ERRLBO:NEAR,ERRDD:NEAR,ERRUF:NEAR,ERRFC:NEAR 
                                	EXTRN	ERRIFN:NEAR,ERRFNO:NEAR,ERRDNA:NEAR,ERRFDR:NEAR,ERRRAD:NEAR 
                                	EXTRN	ERRDFL:NEAR 
                                	EXTRN	ERRIOE:NEAR,ERRBFM:NEAR,ERRFNF:NEAR,ERRBFN:NEAR,ERRIER:NEAR 
                                	EXTRN	ERRRPE:NEAR 
                                	EXTRN	ERRFAO:NEAR,ERRNMF:NEAR,ERRWH:NEAR,ERRBRN:NEAR,ERRFOV:NEAR 
                                	EXTRN	ERRTMF:NEAR 
                                	EXTRN	ERRFAE:NEAR,ERRUS:NEAR,ERRRG:NEAR,ERROD:NEAR,ERRFN:NEAR 
                                	EXTRN	ERRUE1:NEAR	;ERRUE+DSKERR-NONDSK 
                                	EXTRN	DSKER1:NEAR	;DSKERR-NONDSK 
                                 
                                ;The following externs are defined in GWMAIN.MAC 
                                ; 
                                	EXTRN	CHRGTR:NEAR,READY:NEAR,STPRDY:NEAR,ISFLIO:NEAR,CONFC1:NEAR 
                                	EXTRN	DEPTR:NEAR 
                                	EXTRN	FINI:NEAR,FCERR:NEAR,FNDLIN:NEAR,SCNLIN:NEAR 
                                	EXTRN	OCTCON:NEAR,HEXCON:NEAR,DBLCON:NEAR,DBLCN1:NEAR 
                                 
                                ;The following externs are defined in GWEVAL.MAC 
                                ; 
                                	EXTRN	MAKUPL:NEAR,MAKUPS:NEAR,GETYPR:NEAR,OCTCNS:NEAR,DOCNVF:NEAR 
                                	EXTRN	ISMID$:NEAR 
                                	EXTRN	FRMEVL:NEAR,FRMCHK:NEAR,GETINT:NEAR,GETBYT:NEAR,GETIN2:NEAR 
                                	EXTRN	SNGFLT:NEAR 
                                 
                                 
                                 
                                	SUBTTL ROM VERSION INITALIZATION, AND CONSTANTS 
                                 
                                 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Page     1-19
ROM VERSION INITALIZATION, AND CONSTANTS                    

                                 
                                ; 
                                ; The reserved word tables are in another module.  Consequently 
                                ; many things must be declared external.  All of these things 
                                ; are in the code segement or are absolutes (like tokens). 
                                ; I.e., they are not in the data segment. 
                                ; 
                                 
                                	EXTRN	ALPTAB:NEAR 
                                	EXTRN	EQULTK:NEAR 
                                	EXTRN	STMDSP:NEAR 
                                	EXTRN	GREATK:NEAR 
                                	EXTRN	INSRTK:NEAR 
                                	EXTRN	LESSTK:NEAR,LSTOPK:NEAR 
                                	EXTRN	MIDTK:NEAR,MINUTK:NEAR 
                                	EXTRN	NMREL:NEAR,NOTTK:NEAR,NUMCMD:NEAR 
                                	EXTRN	ONEFUN:NEAR 
                                	EXTRN	POS:NEAR,PLUSTK:NEAR,PRINT:NEAR 
                                	EXTRN	RESLST:NEAR 
                                	EXTRN	SNGQTK:NEAR,SPCTAB:NEAR,SQRTK:NEAR,STEPTK:NEAR 
                                	EXTRN	THENTK:NEAR 
                                	EXTRN	USRTK:NEAR 
                                	EXTRN	$DATA:NEAR,$DATCO:NEAR,$DELETE:NEAR 
                                	EXTRN	$EDIT:NEAR,$ELSE:NEAR,$END:NEAR,$ERL:NEAR,$ERROR:NEAR 
                                	EXTRN	$FN:NEAR,$FOR:NEAR 
                                	EXTRN	$GOSUB:NEAR,$GOTO:NEAR 
                                	EXTRN	$IF:NEAR,$INKEY$:NEAR,$INPUT:NEAR 
                                	EXTRN	$LIST:NEAR,$LLIST:NEAR 
                                	EXTRN	$NEXT:NEAR 
                                	EXTRN	$POINT:NEAR,$PRINT:NEAR 
                                	EXTRN	$REM:NEAR,$REMCO:NEAR,$RENUM:NEAR,$RESTORE:NEAR,$RESUME:NEAR 
                                	EXTRN	$RETURN:NEAR,$RND:NEAR,$RUN:NEAR 
                                	EXTRN	$SCREEN:NEAR,$STOP:NEAR,$STRING$:NEAR 
                                	EXTRN	$THEN:NEAR,$TO:NEAR 
                                	EXTRN	$USR:NEAR 
                                	EXTRN	$VARPTR:NEAR 
                                	EXTRN	$WEND:NEAR,$WHILE:NEAR 
                                 
                                	SUBTTL EXTENDED LIST, DELETE, LLIST 
                                 
                                PUBLIC	LLIST 
 0000                           LLIST: 
 0000  53                       	PUSH	BX 
 0001  BB FFFF                  	MOV	BX,OFFSET 0-1 
 0004  89 1E 0000 E             	MOV	PTRFIL,BX	;FDB pointer = LPT Pseudo FDB 
 0008  5B                       	POP	BX 
                                PUBLIC	LIST 
 0009                           LIST: 
                                 
 0009  59                       	POP	CX		;GET RID OF NEWSTT RETURN ADDR 
 000A  E8 0000 E                	CALL	SCNLIN		;SCAN LINE RANGE 
 000D  51                       	PUSH	CX		;SAVE POINTER TO 1ST LINE 
 000E  E8 0000 E                	CALL	PROCHK		;DONT EVEN LIST LINE # 
 0011  8B 1E 0000 E             	MOV	BX,TEMP		;Get Text pointer 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Page     1-20
EXTENDED LIST, DELETE, LLIST                                

 0015  4B                       	DEC	BX 
 0016  E8 0000 E                	CALL	CHRGTR 
 0019  74 0C                    	JZ	SHORT LIST4	;Brif LIST to CRT. 
 001B  E8 0000 E                	CALL	SYNCHR 
 001E  2C                       	DB	OFFSET 44D	; else must be ,"dev:" 
 001F  E8 0000 E                	CALL	NAMSCN		;Crack File spec. 
                                	EXTRN	NAMSCN:NEAR,NULOPM:NEAR 
 0022  B0 02                    	MOV	AL,LOW OFFSET MD_SQO	;OPEN FILE 0 FOR OUTPUT 
 0024  E8 0000 E                	CALL	NULOPM 
 0027  BB FFFF                  LIST4:	MOV	BX,65535	;DONT ALLOW ^C TO CHANGE 
 002A  89 1E 0000 E             	MOV	CURLIN,BX	;CONTINUE PARAMETERS 
 002E  5B                       	POP	BX		;GET POINTER TO LINE 
 002F  5A                       	POP	DX		;GET MAX LINE # OFF STACK 
 0030  8A 0F                    	MOV	CL,BYTE PTR [BX]	;[B,C]=THE LINK POINTING TO THE NEXT LINE 
 0032  43                       	INC	BX 
 0033  8A 2F                    	MOV	CH,BYTE PTR [BX] 
 0035  43                       	INC	BX 
 0036  8A C5                    	MOV	AL,CH		;SEE IF END OF CHAIN 
 0038  0A C1                    	OR	AL,CL 
 003A  75 03                    	JNZ	SHORT ??L000 
 003C  E9 0000 E                	JMP	READY		;LAST LINE, STOP. 
 003F                           ??L000: 
                                EXTRN	POLKEY:NEAR 
 003F  E8 0000 E                	CALL	POLKEY		;check CTL C, queue typeahead 
 0042  51                       	PUSH	CX		;SAVE LINK 
 0043  8A 0F                    	MOV	CL,BYTE PTR [BX]	;PUSH THE LINE # 
 0045  43                       	INC	BX 
 0046  8A 2F                    	MOV	CH,BYTE PTR [BX] 
 0048  43                       	INC	BX 
 0049  51                       	PUSH	CX 
 004A  5E                       	POP	SI		;XTHL 
 004B  87 F3                    	XCHG	SI,BX 
 004D  56                       	PUSH	SI		;GET LINE # INTO [H,L] 
 004E  87 DA                    	XCHG	BX,DX		;GET MAX LINE IN [H,L] 
 0050  3B DA                    	CMP	BX,DX		;PAST LAST LINE IN RANGE? 
 0052  59                       	POP	CX		;TEXT POINTER TO [B,C] 
 0053  73 03                    	JAE	SHORT ??L001 
 0055  E9 0000 E                	JMP	STPRDY		;IF PAST, THEN DONE LISTING. 
 0058                           ??L001: 
 0058  5E                       	POP	SI		;XTHL 
 0059  87 F3                    	XCHG	SI,BX 
 005B  56                       	PUSH	SI		;SAVE MAX ON BOTTOM OF STACK 
 005C  53                       	PUSH	BX		;SAVE LINK ON TOP 
 005D  51                       	PUSH	CX		;SAVE TEXT POINTER BACK 
 005E  87 DA                    	XCHG	BX,DX		;GET LINE # IN [H,L] 
 0060  89 1E 0000 E             	MOV	DOT,BX		;SAVE FOR LATER EDIT OR LIST 
                                				;AND WE WANT [H,L] ON THE STACK 
 0064  E8 0000 E                	CALL	LINPRT		;PRINT AS INTEGER WITHOUT LEADING SPACE 
 0067  5B                       	POP	BX 
 0068  8A 07                    	MOV	AL,BYTE PTR [BX]	;GET BYTE FROM LINE 
 006A  3C 09                    	CMP	AL,LOW 9	;IS IT A TAB? 
 006C  74 05                    	JZ	SHORT NOSPAL	;THEN DONT PRINT SPACE 
 006E  B0 20                    	MOV	AL,LOW " " 
 0070  E8 0000 E                	CALL	OUTDO		;PRINT A SPACE AFTER THE LINE # 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Page     1-21
EXTENDED LIST, DELETE, LLIST                                

 0073  E8 00C5 R                NOSPAL:	CALL	BUFLIN		;UNPACK THE LINE INTO BUF 
 0076  BB 0000 E                	MOV	BX,OFFSET BUF	;POINT AT THE START OF THE UNPACKED CHARACTERS 
 0079  E8 0081 R                	CALL	LISPRT		;PRINT THE LINE 
 007C  E8 0000 E                	CALL	CRDO		;PRINT CRLF 
 007F  EB A6                    	JMP	SHORT LIST4	;GO BACK FOR NEXT LINE 
                                 
                                PUBLIC	LISPRT 
 0081                           LISPRT: 
 0081  8A 07                    	MOV	AL,BYTE PTR [BX] 
 0083  3C 0A                    	CMP	AL,LOW 10D 
 0085  75 03                    	JNZ	SHORT ??L002 
 0087  E8 009A R                	CALL	LISEOL		;erase to end-of-line after LF and 0 
 008A                           ??L002: 
 008A  0A C0                    	OR	AL,AL 
 008C  75 03                    	JNZ	SHORT ??L003 
 008E  E8 009A R                	CALL	LISEOL 
 0091                           ??L003: 
 0091  75 01                    	JNZ	SHORT $+3 
 0093  C3                       	RET			;IF =0 THEN END OF LINE 
                                	EXTRN	OUTCH1:NEAR 
 0094  E8 0000 E                	CALL	OUTCH1		;OUTPUT CHAR AND CHECK FOR LF 
 0097  43                       	INC	BX		;INCR POINTER 
 0098  EB E7                    	JMP	SHORT LISPRT	;PRINT NEXT CHAR 
                                 
                                ;Routine to output sequence to Clear to end of line if current device 
                                ; is Standard Output (CRT) 
                                ; Exit - All registers preserved. 
                                ; 
 009A  9F                       LISEOL:	LAHF			; PUSH PSW 
 009B  86 C4                    	XCHG	AL,AH 
 009D  50                       	PUSH	AX 
 009E  86 C4                    	XCHG	AL,AH 
 00A0  E8 0000 E                	CALL	ISFLIO 
 00A3  74 03                    	JZ	SHORT ??L004 
 00A5  EB 19 90                 	JMP	LISELX		;return if listing to a file 
 00A8                           ??L004: 
 0000                           DSEG	SEGMENT PUBLIC 'DATASG' 
                                	EXTRN	F_EDIT:WORD 
 0000                           DSEG	ENDS 
 00A8  A0 0000 E                	MOV	AL,BYTE PTR F_EDIT	;Save current edit mode 
 00AB  9F                       	LAHF			; PUSH PSW 
 00AC  86 C4                    	XCHG	AL,AH 
 00AE  50                       	PUSH	AX 
 00AF  86 C4                    	XCHG	AL,AH 
 00B1  B0 05                    	MOV	AL,LOW 5	;05=erase to end-of-line for non-IBMLIK 
 00B3  A2 0000 E                	MOV	BYTE PTR F_EDIT,AL	;Enter edit mode(05 is control function) 
 00B6  E8 0000 E                	CALL	OUTDO		;output 05 to current device 
 00B9  58                       	POP	AX		; POP PSW 
 00BA  86 C4                    	XCHG	AL,AH 
 00BC  9E                       	SAHF 
 00BD  A2 0000 E                	MOV	BYTE PTR F_EDIT,AL	;Restore edit mode 
 00C0  58                       LISELX:	POP	AX		; POP PSW 
 00C1  86 C4                    	XCHG	AL,AH 
 00C3  9E                       	SAHF 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Page     1-22
EXTENDED LIST, DELETE, LLIST                                

 00C4  C3                       	RET 
                                 
                                PUBLIC	BUFLIN 
 00C5  B9 0000 E                BUFLIN:	MOV	CX,OFFSET BUF	;GET START OF TEXT BUFFER 
 00C8  B6 FF                    	MOV	DH,LOW OFFSET BUFLEN	;GET ITS LENGTH INTO [D] 
 00CA  32 C0                    	XOR	AL,AL		;SET MODE OF DECRUNCH 
 00CC  A2 0000 E                	MOV	BYTE PTR DORES,AL	;BIT0 IS QUOTE BIT1 IS DATA BIT2 IS REM 
 00CF  32 C0                    	XOR	AL,AL		;SET ON SPECIAL CHAR FOR SPACE INSERTION 
 00D1  A2 0000 E                	MOV	BYTE PTR TEMPA,AL 
 00D4  E8 0000 E                	CALL	PROCHK		;ONLY PROCEED IF OK 
 00D7  EB 07                    	JMP	SHORT PLOOP2	;START HERE 
                                 
 00D9  41                       PLOOP:	INC	CX		;INCREMENT DEPOSIT PTR. 
 00DA  43                       	INC	BX		;ADVANCE TEXT PTR 
 00DB  FE CE                    	DEC	DH		;BUMP DOWN COUNT 
 00DD  75 01                    	JNZ	SHORT $+3 
 00DF  C3                       	RET			;IF BUFFER FULL, RETURN 
                                PUBLIC	PLOOP2 
 00E0                           PLOOP2: 
 00E0  8A 07                    	MOV	AL,BYTE PTR [BX]	;GET CHAR FROM BUF 
 00E2  0A C0                    	OR	AL,AL		;SET CC'S 
 00E4  8B F9                    	MOV	DI,CX 
 00E6  AA                       	STOSB			;SAVE THIS CHAR 
 00E7  75 01                    	JNZ	SHORT $+3 
 00E9  C3                       	RET			;IF END OF SOURCE BUFFER, ALL DONE. 
 00EA  3C 00 E                  	CMP	AL,LOW OFFSET OCTCON	;IS IT SMALLER THAN SMALLEST EMBEDDED CONSTANT? 
 00EC  72 28                    	JB	SHORT NTEMBL	;YES, DONT TREAT AS ONE 
 00EE  3C 00 E                  	CMP	AL,LOW OFFSET DBLCN1	;IS IT EMBEDED CONSTANT? 
 00F0  8A D0                    	MOV	DL,AL		;SAVE CHAR IN [E] 
 00F2  72 38                    	JB	SHORT PRTVAR	;PRINT LEADING SPACE IF NESC. 
 00F4  3C 22                    	CMP	AL,LOW 34D	;IS IT A QUOTATION 
 00F6  75 0A                    	JNZ	SHORT BFCHKC	;IF NOT CHECK FOR COLON 
 00F8  A0 0000 E                	MOV	AL,BYTE PTR DORES	;COMPLEMENT THE QUOTE BIT 
 00FB  34 01                    	XOR	AL,LOW 1 
 00FD  A2 0000 E                	MOV	BYTE PTR DORES,AL 
 0100  B0 22                    	MOV	AL,LOW 34D	;RESTORE THE CHARACTER 
 0102  3C 3A                    BFCHKC:	CMP	AL,LOW ":"	;IS IT A COLON ENDING DATA? 
 0104  75 10                    	JNZ	SHORT NTEMBL 
 0106  A0 0000 E                	MOV	AL,BYTE PTR DORES	;DON'T END IF IN QUOTE 
 0109  D0 D8                    	RCR	AL,1 
 010B  72 07                    	JB	SHORT QTCOLN 
 010D  D0 D0                    	RCL	AL,1 
 010F  24 FD                    	AND	AL,LOW 253D	;TURN OFF BIT1 (DATA BIT) 
 0111  A2 0000 E                	MOV	BYTE PTR DORES,AL 
 0114  B0 3A                    QTCOLN:	MOV	AL,LOW ":" 
 0116  0A C0                    NTEMBL:	OR	AL,AL		;SET CC'S 
 0118  79 03                    	JNS	SHORT ??L005 
 011A  EB 3D 90                 	JMP	PLOOPR		;RESERVED WORD OF SOME KIND 
 011D                           ??L005: 
 011D  8A D0                    	MOV	DL,AL		;SAVE CHAR IN [E] 
 011F  3C 2E                    	CMP	AL,LOW "."	;DOT IS PART OF VAR NAME 
 0121  74 09                    	JZ	SHORT PRTVAR 
 0123  E8 028B R                	CALL	TSTANM		;IS CHAR ALPHANUMERIC 
 0126  73 04                    	JAE	SHORT PRTVAR	;ALPHANUMERIC 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Page     1-23
EXTENDED LIST, DELETE, LLIST                                

 0128  32 C0                    	XOR	AL,AL		;MAKE SPECIAL 
 012A  EB 18                    	JMP	SHORT PLOOPH 
 012C  A0 0000 E                PRTVAR:	MOV	AL,BYTE PTR TEMPA	;WHAT DID WE DO LAST? 
 012F  0A C0                    	OR	AL,AL		;SET CONDITION CODES 
 0131  74 0F                    	JZ	SHORT PLOOPG	;SPECIAL, NEVER INSERT SPACE 
 0133  FE C0                    	INC	AL		;IN RESERVED WORD? 
 0135  75 0B                    	JNZ	SHORT PLOOPG	;NO 
 0137  B0 20                    	MOV	AL,LOW " "	;PUT OUT SPACE BEFORE RESWORD 
 0139  8B F9                    	MOV	DI,CX 
 013B  AA                       	STOSB			;STORE IN BUFFER 
 013C  41                       	INC	CX		;INCRMENT POINTER INTO BUFFER 
 013D  FE CE                    	DEC	DH		;SPACE LEFT? 
 013F  75 01                    	JNZ	SHORT $+3 
 0141  C3                       	RET			;NO, DONE 
 0142  B0 01                    PLOOPG:	MOV	AL,LOW 1	;STORE FLAG SAYING IN VAR 
 0144  A2 0000 E                PLOOPH:	MOV	BYTE PTR TEMPA,AL 
 0147  8A C2                    	MOV	AL,DL		;GET BACK CHAR WE HAD 
 0149  3C 00 E                  	CMP	AL,LOW OFFSET OCTCON	;IS IT SMALLER THAN SMALLEST EMBEDDED CONSTANT? 
 014B  72 07                    	JB	SHORT PLOOPZ	;YES, DONT TREAT AS ONE 
 014D  3C 00 E                  	CMP	AL,LOW OFFSET DBLCN1	;IS IT EMBEDED CONSTANT? 
 014F  73 03                    	JAE	SHORT ??L006 
 0151  E9 029A R                	JMP	NUMLIN		;YES, UNPACK IT 
 0154                           ??L006: 
 0154  8B F9                    PLOOPZ:	MOV	DI,CX 
 0156  AA                       	STOSB			;MAKE SURE BYTE STORED AFTER SPACE 
 0157  EB 80                    	JMP	PLOOP		;STORE IN BUFFER 
 0159                           PLOOPR: 
 0159  A0 0000 E                	MOV	AL,BYTE PTR DORES	;SEEWHAT OUR UNCRUNCH MODE IS 
 015C  D0 D8                    	RCR	AL,1		;THE LSB IS THE QUOTE BIT 
 015E  72 4C                    	JB	SHORT GPLOOP 
 0160  D0 D8                    	RCR	AL,1		;GET THE REM BIT 
 0162  D0 D8                    	RCR	AL,1		;AND SEE IF SET 
 0164  73 5B                    	JAE	SHORT CHKDRS	;IF NOT JUST CHECK DATA BIT 
 0166  8A 07                    	MOV	AL,BYTE PTR [BX]	;MUST SEE IF ITS SNGQTK 
 0168  3C 00 E                  	CMP	AL,LOW OFFSET SNGQTK	;AND PRECEDED BY ":REM" 
 016A  53                       	PUSH	BX 
 016B  51                       	PUSH	CX		;SAVE BUFFER POINTER 
 016C  BB 01A8 R                	MOV	BX,OFFSET NOSNGQ	;PLACE TO RETURN ON FAILURE 
 016F  53                       	PUSH	BX 
 0170  74 01                    	JZ	SHORT $+3 
 0172  C3                       	RET 
 0173  49                       	DEC	CX 
 0174  8B F1                    	MOV	SI,CX 
 0176  8A 04                    	MOV	AL,[SI] 
 0178  3C 4D                    	CMP	AL,LOW "M" 
 017A  74 01                    	JZ	SHORT $+3 
 017C  C3                       	RET 
 017D  49                       	DEC	CX 
 017E  8B F1                    	MOV	SI,CX 
 0180  8A 04                    	MOV	AL,[SI] 
 0182  3C 45                    	CMP	AL,LOW "E" 
 0184  74 01                    	JZ	SHORT $+3 
 0186  C3                       	RET 
 0187  49                       	DEC	CX 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Page     1-24
EXTENDED LIST, DELETE, LLIST                                

 0188  8B F1                    	MOV	SI,CX 
 018A  8A 04                    	MOV	AL,[SI] 
 018C  3C 52                    	CMP	AL,LOW "R" 
 018E  74 01                    	JZ	SHORT $+3 
 0190  C3                       	RET 
 0191  49                       	DEC	CX 
 0192  8B F1                    	MOV	SI,CX 
 0194  8A 04                    	MOV	AL,[SI] 
 0196  3C 3A                    	CMP	AL,LOW ":" 
 0198  74 01                    	JZ	SHORT $+3 
 019A  C3                       	RET 
 019B  58                       	POP	AX		;GET RID OF RETURN ON FAIL ADDRESS 
 019C  58                       	POP	AX		;GET RID OF BAD BUFFER POINTER 
 019D  5B                       	POP	BX		;GET BACK POINTER INTO LINE 
 019E  FE C6                    	INC	DH		;UPDATE CHAR COUNT 
 01A0  FE C6                    	INC	DH 
 01A2  FE C6                    	INC	DH 
 01A4  FE C6                    	INC	DH 
 01A6  EB 2D                    	JMP	SHORT RESEXP 
                                 
 01A8  59                       NOSNGQ:	POP	CX		;GET BACK THE BUFFERPOINTER 
 01A9  5B                       	POP	BX		;GET BACK SOURCE LINE POINTER 
 01AA  8A 07                    	MOV	AL,BYTE PTR [BX]	;GET BACK THE CHARACTER 
 01AC  E9 00D9 R                GPLOOP:	JMP	PLOOP 
                                 
 01AF  A0 0000 E                DATSET:	MOV	AL,BYTE PTR DORES	;BIT INDICATING INSIDE DATA 
 01B2  0C 02                    	OR	AL,LOW 2	;IS BIT1 
 01B4  A2 0000 E                SETDRS:	MOV	BYTE PTR DORES,AL 
 01B7  32 C0                    	XOR	AL,AL 
 01B9  C3                       	RET 
                                 
 01BA  A0 0000 E                REMSET:	MOV	AL,BYTE PTR DORES 
 01BD  0C 04                    	OR	AL,LOW 4 
 01BF  EB F3                    	JMP	SHORT SETDRS 
                                 
 01C1  D0 D0                    CHKDRS:	RCL	AL,1		;GET DATA BIT INTO CARRY 
 01C3  72 E7                    	JB	SHORT GPLOOP 
 01C5  8A 07                    	MOV	AL,BYTE PTR [BX]	;GET BACK THE CHARACTER 
 01C7  3C 00 E                  	CMP	AL,LOW OFFSET $DATA	;NEED TO SET A BIT 
 01C9  75 03                    	JNZ	SHORT ??L007 
 01CB  E8 01AF R                	CALL	DATSET 
 01CE                           ??L007: 
 01CE  3C 00 E                  	CMP	AL,LOW OFFSET $REM 
 01D0  75 03                    	JNZ	SHORT ??L008 
 01D2  E8 01BA R                	CALL	REMSET 
 01D5                           ??L008: 
 01D5  8A 07                    RESEXP:	MOV	AL,BYTE PTR [BX] 
                                 
 01D7  FE C0                    	INC	AL		;SET ZERO IF FN TOKEN 
 01D9  8A 07                    	MOV	AL,BYTE PTR [BX]	;GET CHAR BACK 
 01DB  75 05                    	JNZ	SHORT NTFNTK	;NOT FUNCTION JUST TREAT NORMALLY 
 01DD  43                       	INC	BX		;BUMP POINTER 
 01DE  8A 07                    	MOV	AL,BYTE PTR [BX]	;GET CHAR 
 01E0  24 7F                    	AND	AL,LOW 177O	;TURN OFF HIGH BIT 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Page     1-25
EXTENDED LIST, DELETE, LLIST                                

 01E2  43                       NTFNTK:	INC	BX		;ADVANCE TO POINT AFTER 
 01E3  3C 00 E                  NTQTTK:	CMP	AL,LOW OFFSET $ELSE	;ELSE? 
 01E5  75 03                    	JNZ	SHORT NOTELS 
 01E7  49                       	DEC	CX 
 01E8  FE C6                    	INC	DH 
 01EA                           NOTELS: 
 01EA  3C 00 E                  	CMP	AL,LOW OFFSET $WHILE	;MIGHT HAVE AN EXTRA "+" IN WHILE FORMULA 
 01EC  75 0A                    	JNZ	SHORT BFNTWH	;SO SKIP OVER IT IF ITS THERE 
 01EE  8A 07                    	MOV	AL,BYTE PTR [BX]	;GET CHARACTER TO SEE IF ITS PLUSTK 
 01F0  43                       	INC	BX		;ASSUME IS PLUSTK 
 01F1  3C 00 E                  	CMP	AL,LOW OFFSET PLUSTK	;MIGHT NOT BE PLUS IF BINARY SAVED IN 
 01F3  B0 00 E                  	MOV	AL,LOW OFFSET $WHILE	;RESTORE TOKEN VALUE 
 01F5  74 01                    	JZ	SHORT BFNTWH	;VERSION OF BASIC BEFORE CRUNCH CHANGED 
 01F7  4B                       	DEC	BX		;MOVE POINTER BACK 
 01F8                           BFNTWH: 
                                 
 01F8  53                       	PUSH	BX		;SAVE TEXT PTR. 
 01F9  51                       	PUSH	CX		;SAVE DEPOSIT PTR. 
 01FA  52                       	PUSH	DX		;SAVE CHAR COUNT. 
                                	EXTRN	LISTX:NEAR 
 01FB  E8 0000 E                	CALL	LISTX		;Handle extended reserved words. 
 01FE  BB FFFF E                	MOV	BX,OFFSET RESLST-1	;GET PTR TO START OF RESERVED WORD LIST 
 0201  8A E8                    	MOV	CH,AL		;SAVE THIS CHAR IN [B] 
 0203  B1 40                    	MOV	CL,LOW OFFSET "A"-1	;INIT LEADING CHAR VALUE 
 0205  FE C1                    RESSR3:	INC	CL		;BUMP LEADING CHAR VALUE. 
 0207  43                       RESSR1:	INC	BX		;BUMP POINTER INTO RESLST 
 0208  8A F7                    RESSRC:	MOV	DH,BH		;SAVE PTR TO START OF THIS RESWRD 
 020A  8A D3                    	MOV	DL,BL 
 020C                           RESSR2: 
                                	INS86	56		;FETCH FROM CODE SEGMENT 
 020D  8A 07                    	MOV	AL,BYTE PTR [BX]	;GET CHAR FROM RESLST 
 020F  0A C0                    	OR	AL,AL		;SET CC'S 
 0211  74 F2                    	JZ	SHORT RESSR3	;IF END OF THIS CHARS TABLE, GO BACK & BUMP C 
 0213  9F                       	LAHF 
 0214  43                       	INC	BX		;BUMP SOURCE PTR 
 0215  9E                       	SAHF 
 0216  78 02                    	JS	SHORT ??L009 
 0218  EB F2                    	JMP	RESSR2		;IF NOT END OF THIS RESWRD, THEN KEEP LOOKING 
 021A                           ??L009: 
                                	INS86	56		;FETCH FROM CODE SEGMENT 
 021B  8A 07                    	MOV	AL,BYTE PTR [BX]	;GET PTR TO RESERVED WORD VALUE 
 021D  3A C5                    	CMP	AL,CH		;SAME AS THE ONE WE SEARCH FOR? 
 021F  75 E6                    	JNZ	SHORT RESSR1	;NO, KEEP LOOKING. 
 0221  87 DA                    	XCHG	BX,DX		;SAVE FOUND PTR IN [H,L] 
 0223  3C 00 E                  	CMP	AL,LOW OFFSET $USR	;USR FUNCTION TOKEN? 
 0225  74 02                    	JZ	SHORT NOISPA	;DONT INSERT SPACE 
 0227  3C 00 E                  	CMP	AL,LOW OFFSET $FN	;IS IT FUNCTION TOKEN? 
 0229                           NOISPA: 
 0229  8A C1                    	MOV	AL,CL		;GET LEADING CHAR 
 022B  5A                       	POP	DX		;RESTORE LINE CHAR COUNT 
 022C  59                       	POP	CX		;RESTORE DEPOSIT PTR 
 022D  8A D0                    	MOV	DL,AL		;SAVE LEADING CHAR 
 022F  75 0C                    	JNZ	SHORT NTFNEX	;NOT "FN" EXPANSION 
 0231  A0 0000 E                	MOV	AL,BYTE PTR TEMPA	;SET CC'S ON TEMPA 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Page     1-26
EXTENDED LIST, DELETE, LLIST                                

 0234  0A C0                    	OR	AL,AL 
 0236  B0 00                    	MOV	AL,LOW 0	;CLEAR RESWRD FLAG - MARK AS SPECIAL 
 0238  A2 0000 E                	MOV	BYTE PTR TEMPA,AL	;SET FLAG 
 023B  EB 15                    	JMP	SHORT MORLNZ	;DO EXPANSION 
 023D                           NTFNEX: 
 023D  3C 5B                    	CMP	AL,LOW OFFSET "Z"+1	;WAS IT A SPECIAL CHAR? 
 023F  75 07                    	JNZ	SHORT NTSPCH	;NON-SPECIAL CHAR 
 0241  32 C0                    	XOR	AL,AL		;SET NON-SPECIAL 
 0243  A2 0000 E                	MOV	BYTE PTR TEMPA,AL 
 0246  EB 1D                    	JMP	SHORT MORPUR	;PRINT IT 
 0248  A0 0000 E                NTSPCH:	MOV	AL,BYTE PTR TEMPA	;WHAT DID WE DO LAST? 
 024B  0A C0                    	OR	AL,AL		;SPECIAL? 
 024D  B0 FF                    	MOV	AL,LOW 255	;FLAG IN RESERVED WORD 
 024F  A2 0000 E                	MOV	BYTE PTR TEMPA,AL	;CLEAR FLAG 
 0252  74 0D                    MORLNZ:	JZ	SHORT MORLN0	;GET CHAR AND PROCEED 
 0254  B0 20                    	MOV	AL,LOW " "	;PUT SPACE IN BUFFER 
 0256  8B F9                    	MOV	DI,CX 
 0258  AA                       	STOSB 
 0259  41                       	INC	CX 
 025A  FE CE                    	DEC	DH		;ANY SPACE LEFT IN BUFFER 
 025C  75 03                    	JNZ	SHORT ??L010 
 025E  E9 0000 E                	JMP	PPSWRT		;NO, RETURN 
 0261                           ??L010: 
 0261  8A C2                    MORLN0:	MOV	AL,DL 
 0263  EB 06                    	JMP	SHORT MORLN1	;CONTINUE 
 0265                           MORPUR: 
                                	INS86	56		;FETCH FROM CODE SEGMENT 
 0266  8A 07                    	MOV	AL,BYTE PTR [BX]	;GET BYTE FROM RESWRD 
 0268  43                       	INC	BX		;BUMP POINTER 
 0269  8A D0                    MORLNP:	MOV	DL,AL		;SAVE CHAR 
 026B  24 7F                    MORLN1:	AND	AL,LOW 177O	;AND OFF HIGH ORDER BIT FOR DISK & EDIT 
 026D  8B F9                    	MOV	DI,CX 
 026F  AA                       	STOSB			;STORE THIS CHAR 
 0270  41                       	INC	CX		;BUMP PTR 
 0271  FE CE                    	DEC	DH		;BUMP DOWN REMAINING CHAR COUNT 
 0273  75 03                    	JNZ	SHORT ??L011 
 0275  E9 0000 E                	JMP	PPSWRT		;IF END OF LINE, JUST RETURN 
 0278                           ??L011: 
 0278  0A C2                    	OR	AL,DL		;SET CC'S 
 027A  78 02                    	JS	SHORT ??L012 
 027C  EB E7                    	JMP	MORPUR		;END OF RESWRD? 
 027E                           ??L012: 
 027E  3C A8                    	CMP	AL,LOW OFFSET "("+128	;SPC( OR TAB( ? 
 0280  75 05                    	JNZ	SHORT NTSPCT	;NO 
 0282  32 C0                    	XOR	AL,AL		;CLEAR FLAG 
 0284  A2 0000 E                	MOV	BYTE PTR TEMPA,AL	;TO INSERT SPACE AFTERWARDS 
 0287                           NTSPCT: 
 0287  5B                       	POP	BX		;RESTORE SOURCE PTR. 
 0288  E9 00E0 R                	JMP	PLOOP2		;GET NEXT CHAR FROM LINE 
                                PUBLIC	TSTANM 
 028B  E8 0000 E                TSTANM:	CALL	ISLET2		;LETTER? 
 028E  72 01                    	JNAE	SHORT $+3 
 0290  C3                       	RET			;YES 
 0291  3C 30                    	CMP	AL,LOW "0"	;DIGIT? 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Page     1-27
EXTENDED LIST, DELETE, LLIST                                

 0293  73 01                    	JNB	SHORT $+3 
 0295  C3                       	RET			;TOO SMALL 
 0296  3C 3A                    	CMP	AL,LOW OFFSET "9"+1	;LAST DIGIT 
 0298  F5                       	CMC			;MAKE CARRY RIGHT 
 0299  C3                       	RET			;NO CARRY=DIGIT 
 029A  4B                       NUMLIN:	DEC	BX		;MOVE POINTER BACK AS CHRGET INX'S 
 029B  E8 0000 E                	CALL	CHRGTR		;SCAN THE CONSTANT 
 029E  52                       	PUSH	DX		;SAVE CHAR COUNT 
 029F  51                       	PUSH	CX		;SAVE DEPOSIT PTR 
 02A0  50                       	PUSH	AX		;SAVE CONSTANT TYPE. 
 02A1  E8 0000 E                	CALL	CONFC1		;MOVE CONSTANT INTO FAC 
 02A4  58                       	POP	AX		;RESTORE CONSTANT TYPE 
 02A5  B9 02BE R                	MOV	CX,OFFSET CONLIN	;PUT RETURN ADDR ON STACK 
 02A8  51                       	PUSH	CX		;SAVE IT 
 02A9  3C 00 E                  	CMP	AL,LOW OFFSET OCTCON	;OCTAL CONSTANT? 
 02AB  75 03                    	JNZ	SHORT ??L013 
 02AD  E9 0000 E                	JMP	FOUTO		;PRINT IT 
 02B0                           ??L013: 
 02B0  3C 00 E                  	CMP	AL,LOW OFFSET HEXCON	;HEX CONSTANT? 
 02B2  75 03                    	JNZ	SHORT ??L014 
 02B4  E9 0000 E                	JMP	FOUTH		;PRINT IN HEX 
 02B7                           ??L014: 
 02B7  8B 1E 0000 E             	MOV	BX,CONLO	;GET LINE # VALUE IF ONE. 
 02BB  E9 0000 E                	JMP	FOUT		;PRINT REMAINING POSSIBILITIES. 
 02BE  59                       CONLIN:	POP	CX		;RESTORE DEPOSIT PTR. 
 02BF  5A                       	POP	DX		;RESTORE CHAR COUNT 
 02C0  A0 0000 E                	MOV	AL,BYTE PTR CONSAV	;GET SAVED CONSTANT TOKEN 
 02C3  B2 4F                    	MOV	DL,LOW "O"	;ASSUME OCTAL CONSTANT 
 02C5  3C 00 E                  	CMP	AL,LOW OFFSET OCTCON	;OCTAL CONSTANT? 
 02C7  74 06                    	JZ	SHORT SAVBAS	;YES, PRINT IT 
 02C9  3C 00 E                  	CMP	AL,LOW OFFSET HEXCON	;HEX CONSTANT? 
 02CB  B2 48                    	MOV	DL,LOW "H"	;ASSUME SO. 
 02CD  75 16                    	JNZ	SHORT NUMSLN	;NOT BASE CONSTANT 
 02CF                           SAVBAS: 
 02CF  B0 26                    	MOV	AL,LOW "&"	;PRINT LEADING BASE INDICATOR 
 02D1  8B F9                    	MOV	DI,CX 
 02D3  AA                       	STOSB			;SAVE IT 
 02D4  41                       	INC	CX		;BUMP PTR 
 02D5  FE CE                    	DEC	DH		;BUMP DOWN CHAR COUNT 
 02D7  75 01                    	JNZ	SHORT $+3 
 02D9  C3                       	RET			;RETURN IF END OF BUFFER 
 02DA  8A C2                    	MOV	AL,DL		;GET BASE CHAR 
 02DC  8B F9                    	MOV	DI,CX 
 02DE  AA                       	STOSB			;SAVE IT 
 02DF  41                       	INC	CX		;BUMP PTR 
 02E0  FE CE                    	DEC	DH		;BUMP DOWN BASE COUNT 
 02E2  75 01                    	JNZ	SHORT $+3 
 02E4  C3                       	RET			;END OF BUFFER, DONE 
 02E5                           NUMSLN: 
 02E5  A0 0000 E                	MOV	AL,BYTE PTR CONTYP	;GET TYPE OF CONSTANT WE ARE 
 02E8  3C 04                    	CMP	AL,LOW 4	;IS IT SINGLE OR DOUBLE PREC? 
 02EA  B2 00                    	MOV	DL,LOW 0	;NO, NEVER PRINT TRAILING TYPE INDICATOR 
 02EC  72 06                    	JB	SHORT TYPSET 
 02EE  B2 21                    	MOV	DL,LOW "!"	;ASSUME SINGLE PREC. 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Page     1-28
EXTENDED LIST, DELETE, LLIST                                

 02F0  74 02                    	JZ	SHORT TYPSET	;IS CONTYP=4, WAS SINGLE 
 02F2  B2 23                    	MOV	DL,LOW "#"	;DOUBLE PREC INDICATOR 
 02F4                           TYPSET: 
 02F4  8A 07                    	MOV	AL,BYTE PTR [BX]	;GET LEADING CHAR 
 02F6  3C 20                    	CMP	AL,LOW " "	;LEADING SPACE 
 02F8  75 03                    	JNZ	SHORT ??L015 
 02FA  E8 0000 E                	CALL	INXHRT		;GO BY IT 
 02FD                           ??L015: 
 02FD  8A 07                    NUMSL2:	MOV	AL,BYTE PTR [BX]	;GET CHAR FROM NUMBER BUFFER 
 02FF  43                       	INC	BX		;BUMP POINTER 
 0300  0A C0                    	OR	AL,AL		;SET CC'S 
 0302  74 2C                    	JZ	SHORT NUMDN	;IF ZERO, ALL DONE. 
 0304  8B F9                    	MOV	DI,CX 
 0306  AA                       	STOSB			;SAVE CHAR IN BUF. 
 0307  41                       	INC	CX		;BUMP PTR 
 0308  FE CE                    	DEC	DH		;SEE IF END OF BUFFER 
 030A  75 01                    	JNZ	SHORT $+3 
 030C  C3                       	RET			;IF END OF BUFFER, RETURN 
 030D  A0 0000 E                	MOV	AL,BYTE PTR CONTYP	;GET TYPE OF CONSTANT TO BE PRINTED 
 0310  3C 04                    	CMP	AL,LOW 4	;TEST FOR SINGLE OR DOUBLE PRECISION 
 0312  72 E9                    	JB	SHORT NUMSL2	;NO, WAS INTEGER 
 0314  9F                       	LAHF 
 0315  49                       	DEC	CX		;PICK UP SAVED CHAR 
 0316  9E                       	SAHF 
 0317  8B F1                    	MOV	SI,CX 
 0319  8A 04                    	MOV	AL,[SI]		;EASIER THAN PUSHING ON STACK 
 031B  9F                       	LAHF 
 031C  41                       	INC	CX		;RESTORE TO POINT WHERE IT SHOULD 
 031D  9E                       	SAHF 
 031E  75 04                    	JNZ	SHORT DBLSCN	;IF DOUBLE, DONT TEST FOR EMBEDED "." 
 0320  3C 2E                    	CMP	AL,LOW "."	;TEST FOR FRACTION 
 0322  74 08                    	JZ	SHORT ZERE	;IF SINGLE & EMBEDED ., THEN DONT PRINT ! 
 0324  3C 44                    DBLSCN:	CMP	AL,LOW "D"	;DOUBLE PREC. EXPONENT? 
 0326  74 04                    	JZ	SHORT ZERE	;YES, MARK NO VALUE TYPE INDICATOR NESC. 
 0328  3C 45                    	CMP	AL,LOW "E"	;SINGLE PREC. EXPONENT? 
 032A  75 D1                    	JNZ	SHORT NUMSL2	;NO, PROCEED 
 032C  B2 00                    ZERE:	MOV	DL,LOW 0	;MARK NO PRINTING OF TYPE INDICATOR 
 032E  EB CD                    	JMP	SHORT NUMSL2	;KEEP MOVING NUMBER CHARS INTO BUF 
                                 
 0330                           NUMDN: 
 0330  8A C2                    	MOV	AL,DL		;GET FLAG TO INDICATE WHETHER TO INSERT 
 0332  0A C0                    	OR	AL,AL		;A "D" AFTER DOUBLE PREC. # 
 0334  74 09                    	JZ	SHORT NOD	;NO, DONT INSERT IT 
 0336  8B F9                    	MOV	DI,CX 
 0338  AA                       	STOSB			;SAVE IN BUFFER 
 0339  41                       	INC	CX		;BUMP POINTER 
 033A  FE CE                    	DEC	DH		;DECRMENT COUNT OF CHARS LEFT IN BUFFER 
 033C  75 01                    	JNZ	SHORT $+3 
 033E  C3                       	RET			;=0, MUST TRUNCATE LIST OF THIS LINE. 
 033F                           NOD: 
 033F  8B 1E 0000 E             	MOV	BX,CONTXT	;GET BACK TEXT POINTER AFTER CONSTANT 
 0343  E9 00E0 R                	JMP	PLOOP2		;GET NEXT CHAR 
                                 
                                 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Page     1-29
EXTENDED LIST, DELETE, LLIST                                

                                ; 
                                ; THE FOLLOWING CODE IS FOR THE DELETE RANGE 
                                ; COMMAND. BEFORE THE LINES ARE DELETED, 'OK' 
                                ; IS TYPED. 
                                ; 
                                PUBLIC	DELETE 
 0346                           DELETE: 
 0346  E8 0000 E                	CALL	SCNLIN		;SCAN LINE RANGE 
 0349  51                       	PUSH	CX 
 034A  E8 0000 E                	CALL	DEPTR		;CHANGE POINTERS BACK TO NUMBERS 
 034D  59                       	POP	CX 
 034E  5A                       	POP	DX		;POP MAX LINE OFF STACK 
 034F  51                       	PUSH	CX		;SAVE POINTER TO START OF DELETION 
                                				;FOR USE BY CHEAD AFTER FINI 
 0350  51                       	PUSH	CX		;SAVE POINTER TO START OF 1ST LINE 
 0351  E8 0000 E                	CALL	FNDLIN		;FIND THE LAST LINE 
 0354  73 0B                    	JAE	SHORT FCERRG	;MUST HAVE A MATCH ON THE UPPER BOUND 
 0356  8A F7                    	MOV	DH,BH		;[D,E]=POINTER AT THE START OF THE LINE 
 0358  8A D3                    	MOV	DL,BL		;BEYOND THE LAST LINE IN THE RANGE 
 035A  5E                       	POP	SI		;XTHL 
 035B  87 F3                    	XCHG	SI,BX 
 035D  56                       	PUSH	SI		;SAVE THE POINTER TO THE NEXT LINE 
 035E  53                       	PUSH	BX		;SAVE THE POINTER TO THE START OF 
                                				;THE FIRST LINE IN THE RANGE 
 035F  3B DA                    	CMP	BX,DX		;MAKE SURE THE START COMES BEFORE THE END 
 0361  72 03                    FCERRG:	JNAE	SHORT ??L016 
 0363  E9 0000 E                	JMP	FCERR		;IF NOT, "ILLEGAL FUNCTION CALL" 
 0366                           ??L016: 
                                				;DELETE must now be at EOL 
                                	EXTRN	EOSCHK:NEAR 
 0366  8B 1E 0000 E             	MOV	BX,TEMP		;Get text pointer 
 036A  E8 0000 E                	CALL	EOSCHK		;Check for end of statement 
 036D  BB 0000 E                	MOV	BX,OFFSET REDDY	;PRINT "OK" PREMATURELY 
 0370  E8 0000 E                	CALL	STROUT 
 0373  59                       	POP	CX		;GET POINTER TO FIRST IN [B,C] 
 0374  BB 0000 E                	MOV	BX,OFFSET FINI	;GO BACK TO FINI WHEN DONE 
 0377  5E                       	POP	SI		;XTHL 
 0378  87 F3                    	XCHG	SI,BX 
 037A  56                       	PUSH	SI		;[H,L]=POINTER TO THE NEXT LINE 
                                ; ERASE A LINE FROM MEMORY 
                                ; [B,C]=START OF LINE BEING DELETED 
                                ; [H,L]=START OF NEXT LINE 
                                ; 
                                PUBLIC	DEL 
 037B  87 DA                    DEL:	XCHG	BX,DX		;[D,E] NOW HAVE THE POINTER TO THE LINE 
                                				;BEYOND THIS ONE 
 037D  8B 1E 0000 E             	MOV	BX,VARTAB	;COMPACTIFYING TO VARTAB 
 0381  8B F2                    MLOOP:	MOV	SI,DX 
 0383  8A 04                    	MOV	AL,[SI] 
 0385  8B F9                    	MOV	DI,CX 
 0387  AA                       	STOSB			;SHOVING DOWN TO ELIMINATE A LINE 
 0388  41                       	INC	CX 
 0389  42                       	INC	DX 
 038A  3B DA                    	CMP	BX,DX		;DONE COMPACTIFYING? 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Page     1-30
EXTENDED LIST, DELETE, LLIST                                

 038C  75 F3                    	JNZ	SHORT MLOOP	;NO 
 038E  8B D9                    	MOV	BX,CX 
                                ;Clear SCALARS and ARRAYS incase we are replacing line which may force 
                                ; garbage collection in BLTU 
 0390  89 1E 0000 E             	MOV	VARTAB,BX 
 0394  89 1E 0000 E             	MOV	ARYTAB,BX 
 0398  89 1E 0000 E             	MOV	STREND,BX 
 039C  C3                       	RET 
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Page     1-31
EXTENDED LIST, DELETE, LLIST                                

                                	PAGE 
                                 
                                 
 039D                           CSEG	ENDS 
                                	END 

Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Symbols-1
                                                             

Macros:

		N a m e			Lines

?Z0  . . . . . . . . . . . . . .  	   0
ACRLF  . . . . . . . . . . . . .  	   2
ADD_EXT  . . . . . . . . . . . .  	   4
ADR  . . . . . . . . . . . . . .  	   1
CALLOS . . . . . . . . . . . . .  	   4
CHRGET . . . . . . . . . . . . .  	   1
COMPAR . . . . . . . . . . . . .  	   2
DBGBRK . . . . . . . . . . . . .  	   1
DC . . . . . . . . . . . . . . .  	   6
DEF_MAC  . . . . . . . . . . . .  	   9
DERMAK . . . . . . . . . . . . .  	   3
DJNZ . . . . . . . . . . . . . .  	   2
DO_EXT . . . . . . . . . . . . .  	   1
EXPAND_MAC . . . . . . . . . . .  	   1
FSIGN  . . . . . . . . . . . . .  	   1
GETYPE . . . . . . . . . . . . .  	   1
INS86  . . . . . . . . . . . . .  	  13
INST . . . . . . . . . . . . . .  	   1
LDDR . . . . . . . . . . . . . .  	   8
LDIR . . . . . . . . . . . . . .  	   8
MOVRI  . . . . . . . . . . . . .  	   6
OUTCHR . . . . . . . . . . . . .  	   1
POPR . . . . . . . . . . . . . .  	   2
PUSHM  . . . . . . . . . . . . .  	   5
PUSHR  . . . . . . . . . . . . .  	   2
Q  . . . . . . . . . . . . . . .  	  19
QF . . . . . . . . . . . . . . .  	  19
R  . . . . . . . . . . . . . . .  	   6
R2 . . . . . . . . . . . . . . .  	   6
ROFFST . . . . . . . . . . . . .  	   2
SYNCHK . . . . . . . . . . . . .  	   2
T  . . . . . . . . . . . . . . .  	   2
UN_DEF . . . . . . . . . . . . .  	   1

Segments and Groups:

                N a m e         	Size	Align	Combine Class

CSEG . . . . . . . . . . . . . .  	039D	PARA	PUBLIC	'CODESG'
DSEG . . . . . . . . . . . . . .  	0000	PARA	PUBLIC	'DATASG'

Symbols:            

                N a m e         	Type	Value	Attr         

ALPCPM . . . . . . . . . . . . .  	Number	0000	
ALPS . . . . . . . . . . . . . .  	Number	0000	
ALPTAB . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ALTAIR . . . . . . . . . . . . .  	Number	0000	
ANSI . . . . . . . . . . . . . .  	Number	0001	
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Symbols-2
                                                             

ARYTAB . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
ASCBS  . . . . . . . . . . . . .  	Number	0008	
ASCCR  . . . . . . . . . . . . .  	Number	000D	
ASCCTC . . . . . . . . . . . . .  	Number	0003	
ASCCTS . . . . . . . . . . . . .  	Number	0013	
ASCCTZ . . . . . . . . . . . . .  	Number	001A	
ASCESC . . . . . . . . . . . . .  	Number	001B	
ASCLF  . . . . . . . . . . . . .  	Number	000A	
ASCSPC . . . . . . . . . . . . .  	Number	0020	
ASCTAB . . . . . . . . . . . . .  	Number	0009	
AUTFLG . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
AUTINC . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
AUTLIN . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External

BASDEB . . . . . . . . . . . . .  	Number	0000	
BEEPSW . . . . . . . . . . . . .  	Number	0001	
BFCHKC . . . . . . . . . . . . .  	L NEAR	0102	CSEG
BFNTWH . . . . . . . . . . . . .  	L NEAR	01F8	CSEG
BINCSW . . . . . . . . . . . . .  	Number	0000	
BINFID . . . . . . . . . . . . .  	Number	00FF	
BLODSW . . . . . . . . . . . . .  	Number	0001	
BLTU . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
BSVFID . . . . . . . . . . . . .  	Number	00FD	
BUBL . . . . . . . . . . . . . .  	Number	0000	
BUF  . . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
BUFLEN . . . . . . . . . . . . .  	Number	00FF	
BUFLIN . . . . . . . . . . . . .  	L NEAR	00C5	CSEG	Global
BUFMIN . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
BUFOFS . . . . . . . . . . . . .  	Number	0002	

CALLS  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
CAN8 . . . . . . . . . . . . . .  	Number	0000	
CASSW  . . . . . . . . . . . . .  	Number	0000	
CHKDRS . . . . . . . . . . . . .  	L NEAR	01C1	CSEG
CHKSTR . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
CHNFLG . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
CHRGTR . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
CHSEAT . . . . . . . . . . . . .  	Number	0001	
CLEARC . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
CLMWID . . . . . . . . . . . . .  	Number	000E	
CMPUTN . . . . . . . . . . . . .  	Number	0000	
CNTOFL . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
COMMNT . . . . . . . . . . . . .  	Number	0000	
CONFC1 . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
CONLIN . . . . . . . . . . . . .  	L NEAR	02BE	CSEG
CONLO  . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
CONSAV . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
CONSSW . . . . . . . . . . . . .  	Number	0001	
CONTO  . . . . . . . . . . . . .  	Number	000F	
CONTRO . . . . . . . . . . . . .  	Number	0001	
CONTXT . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
CONTYP . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
CPM  . . . . . . . . . . . . . .  	Number	0001	
CPM110 . . . . . . . . . . . . .  	Number	0000	
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Symbols-3
                                                             

CPM2 . . . . . . . . . . . . . .  	Number	0001	
CPM86  . . . . . . . . . . . . .  	Number	0000	
CPMA75 . . . . . . . . . . . . .  	Number	0000	
CPMADD . . . . . . . . . . . . .  	Number	0000	
CPMCON . . . . . . . . . . . . .  	Number	0000	
CPMLIF . . . . . . . . . . . . .  	Number	0000	
CPMMDS . . . . . . . . . . . . .  	Number	0000	
CPMPER . . . . . . . . . . . . .  	Number	0000	
CPMRSH . . . . . . . . . . . . .  	Number	0000	
CPMSBC . . . . . . . . . . . . .  	Number	0000	
CPMSER . . . . . . . . . . . . .  	Number	0000	
CRDO . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
CRDONZ . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
CRONLY . . . . . . . . . . . . .  	Number	0000	
CURLIN . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
C_BUFF . . . . . . . . . . . . .  	Number	001A	
C_CLOS . . . . . . . . . . . . .  	Number	0010	
C_DCIO . . . . . . . . . . . . .  	Number	0006	
C_DELE . . . . . . . . . . . . .  	Number	0013	
C_GDRV . . . . . . . . . . . . .  	Number	0019	
C_MAKE . . . . . . . . . . . . .  	Number	0016	
C_OPEN . . . . . . . . . . . . .  	Number	000F	
C_PARS . . . . . . . . . . . . .  	Number	0029	
C_PRTO . . . . . . . . . . . . .  	Number	0005	
C_RBR  . . . . . . . . . . . . .  	Number	0027	
C_READ . . . . . . . . . . . . .  	Number	0014	
C_RENA . . . . . . . . . . . . .  	Number	0017	
C_REST . . . . . . . . . . . . .  	Number	000D	
C_RNDR . . . . . . . . . . . . .  	Number	0021	
C_RNDW . . . . . . . . . . . . .  	Number	0022	
C_SDRV . . . . . . . . . . . . .  	Number	000E	
C_SEAR . . . . . . . . . . . . .  	Number	0011	

DATLIN . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
DATOFS . . . . . . . . . . . . .  	Number	0039	
DATPSC . . . . . . . . . . . . .  	Number	0080	
DATPTR . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
DATSET . . . . . . . . . . . . .  	L NEAR	01AF	CSEG
DBLCHR . . . . . . . . . . . . .  	Number	0000	
DBLCN1 . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
DBLCON . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
DBLSCN . . . . . . . . . . . . .  	L NEAR	0324	CSEG
DBLTRN . . . . . . . . . . . . .  	Number	0000	
DCXBRT . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
DEBUG  . . . . . . . . . . . . .  	Text  		
DEFTBL . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
DEL  . . . . . . . . . . . . . .  	L NEAR	037B	CSEG	Global
DELETE . . . . . . . . . . . . .  	L NEAR	0346	CSEG	Global
DEPTR  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
DFACLO . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
DISK . . . . . . . . . . . . . .  	Number	0001	
DMC  . . . . . . . . . . . . . .  	Number	0000	
DOCNVF . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
DONUM  . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Symbols-4
                                                             

DORES  . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
DOS  . . . . . . . . . . . . . .  	Number	0000	
DOT  . . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
DRVPOS . . . . . . . . . . . . .  	Number	0000	
DSCTMP . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
DSKER1 . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
DSKERR . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
DUPONT . . . . . . . . . . . . .  	Number	0000	
DYNCOM . . . . . . . . . . . . .  	Number	0001	

EDIT80 . . . . . . . . . . . . .  	Number	0000	
ENDFOR . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
ENDPRG . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
EOSCHK . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
EQULTK . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERRBFM . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERRBFN . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERRBRN . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERRDD  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERRDFL . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERRDNA . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERRDV0 . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERRFAE . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERRFAO . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERRFC  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERRFDR . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERRFLG . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
ERRFN  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERRFNF . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERRFNO . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERRFOV . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERRIER . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERRIFN . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERRIOE . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERRLBO . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERRLIN . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
ERRMO  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERRNF  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERRNMF . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERRNR  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERROD  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERROV  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERRRAD . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERRRE  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERRRG  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERRRPE . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERRSN  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERRTAB . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERRTM  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERRTMF . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERRTXT . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
ERRUE1 . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERRUF  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ERRUS  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Symbols-5
                                                             

ERRWH  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ESCCTL . . . . . . . . . . . . .  	Number	0000	
EUROPE . . . . . . . . . . . . .  	Number	0000	
EXIDY  . . . . . . . . . . . . .  	Number	0000	

FAC  . . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
FACLO  . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
FADD . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FAST . . . . . . . . . . . . . .  	Number	0001	
FCBSIZ . . . . . . . . . . . . .  	Number	0026	
FCB_DT . . . . . . . . . . . . .  	Number	001D	
FCB_DV . . . . . . . . . . . . .  	Number	0007	
FCB_EX . . . . . . . . . . . . .  	Number	0013	
FCB_FN . . . . . . . . . . . . .  	Number	0008	
FCB_FS . . . . . . . . . . . . .  	Number	0017	
FCB_FT . . . . . . . . . . . . .  	Number	0010	
FCB_NR . . . . . . . . . . . . .  	Number	0027	
FCB_RC . . . . . . . . . . . . .  	Number	0015	
FCB_RN . . . . . . . . . . . . .  	Number	0028	
FCERR  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FCERRG . . . . . . . . . . . . .  	L NEAR	0361	CSEG
FC_ASC . . . . . . . . . . . . .  	Number	0000	
FC_BIN . . . . . . . . . . . . .  	Number	0001	
FDBSIZ . . . . . . . . . . . . .  	Number	0039	
FDTOK  . . . . . . . . . . . . .  	Number	0000	
FD_DAT . . . . . . . . . . . . .  	Number	00C2	
FD_LOG . . . . . . . . . . . . .  	Number	00BD	
FD_OPS . . . . . . . . . . . . .  	Number	00C0	
FD_PHY . . . . . . . . . . . . .  	Number	00BB	
FD_SIZ . . . . . . . . . . . . .  	Number	00B9	
FETOK  . . . . . . . . . . . . .  	Number	0000	
FILIND . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FILINP . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FIN  . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FINDBL . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FINI . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FINLPT . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FIVDSK . . . . . . . . . . . . .  	Number	0001	
FIVEO  . . . . . . . . . . . . .  	Number	0001	
FIVLPT . . . . . . . . . . . . .  	Number	0001	
FIVMEM . . . . . . . . . . . . .  	Number	0001	
FKEYON . . . . . . . . . . . . .  	Number	0001	
FLGINP . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
FLGOVC . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
FLGSCN . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
FL_BKC . . . . . . . . . . . . .  	Number	0080	
FN2SW  . . . . . . . . . . . . .  	Number	0000	
FNAML  . . . . . . . . . . . . .  	Number	000B	
FNDLIN . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FOUT . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FOUTH  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FOUTO  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FRCDBL . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FRCINT . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Symbols-6
                                                             

FRCSNG . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FRCSTR . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FREFAC . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FRETMS . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FRETOP . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
FRMCHK . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FRMEVL . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
FUNACT . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
FVALSV . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
F_BAKC . . . . . . . . . . . . .  	Number	0032	
F_BREM . . . . . . . . . . . . .  	Number	0030	
F_CLOC . . . . . . . . . . . . .  	Number	002D	
F_CODE . . . . . . . . . . . . .  	Number	0031	
F_DEV  . . . . . . . . . . . . .  	Number	0034	
F_EDIT . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
F_FCB  . . . . . . . . . . . . .  	Number	0007	
F_FLGS . . . . . . . . . . . . .  	Number	0037	
F_MODE . . . . . . . . . . . . .  	Number	0006	
F_NEXT . . . . . . . . . . . . .  	Number	0004	
F_NUL1 . . . . . . . . . . . . .  	Number	0000	
F_NUL2 . . . . . . . . . . . . .  	Number	0002	
F_NUL3 . . . . . . . . . . . . .  	Number	0033	
F_NUL4 . . . . . . . . . . . . .  	Number	0036	
F_NUL5 . . . . . . . . . . . . .  	Number	00BF	
F_NUM  . . . . . . . . . . . . .  	Number	0001	
F_ORCT . . . . . . . . . . . . .  	Number	002F	
F_POS  . . . . . . . . . . . . .  	Number	0038	
F_WID  . . . . . . . . . . . . .  	Number	0035	

GENBIN . . . . . . . . . . . . .  	Number	0001	
GENDSK . . . . . . . . . . . . .  	Number	0000	
GENFLS . . . . . . . . . . . . .  	Number	0000	
GENIO  . . . . . . . . . . . . .  	Number	0001	
GENWID . . . . . . . . . . . . .  	Number	0000	
GESBC  . . . . . . . . . . . . .  	Number	0000	
GETBYT . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
GETIN2 . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
GETINT . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
GETSPA . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
GETSTK . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
GETYPR . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
GIO86  . . . . . . . . . . . . .  	Number	0001	
GPLOOP . . . . . . . . . . . . .  	L NEAR	01AC	CSEG
GREATK . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
GTMPRT . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
GW . . . . . . . . . . . . . . .  	Number	0001	
GWCASS . . . . . . . . . . . . .  	Number	0000	
GWDBUG . . . . . . . . . . . . .  	Number	0000	
G_BIN  . . . . . . . . . . . . .  	Number	001A	
G_BOT  . . . . . . . . . . . . .  	Number	001C	
G_CLS  . . . . . . . . . . . . .  	Number	0006	
G_EOF  . . . . . . . . . . . . .  	Number	0000	
G_GCW  . . . . . . . . . . . . .  	Number	0018	
G_GPS  . . . . . . . . . . . . .  	Number	0012	
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Symbols-7
                                                             

G_GWD  . . . . . . . . . . . . .  	Number	0014	
G_LOC  . . . . . . . . . . . . .  	Number	0002	
G_LOF  . . . . . . . . . . . . .  	Number	0004	
G_OPN  . . . . . . . . . . . . .  	Number	000C	
G_RND  . . . . . . . . . . . . .  	Number	000A	
G_SCW  . . . . . . . . . . . . .  	Number	0016	
G_SIN  . . . . . . . . . . . . .  	Number	000E	
G_SOT  . . . . . . . . . . . . .  	Number	0010	
G_SWD  . . . . . . . . . . . . .  	Number	0008	

HAL  . . . . . . . . . . . . . .  	Number	0000	
HEATH  . . . . . . . . . . . . .  	Number	0000	
HEXCON . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
HEXOCT . . . . . . . . . . . . .  	Number	0001	
HGHBIT . . . . . . . . . . . . .  	Number	0001	
HLPEDT . . . . . . . . . . . . .  	Number	0000	

I8086  . . . . . . . . . . . . .  	Number	0001	
I8251  . . . . . . . . . . . . .  	Number	0000	
IADD . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
IBMLIK . . . . . . . . . . . . .  	Number	0001	
IBMTOK . . . . . . . . . . . . .  	Number	0001	
IEESLV . . . . . . . . . . . . .  	Number	0000	
INDSKC . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
INEG2  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
INIT . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
INKEYF . . . . . . . . . . . . .  	Number	0001	
INLADD . . . . . . . . . . . . .  	Number	0000	
INLIN  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
INPPAS . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
INPRT  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
INRART . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
INSRTK . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
INSTR  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
INSTSW . . . . . . . . . . . . .  	Number	0000	
INTDEX . . . . . . . . . . . . .  	Number	0000	
INTEL  . . . . . . . . . . . . .  	Number	0000	
INTFHW . . . . . . . . . . . . .  	Number	0000	
INTFSW . . . . . . . . . . . . .  	Number	0000	
INTLEC . . . . . . . . . . . . .  	Number	0000	
INTROM . . . . . . . . . . . . .  	Number	0000	
INXHRT . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ISC  . . . . . . . . . . . . . .  	Number	0000	
ISFLIO . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ISIGN  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ISIS . . . . . . . . . . . . . .  	Number	0000	
ISLET  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ISLET2 . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ISMID$ . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External

JISKTN . . . . . . . . . . . . .  	Number	0000	

KANABS . . . . . . . . . . . . .  	Number	0000	
KANJFN . . . . . . . . . . . . .  	Number	0000	
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Symbols-8
                                                             

KBFLEN . . . . . . . . . . . . .  	Number	013E	
KBUF . . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
KEYSTA . . . . . . . . . . . . .  	Number	0000	
KILLER . . . . . . . . . . . . .  	Number	0000	

LABEL  . . . . . . . . . . . . .  	Number	0000	
LABKEY . . . . . . . . . . . . .  	Number	0001	
LEN2 . . . . . . . . . . . . . .  	Number	0001	
LEN3 . . . . . . . . . . . . . .  	Number	0001	
LENGTH . . . . . . . . . . . . .  	Number	0002	
LESSTK . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
LINLN  . . . . . . . . . . . . .  	Number	0050	
LINPRT . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
LISELX . . . . . . . . . . . . .  	L NEAR	00C0	CSEG
LISEOL . . . . . . . . . . . . .  	L NEAR	009A	CSEG
LISPRT . . . . . . . . . . . . .  	L NEAR	0081	CSEG	Global
LIST . . . . . . . . . . . . . .  	L NEAR	0009	CSEG	Global
LIST4  . . . . . . . . . . . . .  	L NEAR	0027	CSEG
LISTEN . . . . . . . . . . . . .  	Number	0001	
LISTX  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
LLIST  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	Global
LNGVAR . . . . . . . . . . . . .  	Number	0001	
LNREAD . . . . . . . . . . . . .  	Number	0000	
LOKHED . . . . . . . . . . . . .  	Number	0000	
LONGI  . . . . . . . . . . . . .  	Number	0000	
LPT3 . . . . . . . . . . . . . .  	Number	0000	
LPTLEN . . . . . . . . . . . . .  	Number	0084	
LPTSW  . . . . . . . . . . . . .  	Number	0001	
LRUN . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
LSTERR . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
LSTOPK . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
LTRACE . . . . . . . . . . . . .  	Number	0000	

MAKINT . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
MAKUPL . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
MAKUPS . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
MCI  . . . . . . . . . . . . . .  	Number	0000	
MDS  . . . . . . . . . . . . . .  	Number	0000	
MDSISS . . . . . . . . . . . . .  	Number	0000	
MD_APP . . . . . . . . . . . . .  	Number	0008	
MD_RND . . . . . . . . . . . . .  	Number	0004	
MD_SQI . . . . . . . . . . . . .  	Number	0001	
MD_SQO . . . . . . . . . . . . .  	Number	0002	
MELCO  . . . . . . . . . . . . .  	Number	0000	
MEMIMG . . . . . . . . . . . . .  	Number	0001	
MEMSIZ . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
MIDTK  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
MINUTK . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
MLOOP  . . . . . . . . . . . . .  	L NEAR	0381	CSEG
MORLN0 . . . . . . . . . . . . .  	L NEAR	0261	CSEG
MORLN1 . . . . . . . . . . . . .  	L NEAR	026B	CSEG
MORLNP . . . . . . . . . . . . .  	L NEAR	0269	CSEG
MORLNZ . . . . . . . . . . . . .  	L NEAR	0252	CSEG
MORPUR . . . . . . . . . . . . .  	L NEAR	0265	CSEG
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Symbols-9
                                                             

MOSTEK . . . . . . . . . . . . .  	Number	0000	
MOVE . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
MOVE1  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
MOVFM  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
MOVFR  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
MOVMF  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
MOVRF  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
MOVRM  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
MRGFLG . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
MULSEG . . . . . . . . . . . . .  	Number	0001	

NAME . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
NAMLEN . . . . . . . . . . . . .  	Number	0028	
NAMSCN . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
NASCOM . . . . . . . . . . . . .  	Number	0000	
NATROM . . . . . . . . . . . . .  	Number	0000	
NBANKS . . . . . . . . . . . . .  	Number	0001	
NCRBAS . . . . . . . . . . . . .  	Number	0000	
NCRCAS . . . . . . . . . . . . .  	Number	0000	
NCRDEB . . . . . . . . . . . . .  	Number	0000	
NCRELS . . . . . . . . . . . . .  	Number	0000	
NCRLPT . . . . . . . . . . . . .  	Number	0001	
NECBAS . . . . . . . . . . . . .  	Number	0000	
NECPPC . . . . . . . . . . . . .  	Number	0000	
NEG  . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
NLONLY . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
NMCOMT . . . . . . . . . . . . .  	Number	0002	
NMKEYF . . . . . . . . . . . . .  	Number	000A	
NMKEYT . . . . . . . . . . . . .  	Number	000E	
NMLINE . . . . . . . . . . . . .  	Number	0019	
NMLPT  . . . . . . . . . . . . .  	Number	0003	
NMPAGE . . . . . . . . . . . . .  	Number	0001	
NMPENT . . . . . . . . . . . . .  	Number	0001	
NMREL  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
NMSTRT . . . . . . . . . . . . .  	Number	0004	
NNECBS . . . . . . . . . . . . .  	Number	0000	
NOATDL . . . . . . . . . . . . .  	Number	0000	
NOCTLA . . . . . . . . . . . . .  	Number	0000	
NOD  . . . . . . . . . . . . . .  	L NEAR	033F	CSEG
NODOT  . . . . . . . . . . . . .  	Number	0000	
NOEDIT . . . . . . . . . . . . .  	Number	0000	
NOFUNS . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
NOIOS  . . . . . . . . . . . . .  	Number	0000	
NOISPA . . . . . . . . . . . . .  	L NEAR	0229	CSEG
NONDSK . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
NONULL . . . . . . . . . . . . .  	Number	0000	
NOPEKS . . . . . . . . . . . . .  	Number	0000	
NORNF  . . . . . . . . . . . . .  	Number	0000	
NOROMP . . . . . . . . . . . . .  	Number	0000	
NORUBT . . . . . . . . . . . . .  	Number	0000	
NOSNGQ . . . . . . . . . . . . .  	L NEAR	01A8	CSEG
NOSPAL . . . . . . . . . . . . .  	L NEAR	0073	CSEG
NOTELS . . . . . . . . . . . . .  	L NEAR	01EA	CSEG
NOTTK  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Symbols-10
                                                             

NOUSR  . . . . . . . . . . . . .  	Number	0000	
NOVARP . . . . . . . . . . . . .  	Number	0000	
NTEMBL . . . . . . . . . . . . .  	L NEAR	0116	CSEG
NTFNEX . . . . . . . . . . . . .  	L NEAR	023D	CSEG
NTFNTK . . . . . . . . . . . . .  	L NEAR	01E2	CSEG
NTQTTK . . . . . . . . . . . . .  	L NEAR	01E3	CSEG
NTSPCH . . . . . . . . . . . . .  	L NEAR	0248	CSEG
NTSPCT . . . . . . . . . . . . .  	L NEAR	0287	CSEG
NULOPM . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
NUMCMD . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
NUMCON . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
NUMDN  . . . . . . . . . . . . .  	L NEAR	0330	CSEG
NUMLEV . . . . . . . . . . . . .  	Number	006E	
NUMLIN . . . . . . . . . . . . .  	L NEAR	029A	CSEG
NUMSL2 . . . . . . . . . . . . .  	L NEAR	02FD	CSEG
NUMSLN . . . . . . . . . . . . .  	L NEAR	02E5	CSEG
NUMTMP . . . . . . . . . . . . .  	Number	000A	
NUMTRP . . . . . . . . . . . . .  	Number	0015	
NXTLIN . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External

OCTCNS . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
OCTCON . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
OEMRAM . . . . . . . . . . . . .  	Number	0000	
OKI  . . . . . . . . . . . . . .  	Number	0000	
OLD86  . . . . . . . . . . . . .  	Number	0000	
OLDBLD . . . . . . . . . . . . .  	Number	0001	
OLDLIN . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
OLDTXT . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
OLVPPC . . . . . . . . . . . . .  	Number	0000	
OMERR  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ONEFLG . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
ONEFUN . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ONELIN . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
ONGSBF . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
ONTEL  . . . . . . . . . . . . .  	Number	0000	
OPRTYP . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
OPTFLG . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
OPTVAL . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
OUTCH1 . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
OUTDO  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
OVCSTR . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External

PALSIZ . . . . . . . . . . . . .  	Number	0000	
PANBAS . . . . . . . . . . . . .  	Number	0000	
PANDBL . . . . . . . . . . . . .  	Number	0000	
PARM1  . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
PARM2  . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
PC8A . . . . . . . . . . . . . .  	Number	0000	
PCS  . . . . . . . . . . . . . .  	Number	0000	
PLAYSW . . . . . . . . . . . . .  	Number	0001	
PLOOP  . . . . . . . . . . . . .  	L NEAR	00D9	CSEG
PLOOP2 . . . . . . . . . . . . .  	L NEAR	00E0	CSEG	Global
PLOOPG . . . . . . . . . . . . .  	L NEAR	0142	CSEG
PLOOPH . . . . . . . . . . . . .  	L NEAR	0144	CSEG
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Symbols-11
                                                             

PLOOPR . . . . . . . . . . . . .  	L NEAR	0159	CSEG
PLOOPZ . . . . . . . . . . . . .  	L NEAR	0154	CSEG
PLUSTK . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
POLKEY . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
POPHRT . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
POS  . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
PPSWRT . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
PRGFIN . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
PRINT  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
PRINUS . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
PRMLEN . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
PRMLN2 . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
PRMSIZ . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
PRMSTK . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
PROCHK . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
PROFID . . . . . . . . . . . . .  	Number	00FE	
PRTVAR . . . . . . . . . . . . .  	L NEAR	012C	CSEG
PTRFIL . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
PTRFLG . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
PTRGET . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
PTRGT2 . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
PUFOUT . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
PURE . . . . . . . . . . . . . .  	Number	0001	
PUSHF  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
PUTNEW . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
PUTTMP . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External

QINLIN . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
QTCOLN . . . . . . . . . . . . .  	L NEAR	0114	CSEG
QUEUE  . . . . . . . . . . . . .  	Number	0001	

READY  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
REALIO . . . . . . . . . . . . .  	Number	0001	
REASON . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
REDDY  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
REMSET . . . . . . . . . . . . .  	L NEAR	01BA	CSEG
RESEXP . . . . . . . . . . . . .  	L NEAR	01D5	CSEG
RESFIN . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
RESLST . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
RESSR1 . . . . . . . . . . . . .  	L NEAR	0207	CSEG
RESSR2 . . . . . . . . . . . . .  	L NEAR	020C	CSEG
RESSR3 . . . . . . . . . . . . .  	L NEAR	0205	CSEG
RESSRC . . . . . . . . . . . . .  	L NEAR	0208	CSEG
RMX  . . . . . . . . . . . . . .  	Number	0000	
RNDX . . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
RSHACK . . . . . . . . . . . . .  	Number	0000	
RSTLES . . . . . . . . . . . . .  	Number	0001	
RUNC . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External

SAVBAS . . . . . . . . . . . . .  	L NEAR	02CF	CSEG
SAVSEG . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
SAVSTK . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
SAVTXT . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
SBC  . . . . . . . . . . . . . .  	Number	0000	
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Symbols-12
                                                             

SBC86  . . . . . . . . . . . . .  	Number	0000	
SCNLIN . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
SCNSEM . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
SCP  . . . . . . . . . . . . . .  	Number	0001	
SCRN86 . . . . . . . . . . . . .  	Number	0001	
SCRNIO . . . . . . . . . . . . .  	Number	0001	
SCROLT . . . . . . . . . . . . .  	Number	0001	
SCRTCH . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
SETDRS . . . . . . . . . . . . .  	L NEAR	01B4	CSEG
SETGSB . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
SGS  . . . . . . . . . . . . . .  	Number	0000	
SGSATS . . . . . . . . . . . . .  	Number	0000	
SHORTJ . . . . . . . . . . . . .  	Number	0001	
SHTCHN . . . . . . . . . . . . .  	Number	0000	
SHTERR . . . . . . . . . . . . .  	Number	0000	
SHTINS . . . . . . . . . . . . .  	Number	0000	
SHTLHM . . . . . . . . . . . . .  	Number	0000	
SHTLIN . . . . . . . . . . . . .  	Number	0000	
SHTPRO . . . . . . . . . . . . .  	Number	0000	
SHTREN . . . . . . . . . . . . .  	Number	0000	
SIGN . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
SIGNC  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
SIGNS  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
SIRIUS . . . . . . . . . . . . .  	Number	0000	
SIXDIG . . . . . . . . . . . . .  	Number	0000	
SMALL  . . . . . . . . . . . . .  	Number	0000	
SNGFLT . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
SNGQTK . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
SPACE$ . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
SPCDSK . . . . . . . . . . . . .  	Number	0000	
SPCNDS . . . . . . . . . . . . .  	Number	0000	
SPCTAB . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
SQRTK  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
STEPTK . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
STKINI . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
STMDSP . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
STOP . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
STPEND . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
STPRDY . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
STRCMP . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
STRCPY . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
STREND . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
STRH$  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
STRING . . . . . . . . . . . . .  	Number	0001	
STRLIT . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
STRLT2 . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
STRLT3 . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
STRLTI . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
STRNG$ . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
STRO$  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
STROUI . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
STROUT . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
STRPRT . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
STRSIZ . . . . . . . . . . . . .  	Number	0003	
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Symbols-13
                                                             

SUBFLG . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
SUPRSH . . . . . . . . . . . . .  	Number	0001	
SWAPSW . . . . . . . . . . . . .  	Number	0001	
SYNCHR . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External

TEK  . . . . . . . . . . . . . .  	Number	0000	
TEMP . . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
TEMP2  . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
TEMP3  . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
TEMPA  . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
TEMPST . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
TETRA  . . . . . . . . . . . . .  	Number	0000	
THENTK . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
TIMSHR . . . . . . . . . . . . .  	Number	0000	
TOFF . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
TON  . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
TRCFLG . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
TRNCHR . . . . . . . . . . . . .  	Number	0000	
TRSER2 . . . . . . . . . . . . .  	Number	0000	
TRSHHC . . . . . . . . . . . . .  	Number	0000	
TRUANS . . . . . . . . . . . . .  	Number	0000	
TRUROM . . . . . . . . . . . . .  	Number	0001	
TSDISK . . . . . . . . . . . . .  	Number	0000	
TSHIBA . . . . . . . . . . . . .  	Number	0000	
TSLPT  . . . . . . . . . . . . .  	Number	0000	
TSTANM . . . . . . . . . . . . .  	L NEAR	028B	CSEG	Global
TXTTAB . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
TYPSET . . . . . . . . . . . . .  	L NEAR	02F4	CSEG

UCEMSG . . . . . . . . . . . . .  	Number	0000	
UMULT  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
USA  . . . . . . . . . . . . . .  	Number	0000	
USRTAB . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
USRTK  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External

VALINT . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
VALSNG . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
VALTYP . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
VARTAB . . . . . . . . . . . . .  	V WORD 	0000	DSEG	External
VDFACS . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
VMOVAF . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
VMOVE  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
VMOVFA . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
VMOVFM . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
VMOVMF . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
VNEG . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
VSIGN  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External

WEND . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
WHILE  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
WRITE  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External

XTNSYS . . . . . . . . . . . . .  	Number	0000	

Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Symbols-14
                                                             

Z80  . . . . . . . . . . . . . .  	Number	0001	
Z80MAC . . . . . . . . . . . . .  	Number	0001	
ZENITH . . . . . . . . . . . . .  	Number	0000	
ZERE . . . . . . . . . . . . . .  	L NEAR	032C	CSEG
ZERO . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External

$DATA  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
$DATCO . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
$DELETE  . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
$EDIT  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
$ELSE  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
$END . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
$ERL . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
$ERROR . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
$FN  . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
$FOR . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
$GOSUB . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
$GOTO  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
$IF  . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
$INKEY$  . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
$INPUT . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
$LIST  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
$LLIST . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
$NEXT  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
$OVMSG . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
$POINT . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
$PRINT . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
$REM . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
$REMCO . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
$RENUM . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
$RESTORE . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
$RESUME  . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
$RETURN  . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
$RND . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
$RUN . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
$SCREEN  . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
$STOP  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
$STRING$ . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
$THEN  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
$TO  . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
$USR . . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
$VARPTR  . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
$WEND  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
$WHILE . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
??L000 . . . . . . . . . . . . .  	L NEAR	003F	CSEG
??L001 . . . . . . . . . . . . .  	L NEAR	0058	CSEG
??L002 . . . . . . . . . . . . .  	L NEAR	008A	CSEG
??L003 . . . . . . . . . . . . .  	L NEAR	0091	CSEG
??L004 . . . . . . . . . . . . .  	L NEAR	00A8	CSEG
??L005 . . . . . . . . . . . . .  	L NEAR	011D	CSEG
??L006 . . . . . . . . . . . . .  	L NEAR	0154	CSEG
??L007 . . . . . . . . . . . . .  	L NEAR	01CE	CSEG
??L008 . . . . . . . . . . . . .  	L NEAR	01D5	CSEG
??L009 . . . . . . . . . . . . .  	L NEAR	021A	CSEG
Microsoft (R) Macro Assembler  Version 4.00                 2/7/21 10:26:52
 
GWLIST Copied from BINTRP.MAC                               Symbols-15
                                                             

??L010 . . . . . . . . . . . . .  	L NEAR	0261	CSEG
??L011 . . . . . . . . . . . . .  	L NEAR	0278	CSEG
??L012 . . . . . . . . . . . . .  	L NEAR	027E	CSEG
??L013 . . . . . . . . . . . . .  	L NEAR	02B0	CSEG
??L014 . . . . . . . . . . . . .  	L NEAR	02B7	CSEG
??L015 . . . . . . . . . . . . .  	L NEAR	02FD	CSEG
??L016 . . . . . . . . . . . . .  	L NEAR	0366	CSEG
?I . . . . . . . . . . . . . . .  	Number	0000	
_OFFST . . . . . . . . . . . . .  	Number	00C2	


   1518 Source  Lines
   1641 Total   Lines
    749 Symbols

  26270 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
